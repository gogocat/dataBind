{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/binder.js","src/bindings.js","src/config.js","src/domWalker.js","src/forOfBinding.js","src/index.js","src/pubSub.js","src/util.js"],"names":[],"mappings":"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","file":"dataBind.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","import * as config from './config';\r\nimport * as util from './util';\r\nimport * as binds from './bindings';\r\nimport createBindingCache from './domWalker';\r\nimport * as pubSub from './pubSub';\r\n\r\nlet compIdIndex = 0;\r\nconst rootDataKey = config.bindingDataReference.rootDataKey;\r\n\r\nclass Binder {\r\n    constructor($rootElement, viewModel, bindingAttrs) {\r\n        if (\r\n            !$rootElement instanceof jQuery ||\r\n            !$rootElement.length ||\r\n            viewModel === null ||\r\n            typeof viewModel !== 'object'\r\n        ) {\r\n            throw new TypeError('$rootElement or viewModel is invalid');\r\n        }\r\n\r\n        this.initRendered = false;\r\n\r\n        this.compId = compIdIndex += 1;\r\n\r\n        this.$rootElement = $rootElement.eq(0);\r\n\r\n        this.viewModel = viewModel;\r\n\r\n        this.bindingAttrs = bindingAttrs;\r\n\r\n        this.render = util.debounceRaf(this.render, this);\r\n\r\n        this.isServerRendered =\r\n            typeof this.$rootElement.attr(config.serverRenderedAttr) !== 'undefined';\r\n\r\n        // inject instance into viewModel\r\n        this.viewModel.APP = this;\r\n\r\n        this.parseView();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * parseView\r\n     * @description\r\n     * @return {this}\r\n     * traver from $rootElement to find each data-bind-* element\r\n     * then apply data binding\r\n     */\r\n    parseView() {\r\n        // store viewModel data as $root for easy access\r\n        this.$rootElement.data(rootDataKey, this.viewModel);\r\n\r\n        this.elementCache = createBindingCache(this.$rootElement[0], this.bindingAttrs);\r\n\r\n        // updateElementCache if server rendered on init\r\n        if (this.isServerRendered && !this.initRendered) {\r\n            this.updateElementCache({\r\n                templateCache: true,\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * updateElementCache\r\n     * @param {object} opt\r\n     * @description call createBindingCache to parse view and generate bindingCache\r\n     */\r\n    updateElementCache(opt = {}) {\r\n        if (opt.allCache) {\r\n            this.elementCache = createBindingCache(this.$rootElement[0], this.bindingAttrs);\r\n        }\r\n        // walk from first rendered template node to create/update child bindingCache\r\n        if (opt.allCache || opt.templateCache) {\r\n            if (\r\n                this.elementCache[this.bindingAttrs.tmp] &&\r\n                this.elementCache[this.bindingAttrs.tmp].length\r\n            ) {\r\n                this.elementCache[this.bindingAttrs.tmp].forEach((cache) => {\r\n                    cache.bindingCache = createBindingCache(cache.el, this.bindingAttrs);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render(opt = {}) {\r\n        let updateOption = {};\r\n        if (!this.initRendered) {\r\n            // only update eventsBinding if server rendered\r\n            if (this.isServerRendered) {\r\n                this.$rootElement.removeAttr(config.serverRenderedAttr);\r\n                updateOption = createBindingOption(\r\n                    config.bindingUpdateConditions.serverRendered,\r\n                    opt\r\n                );\r\n            } else {\r\n                updateOption = createBindingOption(config.bindingUpdateConditions.init, opt);\r\n            }\r\n        } else {\r\n            // when called again only update visualBinding options\r\n            updateOption = createBindingOption('', opt);\r\n        }\r\n\r\n        // render and apply binding to template(s) and forOf DOM\r\n        if (\r\n            this.elementCache[this.bindingAttrs.tmp] &&\r\n            this.elementCache[this.bindingAttrs.tmp].length\r\n        ) {\r\n            // when re-render call with {templateBinding: true}\r\n            // template and nested templates\r\n            if (updateOption.templateBinding) {\r\n                // overwrite updateOption with 'init' bindingUpdateConditions\r\n                updateOption = createBindingOption(config.bindingUpdateConditions.init);\r\n\r\n                this.elementCache[this.bindingAttrs.tmp].forEach(($element) => {\r\n                    binds.renderTemplate(\r\n                        $element,\r\n                        this.viewModel,\r\n                        this.bindingAttrs,\r\n                        this.elementCache\r\n                    );\r\n                });\r\n                // update cache after all template(s) rendered\r\n                this.updateElementCache({\r\n                    templateCache: true,\r\n                });\r\n            }\r\n            // apply bindings to rendered templates element\r\n            this.elementCache[this.bindingAttrs.tmp].forEach((cache) => {\r\n                Binder.applyBinding({\r\n                    elementCache: cache.bindingCache,\r\n                    updateOption: updateOption,\r\n                    bindingAttrs: this.bindingAttrs,\r\n                    viewModel: this.viewModel,\r\n                });\r\n            });\r\n        }\r\n\r\n        // apply bindings to rest of the DOM\r\n        Binder.applyBinding({\r\n            elementCache: this.elementCache,\r\n            updateOption: updateOption,\r\n            bindingAttrs: this.bindingAttrs,\r\n            viewModel: this.viewModel,\r\n        });\r\n\r\n        this.initRendered = true;\r\n    }\r\n\r\n    static applyBinding(opt = {}) {\r\n        const {elementCache, updateOption, bindingAttrs, viewModel} = opt;\r\n\r\n        if (!elementCache && !updateOption) {\r\n            return;\r\n        }\r\n\r\n        // the follow binding should be in order for better efficiency\r\n\r\n        // apply forOf Binding\r\n        if (\r\n            updateOption.forOfBinding &&\r\n            elementCache[bindingAttrs.forOf] &&\r\n            elementCache[bindingAttrs.forOf].length\r\n        ) {\r\n            elementCache[bindingAttrs.forOf].forEach((cache) => {\r\n                binds.forOfBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply attr Binding\r\n        if (\r\n            updateOption.attrBinding &&\r\n            elementCache[bindingAttrs.attr] &&\r\n            elementCache[bindingAttrs.attr].length\r\n        ) {\r\n            elementCache[bindingAttrs.attr].forEach((cache) => {\r\n                binds.attrBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply show Binding\r\n        if (\r\n            updateOption.showBinding &&\r\n            elementCache[bindingAttrs.show] &&\r\n            elementCache[bindingAttrs.show].length\r\n        ) {\r\n            elementCache[bindingAttrs.show].forEach((cache) => {\r\n                binds.showBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n        // apply text binding\r\n        if (\r\n            updateOption.textBinding &&\r\n            elementCache[bindingAttrs.text] &&\r\n            elementCache[bindingAttrs.text].length\r\n        ) {\r\n            elementCache[bindingAttrs.text].forEach((cache) => {\r\n                binds.textBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply cssBinding\r\n        if (\r\n            updateOption.cssBinding &&\r\n            elementCache[bindingAttrs.css] &&\r\n            elementCache[bindingAttrs.css].length\r\n        ) {\r\n            elementCache[bindingAttrs.css].forEach((cache) => {\r\n                binds.cssBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply model binding\r\n        if (\r\n            updateOption.modelBinding &&\r\n            elementCache[bindingAttrs.model] &&\r\n            elementCache[bindingAttrs.model].length\r\n        ) {\r\n            elementCache[bindingAttrs.model].forEach((cache) => {\r\n                binds.modelBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply change binding\r\n        if (\r\n            updateOption.changeBinding &&\r\n            elementCache[bindingAttrs.change] &&\r\n            elementCache[bindingAttrs.change].length\r\n        ) {\r\n            elementCache[bindingAttrs.change].forEach((cache) => {\r\n                binds.changeBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply submit binding\r\n        if (\r\n            updateOption.submitBinding &&\r\n            elementCache[bindingAttrs.submit] &&\r\n            elementCache[bindingAttrs.submit].length\r\n        ) {\r\n            elementCache[bindingAttrs.submit].forEach((cache) => {\r\n                binds.submitBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply click binding\r\n        if (\r\n            updateOption.clickBinding &&\r\n            elementCache[bindingAttrs.click] &&\r\n            elementCache[bindingAttrs.click].length\r\n        ) {\r\n            elementCache[bindingAttrs.click].forEach((cache) => {\r\n                binds.clickBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply double click binding\r\n        if (\r\n            updateOption.dblclickBinding &&\r\n            elementCache[bindingAttrs.dblclick] &&\r\n            elementCache[bindingAttrs.dblclick].length\r\n        ) {\r\n            elementCache[bindingAttrs.dblclick].forEach((cache) => {\r\n                binds.dblclickBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply blur binding\r\n        if (\r\n            updateOption.blurBinding &&\r\n            elementCache[bindingAttrs.blur] &&\r\n            elementCache[bindingAttrs.blur].length\r\n        ) {\r\n            elementCache[bindingAttrs.blur].forEach((cache) => {\r\n                binds.blurBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n\r\n        // apply focus binding\r\n        if (\r\n            updateOption.focus &&\r\n            elementCache[bindingAttrs.focus] &&\r\n            elementCache[bindingAttrs.focus].length\r\n        ) {\r\n            elementCache[bindingAttrs.focus].forEach((cache) => {\r\n                binds.focusBinding(cache, viewModel, bindingAttrs);\r\n            });\r\n        }\r\n    }\r\n\r\n    subscribe(eventName = '', fn) {\r\n        pubSub.subscribeEvent(this, eventName, fn);\r\n        return this;\r\n    }\r\n\r\n    subscribeOnce(eventName = '', fn) {\r\n        pubSub.subscribeEventOnce(this, eventName, fn);\r\n        return this;\r\n    }\r\n\r\n    unsubscribe(eventName = '') {\r\n        pubSub.unsubscribeEvent(this.compId, eventName);\r\n        return this;\r\n    }\r\n\r\n    unsubscribeAll() {\r\n        pubSub.unsubscribeAllEvent(this.compId);\r\n        return this;\r\n    }\r\n\r\n    publish(eventName = '', ...args) {\r\n        pubSub.publishEvent(eventName, ...args);\r\n        return this;\r\n    }\r\n}\r\n\r\n/**\r\n * createBindingOption\r\n * @param {string} condition\r\n * @param {object} opt\r\n * @description\r\n * generate binding update option object by condition\r\n * @return {object} updateOption\r\n */\r\nconst createBindingOption = (condition = '', opt = {}) => {\r\n    let visualBindingOptions = {\r\n        templateBinding: false,\r\n        textBinding: true,\r\n        cssBinding: true,\r\n        showBinding: true,\r\n        modelBinding: true,\r\n        attrBinding: true,\r\n        forOfBinding: true,\r\n    };\r\n    let eventsBindingOptions = {\r\n        changeBinding: true,\r\n        clickBinding: true,\r\n        dblclickBinding: true,\r\n        blurBinding: true,\r\n        focusBinding: true,\r\n        submitBinding: true,\r\n    };\r\n    // this is visualBindingOptions but everything fals\r\n    // keep it static instead dynamic for performance purpose\r\n    let serverRenderedOptions = {\r\n        templateBinding: false,\r\n        textBinding: false,\r\n        cssBinding: false,\r\n        showBinding: false,\r\n        modelBinding: false,\r\n        attrBinding: false,\r\n        forOfBinding: false,\r\n    };\r\n    let updateOption = {};\r\n\r\n    switch (condition) {\r\n    case config.bindingUpdateConditions.serverRendered:\r\n        updateOption = util.extend({}, eventsBindingOptions, serverRenderedOptions, opt);\r\n        break;\r\n    case config.bindingUpdateConditions.init:\r\n        // flag templateBinding to true to render tempalte(s)\r\n        opt.templateBinding = true;\r\n        updateOption = util.extend({}, visualBindingOptions, eventsBindingOptions, opt);\r\n        break;\r\n    default:\r\n        // when called again only update visualBinding options\r\n        updateOption = util.extend({}, visualBindingOptions, opt);\r\n    }\r\n\r\n    return updateOption;\r\n};\r\n\r\nexport {Binder, createBindingOption};\r\n","/* eslint-disable no-invalid-this */\r\nimport * as config from './config';\r\nimport * as util from './util';\r\nimport renderForOfBinding from './forOfBinding';\r\n\r\nlet $domFragment = null;\r\nlet $templateRoot = null;\r\nlet nestTemplatesCount = 0;\r\nlet templateCache = {};\r\nlet elementDataNamespace = 'dataBind';\r\n\r\n/**\r\n * compileTemplate\r\n * @description compile underscore template and store in templateCache\r\n * @param {string} id\r\n * @param {object} templateData\r\n * @return {string} rendered html string\r\n */\r\nconst compileTemplate = (id, templateData = null) => {\r\n    let templateString;\r\n    let templateElement;\r\n\r\n    if (templateCache[id]) {\r\n        return templateCache[id](templateData);\r\n    }\r\n    templateElement = document.getElementById(id);\r\n    templateString = templateElement ? templateElement.innerHTML : ''; // $('#' + id).html() || '';\r\n    templateCache[id] = _.template(templateString, {\r\n        variable: 'data',\r\n    });\r\n\r\n    return templateCache[id](templateData);\r\n};\r\n\r\n/**\r\n * renderTemplate\r\n * @description\r\n * get template setting from DOM attribute then call compileTemplate\r\n * to render and append to target DOM\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {object} elementCache\r\n */\r\nconst renderTemplate = (cache, viewModel, bindingAttrs, elementCache) => {\r\n    let settings = util.parseStringToJson(cache.dataKey);\r\n    let viewData =\r\n        settings.data === '$root' ? viewModel : util.getViewModelValue(viewModel, settings.data);\r\n    let isAppend = settings.append;\r\n    let isPrepend = settings.prepend;\r\n    let html;\r\n    let $element;\r\n    let $index;\r\n    let $currentElement;\r\n    let $nestedTemplates;\r\n\r\n    if (!viewData) {\r\n        return;\r\n    }\r\n\r\n    $element = $(cache.el);\r\n    $index = $element.attr(config.dataIndexAttr);\r\n    if ($index) {\r\n        viewData.$index = $index;\r\n    }\r\n    $domFragment = $domFragment ? $domFragment : $('<div/>');\r\n    $templateRoot = $templateRoot ? $templateRoot : $element;\r\n    html = compileTemplate(settings.id, viewData);\r\n\r\n    // domFragment should be empty in first run\r\n    // append rendered html\r\n    if (!$domFragment.children().length) {\r\n        $currentElement = $domFragment;\r\n        $domFragment.append(html);\r\n    } else {\r\n        $currentElement = $element;\r\n        $currentElement.append(html);\r\n    }\r\n\r\n    // check if there are nested template then recurisive render them\r\n    $nestedTemplates = $currentElement.find('[' + bindingAttrs.tmp + ']');\r\n\r\n    if ($nestedTemplates.length) {\r\n        nestTemplatesCount += $nestedTemplates.length;\r\n        $nestedTemplates.each(function(index, element) {\r\n            let thisTemplateCache = {\r\n                el: element,\r\n                dataKey: element.getAttribute(bindingAttrs.tmp),\r\n            };\r\n            elementCache[bindingAttrs.tmp].push(thisTemplateCache);\r\n            // recursive template render\r\n            renderTemplate(thisTemplateCache, viewModel, bindingAttrs, elementCache);\r\n            nestTemplatesCount -= 1;\r\n        });\r\n    }\r\n\r\n    // no more nested tempalted to render, start to append $domFragment into $templateRoot\r\n    if (nestTemplatesCount === 0) {\r\n        // append to DOM once\r\n        if (!isAppend && !isPrepend) {\r\n            $templateRoot.empty();\r\n        }\r\n        if (isPrepend) {\r\n            $templateRoot.prepend($domFragment.html());\r\n        } else {\r\n            $templateRoot.append($domFragment.html());\r\n        }\r\n        // clear cached fragment\r\n        $domFragment = $templateRoot = null;\r\n        // trigger callback if provided\r\n        if (typeof viewModel.afterTemplateRender === 'function') {\r\n            viewModel.afterTemplateRender(viewData);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * clickBinding\r\n * @description\r\n * DOM decleartive click event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst clickBinding = (cache, viewModel, bindingAttrs) => {\r\n    let handlerName = cache.dataKey;\r\n    let handlerFn;\r\n    let $element;\r\n\r\n    if (!handlerName) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = util.getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        $element = $(cache.el);\r\n        $element.off('click.databind').on('click.databind', function(e) {\r\n            handlerFn.call(viewModel, e, $element);\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * dblclickBinding\r\n * DOM decleartive double click event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst dblclickBinding = (cache, viewModel, bindingAttrs) => {\r\n    let handlerName = cache.dataKey;\r\n    let handlerFn;\r\n    let $element;\r\n\r\n    if (!handlerName) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = util.getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        $element = $(cache.el);\r\n        $element.off('dblclick.databind').on('dblclick.databind', function(e) {\r\n            handlerFn.call(viewModel, e, $element);\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * blurBinding\r\n * DOM decleartive on blur event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst blurBinding = (cache, viewModel, bindingAttrs) => {\r\n    let handlerName = cache.dataKey;\r\n    let handlerFn;\r\n    let $element;\r\n\r\n    if (!handlerName) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = util.getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        $element = $(cache.el);\r\n        $element.off('blur.databind').on('blur.databind', function(e) {\r\n            handlerFn.call(viewModel, e, $element);\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * focusBinding\r\n * DOM decleartive on focus event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst focusBinding = (cache, viewModel, bindingAttrs) => {\r\n    let handlerName = cache.dataKey;\r\n    let handlerFn;\r\n    let $element;\r\n\r\n    if (!handlerName) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = util.getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        $element = $(cache.el);\r\n        $element.off('focus.databind').on('focus.databind', function(e) {\r\n            handlerFn.call(viewModel, e, $element);\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * changeBinding\r\n * @description input element on change event binding. DOM -> viewModel update\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst changeBinding = (cache, viewModel, bindingAttrs) => {\r\n    let handlerName = cache.dataKey;\r\n    let modelDataKey = cache.el.getAttribute(bindingAttrs.model);\r\n    let handlerFn;\r\n    let isCheckbox;\r\n    let newValue;\r\n    let oldValue;\r\n    let $element;\r\n\r\n    if (!handlerName) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = util.getViewModelValue(viewModel, handlerName);\r\n\r\n    $element = $(cache.el);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        isCheckbox = $element.is(':checkbox');\r\n        // assing on change event\r\n        $element.off('change.databind').on('change.databind', function(e) {\r\n            newValue = isCheckbox ? $element.prop('checked') : _.escape($element.val());\r\n            // set data to viewModel\r\n            if (modelDataKey) {\r\n                oldValue = util.getViewModelValue(viewModel, modelDataKey);\r\n                util.setViewModelValue(viewModel, modelDataKey, newValue);\r\n            }\r\n            handlerFn.call(viewModel, e, $element, newValue, oldValue);\r\n            oldValue = newValue;\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * modelBinding\r\n * @description input element data binding. viewModel -> DOM update\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst modelBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n    let newValue;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    newValue = util.getViewModelValue(viewModel, dataKey);\r\n\r\n    if (typeof newValue !== 'undefined' && newValue !== null) {\r\n        let $element = $(cache.el);\r\n        let isCheckbox = $element.is(':checkbox');\r\n        let isRadio = $element.is(':radio');\r\n        let inputName = $element[0].name;\r\n        let $radioGroup = isRadio ? $('input[name=\"' + inputName + '\"]') : null;\r\n        let oldValue = isCheckbox ? $element.prop('checked') : $element.val();\r\n\r\n        // update element value\r\n        if (newValue !== oldValue) {\r\n            if (isCheckbox) {\r\n                $element.prop('checked', Boolean(newValue));\r\n            } else if (isRadio) {\r\n                $radioGroup.val([newValue]);\r\n            } else {\r\n                $element.val(newValue);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * submitBinding\r\n * @description on form submit binding. pass current form data as json object to handler\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst submitBinding = (cache, viewModel, bindingAttrs) => {\r\n    let handlerName = cache.dataKey;\r\n    let handlerFn;\r\n    let $element;\r\n\r\n    if (!handlerName) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = util.getViewModelValue(viewModel, handlerName);\r\n    $element = $(cache.el);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        // assing on change event\r\n        $element.off('submit.databind').on('submit.databind', function(e) {\r\n            handlerFn.call(viewModel, e, $element, util.getFormData($element));\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * textBinding\r\n * * @description\r\n * DOM decleartive text binding update dom textnode with viewModel data\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst textBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    let newValue = util.getViewModelValue(viewModel, dataKey);\r\n    let oldValue = cache.el.textContent;\r\n\r\n    if (typeof newValue !== 'undefined' && newValue !== null) {\r\n        if (newValue !== oldValue) {\r\n            cache.el.textContent = newValue;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * showBinding\r\n * @description\r\n * DOM decleartive show binding. Make binding show/hide according to viewModel data (boolean)\r\n * viewModel data can function but must return boolean\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst showBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    let $element = $(cache.el);\r\n    let elementData = $element.data(elementDataNamespace) || {};\r\n    let oldShowStatus = elementData.showStatus;\r\n    let isInvertBoolean = dataKey.charAt(0) === '!';\r\n    let shouldShow;\r\n\r\n    dataKey = isInvertBoolean ? dataKey.substring(1) : dataKey;\r\n    shouldShow = util.getViewModelValue(viewModel, dataKey);\r\n\r\n    // do nothing if data in viewModel is undefined\r\n    if (typeof shouldShow !== 'undefined' && shouldShow !== null) {\r\n        if (typeof shouldShow === 'function') {\r\n            shouldShow = shouldShow.call(viewModel, oldShowStatus, $element);\r\n        }\r\n\r\n        shouldShow = Boolean(shouldShow);\r\n\r\n        // reject if nothing changed\r\n        if (oldShowStatus === shouldShow) {\r\n            return;\r\n        }\r\n\r\n        // store new show status\r\n        elementData.showStatus = shouldShow;\r\n        $element.data(elementDataNamespace, elementData);\r\n\r\n        // reverse if has '!' expression from DOM deceleration\r\n        if (isInvertBoolean) {\r\n            shouldShow = !shouldShow;\r\n        }\r\n        if (!shouldShow) {\r\n            $element.hide();\r\n        } else {\r\n            $element.show();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * cssBinding\r\n * @description\r\n * DOM decleartive css binding. update classlist.\r\n * viewModel data can function but must return JSOL.\r\n * added css class if value is true\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst cssBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    let $element = $(cache.el);\r\n    let elementData = $element.data(elementDataNamespace) || {};\r\n    let oldCssList = elementData.cssList || '';\r\n    let newCssList = '';\r\n    let vmCssListObj = util.getViewModelValue(viewModel, dataKey);\r\n    let vmCssListArray;\r\n    let isViewDataObject = false;\r\n    let isViewDataString = false;\r\n    let domCssList;\r\n    let cssList = [];\r\n\r\n    if (typeof vmCssListObj === 'function') {\r\n        vmCssListObj = vmCssListObj.call(viewModel, oldCssList, $element);\r\n    }\r\n\r\n    if (util.isPlainObject(vmCssListObj)) {\r\n        isViewDataObject = true;\r\n    } else if (typeof vmCssListObj === 'string') {\r\n        isViewDataString = true;\r\n    } else {\r\n        // reject if vmCssListObj is not an object or string\r\n        return;\r\n    }\r\n\r\n    if (isViewDataObject) {\r\n        newCssList = JSON.stringify(vmCssListObj);\r\n    } else {\r\n        newCssList = vmCssListObj.replace(/\\s\\s+/g, ' ').trim();\r\n        vmCssListArray = newCssList.split(' ');\r\n    }\r\n    // reject if nothing changed\r\n    if (oldCssList === newCssList) {\r\n        return;\r\n    }\r\n\r\n    // get current css classes from element\r\n    domCssList = cache.el.classList;\r\n    // clone domCssList as new array\r\n    $.each(domCssList, function(i, v) {\r\n        cssList.push(v);\r\n    });\r\n\r\n    if (isViewDataObject) {\r\n        $.each(vmCssListObj, function(k, v) {\r\n            let i = cssList.indexOf(k);\r\n            if (v === true) {\r\n                cssList.push(k);\r\n            } else if (i !== -1) {\r\n                cssList.splice(i, 1);\r\n            }\r\n        });\r\n    } else if (isViewDataString) {\r\n        // remove oldCssList items from cssList\r\n        cssList = util.arrayRemoveMatch(cssList, oldCssList);\r\n        cssList = cssList.concat(vmCssListArray);\r\n    }\r\n\r\n    // unique cssList array\r\n    cssList = _.uniq(cssList).join(' ');\r\n    // replace all css classes\r\n    $element.attr('class', cssList);\r\n    // update element data\r\n    elementData.cssList = newCssList;\r\n    $element.data(elementDataNamespace, elementData);\r\n};\r\n\r\n/**\r\n * attrBinding\r\n * @description\r\n * DOM decleartive attr binding. update elenment attributes\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst attrBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    let $element = $(cache.el);\r\n    let elementData = $element.data(elementDataNamespace) || {};\r\n    let oldAttrObj = elementData.attrObj || {};\r\n    let vmAttrObj = util.getViewModelValue(viewModel, dataKey);\r\n\r\n    if (typeof vmAttrObj === 'function') {\r\n        vmAttrObj = vmAttrObj.call(viewModel, oldAttrObj, $element);\r\n    }\r\n\r\n    if (!util.isPlainObject(vmAttrObj) || util.isEmptyObject(vmAttrObj)) {\r\n        // reject if vmAttrListObj is not an object or empty\r\n        return;\r\n    }\r\n\r\n    // reject if nothing changed\r\n    if (JSON.stringify(oldAttrObj) === JSON.stringify(vmAttrObj)) {\r\n        return;\r\n    }\r\n\r\n    // get current DOM element attributes object\r\n    // let domAttrObj = util.getNodeAttrObj(cache.el, [bindingAttrs.attr]);\r\n\r\n    if (util.isEmptyObject(oldAttrObj)) {\r\n        for (let key in vmAttrObj) {\r\n            if (vmAttrObj.hasOwnProperty(key)) {\r\n                cache.el.setAttribute(key, vmAttrObj[key]);\r\n            }\r\n        }\r\n    } else {\r\n        for (let key in oldAttrObj) {\r\n            if (oldAttrObj.hasOwnProperty(key)) {\r\n                if (vmAttrObj[key] === undefined) {\r\n                    // remove attribute if not present in current vm\r\n                    cache.el.removeAttribute(key);\r\n                }\r\n            }\r\n        }\r\n        for (let key in vmAttrObj) {\r\n            if (vmAttrObj.hasOwnProperty(key)) {\r\n                if (oldAttrObj[key] !== vmAttrObj[key]) {\r\n                    // update attribute if value changed\r\n                    cache.el.setAttribute(key, vmAttrObj[key]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // update element data\r\n    elementData.attrObj = vmAttrObj;\r\n    $element.data(elementDataNamespace, elementData);\r\n};\r\n\r\n/**\r\n * forOfBinding\r\n * @description\r\n * DOM decleartive for binding.\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst forOfBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    if (!cache.iterator) {\r\n        let forExpMatch = dataKey.match(util.REGEX.FOROF);\r\n\r\n        if (!forExpMatch) {\r\n            return;\r\n        }\r\n\r\n        cache.iterator = {};\r\n        cache.iterator.alias = forExpMatch[1].trim();\r\n\r\n        if (forExpMatch[2]) {\r\n            cache.iterator.dataKey = forExpMatch[2].trim();\r\n            cache.parentElement = cache.el.parentElement;\r\n            cache.previousNonTemplateElement = cache.el.previousSibling;\r\n            cache.nextNonTemplateElement = cache.el.nextSibling;\r\n        }\r\n    }\r\n\r\n    renderForOfBinding(cache, viewModel, bindingAttrs);\r\n};\r\n\r\nexport {\r\n    renderTemplate,\r\n    clickBinding,\r\n    dblclickBinding,\r\n    blurBinding,\r\n    focusBinding,\r\n    changeBinding,\r\n    modelBinding,\r\n    submitBinding,\r\n    textBinding,\r\n    showBinding,\r\n    cssBinding,\r\n    attrBinding,\r\n    forOfBinding,\r\n};\r\n","const bindingAttrs = {\r\n    comp: 'data-jq-comp',\r\n    tmp: 'data-jq-tmp',\r\n    text: 'data-jq-text',\r\n    click: 'data-jq-click',\r\n    dblclick: 'data-jq-dblclick',\r\n    blur: 'data-jq-blur',\r\n    focus: 'data-jq-focus',\r\n    change: 'data-jq-change',\r\n    submit: 'data-jq-submit',\r\n    model: 'data-jq-model',\r\n    show: 'data-jq-show',\r\n    css: 'data-jq-css',\r\n    attr: 'data-jq-attr',\r\n    forOf: 'data-jq-for',\r\n};\r\nconst serverRenderedAttr = 'data-server-rendered';\r\nconst dataIndexAttr = 'data-index';\r\nconst commentPrefix = 'data-forOf-';\r\n\r\n// global setting of underscore template inteprolate default token\r\nconst templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /\\{\\{=(.+?)\\}\\}/g,\r\n    escape: /\\{\\{(.+?)\\}\\}/g,\r\n};\r\n\r\nconst bindingDataReference = {\r\n    rootDataKey: '$root',\r\n    currentData: '$data',\r\n    currentIndex: '$index',\r\n};\r\n\r\nconst bindingUpdateConditions = {\r\n    serverRendered: 'SERVER-RENDERED',\r\n    init: 'INIT',\r\n};\r\n\r\nexport {\r\n    bindingAttrs,\r\n    dataIndexAttr,\r\n    templateSettings,\r\n    serverRenderedAttr,\r\n    commentPrefix,\r\n    bindingUpdateConditions,\r\n    bindingDataReference,\r\n};\r\n","import * as util from './util';\r\n\r\nlet bindingAttrsMap;\r\n\r\n/**\r\n * walkDOM\r\n * @description by Douglas Crockford - walk each DOM node and calls provided callback function\r\n * start walk from firstChild\r\n * @param {object} node\r\n * @param {function} func\r\n */\r\nconst walkDOM = (node, func) => {\r\n    let parseChildNode = true;\r\n    node = node.firstElementChild;\r\n    while (node) {\r\n        parseChildNode = func(node);\r\n        if (parseChildNode) {\r\n            walkDOM(node, func);\r\n        }\r\n        node = node.nextElementSibling;\r\n    }\r\n};\r\n\r\nconst getAttributesObject = (node) => {\r\n    let ret = {};\r\n    Array.prototype.slice.call(node.attributes).forEach((item) => {\r\n        ret[item.name] = item.value;\r\n    });\r\n    return ret;\r\n};\r\n\r\nconst createBindingCache = (rootNode = null, bindingAttrs = {}, skipCheck) => {\r\n    let bindingCache = {};\r\n\r\n    if (!rootNode instanceof window.Node) {\r\n        throw new TypeError('walkDOM: Expected a DOM node');\r\n    }\r\n\r\n    bindingAttrsMap = bindingAttrsMap || util.invertObj(bindingAttrs);\r\n\r\n    const rootSkipCheck = (node) => {\r\n        return node.tagName === 'SVG';\r\n    };\r\n\r\n    const defaultSkipCheck =\r\n        typeof skipCheck === 'function'\r\n            ? skipCheck\r\n            : (node) => {\r\n                return node.tagName === 'SVG' || node.getAttribute(bindingAttrs.comp);\r\n            };\r\n\r\n    const parseNode = (node, skipCheckFn = defaultSkipCheck) => {\r\n        let attrObj;\r\n        let attrValue;\r\n        let cacheData;\r\n\r\n        if (node.nodeType === 1 && node.hasAttributes()) {\r\n            if (skipCheckFn(node)) {\r\n                return false;\r\n            }\r\n\r\n            attrObj = getAttributesObject(node);\r\n\r\n            Object.keys(attrObj).forEach((key) => {\r\n                if (bindingAttrsMap[key] && attrObj[key]) {\r\n                    bindingCache[key] = bindingCache[key] || [];\r\n                    attrValue = attrObj[key].trim();\r\n                    cacheData = {\r\n                        el: node,\r\n                        dataKey: attrValue,\r\n                    };\r\n\r\n                    // TODO - for store function call parameters eg. '$data', '$root'\r\n                    // useful with DOM for-loop template as reference to binding data\r\n                    let paramList = util.getFunctionParameterList(attrValue);\r\n                    if (paramList) {\r\n                        cacheData.parameters = paramList;\r\n                        cacheData.dataKey = cacheData.dataKey\r\n                            .replace(util.REGEX.FUNCTIONPARAM, '')\r\n                            .trim();\r\n                    }\r\n\r\n                    bindingCache[key].push(cacheData);\r\n                }\r\n            });\r\n\r\n            // after cache forOf skip parse child nodes\r\n            if (attrObj[bindingAttrs.forOf]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    if (parseNode(rootNode, rootSkipCheck)) {\r\n        walkDOM(rootNode, parseNode);\r\n    }\r\n    return bindingCache;\r\n};\r\n\r\nexport default createBindingCache;\r\n","/* eslint-disable no-invalid-this */\r\nimport * as config from './config';\r\nimport * as util from './util';\r\nimport createBindingCache from './domWalker';\r\nimport {Binder, createBindingOption} from './binder';\r\n\r\nlet forOfCount = 0;\r\n\r\n/**\r\n * wrapCommentAround\r\n * @param {number} id\r\n * @param {domFragment} fragment\r\n * @return {object} DOM fragment\r\n * @description\r\n * wrap frament with comment node\r\n */\r\nconst wrapCommentAround = (id, fragment) => {\r\n    let commentBegin;\r\n    let commentEnd;\r\n    let prefix = config.commentPrefix + id;\r\n    commentBegin = document.createComment(prefix);\r\n    commentEnd = document.createComment(prefix + '-end');\r\n    fragment.insertBefore(commentBegin, fragment.firstChild);\r\n    fragment.appendChild(commentEnd);\r\n    return fragment;\r\n};\r\n\r\n/**\r\n * removeElemnetsByCommentWrap\r\n * @param {object} forOfBindingData\r\n * @return {undefined}\r\n * @description remove elments by range\r\n */\r\nconst removeElemnetsByCommentWrap = (forOfBindingData) => {\r\n    return forOfBindingData.docRange.deleteContents();\r\n};\r\n\r\n/**\r\n * removeDomTemplateElement\r\n * @param {object} forOfBindingData\r\n * @return {object} null\r\n */\r\nconst removeDomTemplateElement = (forOfBindingData) => {\r\n    // first render - forElement is live DOM element so has parentNode\r\n    if (forOfBindingData.el.parentNode) {\r\n        return forOfBindingData.el.parentNode.removeChild(forOfBindingData.el);\r\n    }\r\n    removeElemnetsByCommentWrap(forOfBindingData);\r\n};\r\n\r\n/**\r\n * setDocRangeEndAfter\r\n * @param {object} node\r\n * @param {object} forOfBindingData\r\n * @description\r\n * recursive execution to find last wrapping comment node\r\n * and set as forOfBindingData.docRange.setEndAfter\r\n * if not found deleteContents will has no operation\r\n */\r\nconst setDocRangeEndAfter = (node, forOfBindingData) => {\r\n    let id = forOfBindingData.id;\r\n    let startTextContent = config.commentPrefix + id;\r\n    let endTextContent = startTextContent + '-end';\r\n\r\n    node = node.nextSibling;\r\n\r\n    // check last wrap comment node\r\n    if (node) {\r\n        if (node.nodeType === 8 && node.textContent === endTextContent) {\r\n            forOfBindingData.docRange.setEndAfter(node);\r\n        }\r\n        setDocRangeEndAfter(node, forOfBindingData);\r\n    }\r\n};\r\n\r\nconst generateForOfElements = (forOfBindingData, viewModel, bindingAttrs, iterationData, keys) => {\r\n    let fragment = document.createDocumentFragment();\r\n    let iterationDataLength = forOfBindingData.iterationSize;\r\n    let clonedItem;\r\n    let iterationVm;\r\n    let iterationBindingCache;\r\n    let i = 0;\r\n\r\n    // create or clear exisitng iterationBindingCache\r\n    forOfBindingData.iterationBindingCache = forOfBindingData.iterationBindingCache\r\n        ? (forOfBindingData.iterationBindingCache.length = 0)\r\n        : [];\r\n\r\n    // generate forOf and append to DOM\r\n    for (i = 0; i < iterationDataLength; i += 1) {\r\n        clonedItem = util.cloneDomNode(forOfBindingData.el);\r\n        // create an iterationVm match iterator alias\r\n        iterationVm = {};\r\n        iterationVm[forOfBindingData.iterator.alias] = keys\r\n            ? iterationData[keys[i]]\r\n            : iterationData[i];\r\n        // populate common binding data reference\r\n        iterationVm[config.bindingDataReference.rootDataKey] = viewModel;\r\n        iterationVm[config.bindingDataReference.currentIndex] = i;\r\n\r\n        // create bindingCache per iteration\r\n        iterationBindingCache = createBindingCache(clonedItem, bindingAttrs);\r\n        forOfBindingData.iterationBindingCache.push(iterationBindingCache);\r\n\r\n        applyBindings({\r\n            elementCache: forOfBindingData.iterationBindingCache[i],\r\n            viewModel: iterationVm,\r\n            bindingAttrs: bindingAttrs,\r\n            isRegenerate: true,\r\n        });\r\n\r\n        fragment.appendChild(clonedItem);\r\n    }\r\n\r\n    return fragment;\r\n};\r\n\r\nconst insertRenderedElements = (forOfBindingData, fragment) => {\r\n    // wrap around with comment\r\n    fragment = wrapCommentAround(forOfBindingData.id, fragment);\r\n\r\n    // remove original dom template\r\n    removeDomTemplateElement(forOfBindingData);\r\n\r\n    // create range object\r\n    // TODO: if user deleted content. Then needs to clean up using Range.detach()\r\n    if (!forOfBindingData.docRange) {\r\n        forOfBindingData.docRange = document.createRange();\r\n    }\r\n\r\n    // insert rendered fragment after the previousNonTemplateElement\r\n    if (forOfBindingData.previousNonTemplateElement) {\r\n        util.insertAfter(\r\n            forOfBindingData.parentElement,\r\n            fragment,\r\n            forOfBindingData.previousNonTemplateElement\r\n        );\r\n        // update docRange start and end match the wrapped comment node\r\n        forOfBindingData.docRange.setStartBefore(\r\n            forOfBindingData.previousNonTemplateElement.nextSibling\r\n        );\r\n        setDocRangeEndAfter(\r\n            forOfBindingData.previousNonTemplateElement.nextSibling,\r\n            forOfBindingData\r\n        );\r\n    } else {\r\n        // insert before next non template element\r\n        if (forOfBindingData.nextNonTemplateElement) {\r\n            forOfBindingData.parentElement.insertBefore(\r\n                fragment,\r\n                forOfBindingData.nextNonTemplateElement\r\n            );\r\n        } else {\r\n            // insert from parent\r\n            forOfBindingData.parentElement.appendChild(fragment);\r\n        }\r\n        // update docRange start and end match the wrapped comment node\r\n        forOfBindingData.docRange.setStartBefore(forOfBindingData.parentElement.firstChild);\r\n        setDocRangeEndAfter(forOfBindingData.parentElement.firstChild, forOfBindingData);\r\n    }\r\n};\r\n\r\nconst applyBindings = ({elementCache, viewModel, bindingAttrs, isRegenerate}) => {\r\n    let bindingUpdateOption;\r\n    if (isRegenerate) {\r\n        bindingUpdateOption = createBindingOption(config.bindingUpdateConditions.init);\r\n    } else {\r\n        bindingUpdateOption = createBindingOption();\r\n    }\r\n\r\n    Binder.applyBinding({\r\n        elementCache: elementCache,\r\n        updateOption: bindingUpdateOption,\r\n        bindingAttrs: bindingAttrs,\r\n        viewModel: viewModel,\r\n    });\r\n};\r\n\r\nconst renderForOfBinding = (forOfBindingData, viewModel, bindingAttrs) => {\r\n    if (!forOfBindingData || !viewModel || !bindingAttrs) {\r\n        return;\r\n    }\r\n    let keys;\r\n    let iterationDataLength;\r\n    let iterationData = util.getViewModelValue(viewModel, forOfBindingData.iterator.dataKey);\r\n    let isRegenerate = false;\r\n\r\n    // check iterationData and set iterationDataLength\r\n    if (util.isArray(iterationData)) {\r\n        iterationDataLength = iterationData.length;\r\n    } else if (util.isPlainObject(iterationData)) {\r\n        keys = Object.keys(iterationData);\r\n        iterationDataLength = keys.length;\r\n    } else {\r\n        throw new TypeError('iterationData is not an plain object or array');\r\n    }\r\n\r\n    // assign forOf internal id to forOfBindingData once\r\n    if (typeof forOfBindingData.id === 'undefined') {\r\n        forOfBindingData.id = forOfCount;\r\n        forOfCount += 1;\r\n        // store iterationDataLength\r\n        forOfBindingData.iterationSize = iterationDataLength;\r\n        // remove orignal node for-of attributes\r\n        forOfBindingData.el.removeAttribute(bindingAttrs.forOf);\r\n        isRegenerate = true;\r\n    } else {\r\n        // only regenerate cache if iterationDataLength changed\r\n        isRegenerate = forOfBindingData.iterationSize !== iterationDataLength;\r\n    }\r\n\r\n    if (!isRegenerate) {\r\n        forOfBindingData.iterationBindingCache.each(function(elementCache) {\r\n            applyBindings({\r\n                elementCache: elementCache,\r\n                viewModel: iterationVm,\r\n                bindingAttrs: bindingAttrs,\r\n                isRegenerate: false,\r\n            });\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    // generate forOfBinding elements into fragment\r\n    let fragment = generateForOfElements(\r\n        forOfBindingData,\r\n        viewModel,\r\n        bindingAttrs,\r\n        iterationData,\r\n        keys\r\n    );\r\n    // insert fragment content into DOM\r\n    return insertRenderedElements(forOfBindingData, fragment);\r\n};\r\n\r\nexport default renderForOfBinding;\r\n","import * as config from './config';\r\nimport {Binder} from './binder';\r\n\r\nlet bindingAttrs = config.bindingAttrs;\r\nlet templateSettings = config.templateSettings;\r\n\r\nconst use = (settings = {}) => {\r\n    if (settings.bindingAttrs) {\r\n        bindingAttrs = $.extend({}, settings.bindingAttrs);\r\n    }\r\n    if (settings.templateSettings) {\r\n        templateSettings = $.extend({}, settings.templateSettings);\r\n    }\r\n};\r\n\r\nconst init = ($rootElement, viewModel = null) => {\r\n    _.templateSettings = templateSettings;\r\n    return new Binder($rootElement, viewModel, bindingAttrs);\r\n};\r\n\r\n// expose to global\r\nwindow.dataBind = {\r\n    use: use,\r\n    init: init,\r\n    version: '1.6.0',\r\n};\r\n","import * as util from './util';\r\n\r\n/**\r\n *  pubSub\r\n * @description use jQuery object as pubSub\r\n * @example EVENTS object strucure:\r\n *  EVENTS = {\r\n        'EVENT-NAME': [{ 'comp-id': fn }],\r\n        'EVENT-NAME2': [{ 'comp-id': fn }]\r\n    };\r\n */\r\n\r\nlet EVENTS = {};\r\n\r\nconst subscribeEvent = (instance = null, eventName = '', fn, isOnce = false) => {\r\n    if (!instance || !instance.compId || !eventName || typeof fn !== 'function') {\r\n        return;\r\n    }\r\n\r\n    let subscriber;\r\n    let isSubscribed = false;\r\n\r\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\r\n    EVENTS[eventName] = EVENTS[eventName] || [];\r\n    // check if already subscribed and update callback fn\r\n    isSubscribed = EVENTS[eventName].some((subscriber) => {\r\n        if (subscriber[instance.compId]) {\r\n            subscriber[instance.compId] = fn.bind(instance.viewModel);\r\n            subscriber.isOnce = isOnce;\r\n            return true;\r\n        }\r\n    });\r\n    // push if not yet subscribe\r\n    if (!isSubscribed) {\r\n        subscriber = {};\r\n        subscriber[instance.compId] = fn.bind(instance.viewModel);\r\n        subscriber.isOnce = isOnce;\r\n        EVENTS[eventName].push(subscriber);\r\n    }\r\n};\r\n\r\nconst subscribeEventOnce = (instance = null, eventName = '', fn) => {\r\n    subscribeEvent(instance, eventName, fn, true);\r\n};\r\n\r\nconst unsubscribeEvent = (compId = '', eventName = '') => {\r\n    if (!compId || !eventName) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    let subscribersLength = 0;\r\n    let subscriber;\r\n\r\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\r\n\r\n    if (EVENTS[eventName]) {\r\n        subscribersLength = EVENTS[eventName].length;\r\n        for (i = 0; i < subscribersLength; i += 1) {\r\n            subscriber = EVENTS[eventName][i];\r\n            if (subscriber[compId]) {\r\n                EVENTS[eventName].splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // delete the event if no more subscriber\r\n    if (!EVENTS[eventName].length) {\r\n        delete EVENTS[eventName];\r\n    }\r\n};\r\n\r\n/**\r\n * unsubscribeAllEvent\r\n * @description unsubscribe all event by compId. eg when a component removed\r\n * @param {string} compId\r\n */\r\nconst unsubscribeAllEvent = (compId = '') => {\r\n    if (!compId) {\r\n        return;\r\n    }\r\n    Object.keys(EVENTS).forEach((eventName) => {\r\n        unsubscribeEvent(compId, eventName);\r\n    });\r\n};\r\n\r\nconst publishEvent = (eventName = '', ...args) => {\r\n    if (!eventName || !EVENTS[eventName]) {\r\n        return;\r\n    }\r\n\r\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\r\n\r\n    EVENTS[eventName].forEach((subscriber) => {\r\n        Object.keys(subscriber).forEach((compId) => {\r\n            if (typeof subscriber[compId] === 'function') {\r\n                let ret = subscriber[compId](...args);\r\n                if (subscriber.isOnce) {\r\n                    unsubscribeEvent(compId, eventName);\r\n                }\r\n                return ret;\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nexport {subscribeEvent, subscribeEventOnce, unsubscribeEvent, unsubscribeAllEvent, publishEvent};\r\n","// require to use lodash\r\n_ = window._ || {};\r\n\r\nconst hasIsArray = Array.isArray;\r\n\r\nconst REGEX = {\r\n    FUNCTIONPARAM: /\\((.*?)\\)/,\r\n    WHITESPACES: /\\s+/g,\r\n    FOROF: /(.*?)\\s+(?:in|of)\\s+(.*)/,\r\n};\r\n\r\nconst generateElementCache = (bindingAttrs) => {\r\n    let elementCache = {};\r\n    $.each(bindingAttrs, function(k, v) {\r\n        elementCache[v] = [];\r\n    });\r\n    return elementCache;\r\n};\r\n\r\nconst isArray = (obj) => {\r\n    return hasIsArray\r\n        ? Array.isArray(obj)\r\n        : Object.prototype.toString.call(obj) === '[object Array]';\r\n};\r\n\r\nconst isJsObject = (obj) => {\r\n    return (\r\n        obj !== null &&\r\n        typeof obj === 'object' &&\r\n        Object.prototype.toString.call(obj) === '[object Object]'\r\n    );\r\n};\r\n\r\nconst isPlainObject = (obj) => {\r\n    let ctor;\r\n    let prot;\r\n\r\n    if (!isJsObject(obj)) {\r\n        return false;\r\n    }\r\n\r\n    // If has modified constructor\r\n    ctor = obj.constructor;\r\n    if (typeof ctor !== 'function') return false;\r\n\r\n    // If has modified prototype\r\n    prot = ctor.prototype;\r\n    if (isJsObject(prot) === false) return false;\r\n\r\n    // If constructor does not have an Object-specific method\r\n    if (prot.hasOwnProperty('isPrototypeOf') === false) {\r\n        return false;\r\n    }\r\n\r\n    // Most likely a plain Object\r\n    return true;\r\n};\r\n\r\nconst isEmptyObject = (obj) => {\r\n    if (isJsObject(obj)) {\r\n        return Object.getOwnPropertyNames(obj).length === 0;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * getViewModelValue\r\n * @description walk a object by provided string path. eg 'a.b.c'\r\n * @param {object} obj\r\n * @param {string} prop\r\n * @return {object}\r\n */\r\nconst getViewModelValue = (obj, prop) => {\r\n    return _.get(obj, prop);\r\n};\r\n\r\n/**\r\n * setViewModelValue\r\n * @description populate viewModel object by path string\r\n * @param {object} obj\r\n * @param {string} prop\r\n * @param {string} value\r\n * @return {call} underscore set\r\n */\r\nconst setViewModelValue = (obj, prop, value) => {\r\n    return _.set(obj, prop, value);\r\n};\r\n\r\nconst parseStringToJson = (str) => {\r\n    // fix unquote or single quote keys and replace single quote to double quote\r\n    let ret = str\r\n        .replace(/(\\s*?{\\s*?|\\s*?,\\s*?)(['\"])?([a-zA-Z0-9]+)(['\"])?:/g, '$1\"$3\":')\r\n        .replace(/'/g, '\"');\r\n    return JSON.parse(ret);\r\n};\r\n\r\n/**\r\n * arrayRemoveMatch\r\n * @description remove match items in fromArray out of toArray\r\n * @param {array} toArray\r\n * @param {array} frommArray\r\n * @return {boolean}\r\n */\r\nconst arrayRemoveMatch = (toArray, frommArray) => {\r\n    return toArray.filter((value, index) => {\r\n        return frommArray.indexOf(value) < 0;\r\n    });\r\n};\r\n\r\nconst getFormData = ($form) => {\r\n    let sArray = $form.serializeArray();\r\n    let data = {};\r\n\r\n    sArray.map((n) => {\r\n        data[n['name']] = n['value'];\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\n/**\r\n * getFunctionParameterList\r\n * @description convert parameter string to arrary\r\n * eg. '(\"a\",\"b\",\"c\")' > [\"a\",\"b\",\"c\"]\r\n * @param {string} str\r\n * @return {array} paramlist\r\n */\r\nconst getFunctionParameterList = (str) => {\r\n    let paramlist = str.match(REGEX.FUNCTIONPARAM);\r\n\r\n    if (paramlist && paramlist[1]) {\r\n        paramlist = paramlist[1].split(',');\r\n        paramlist.forEach(function(v, i) {\r\n            paramlist[i] = v.trim();\r\n        });\r\n    }\r\n    return paramlist;\r\n};\r\n\r\nconst invertObj = (sourceObj) => {\r\n    return Object.keys(sourceObj).reduce(function(obj, key) {\r\n        obj[sourceObj[key]] = key;\r\n        return obj;\r\n    }, {});\r\n};\r\n\r\n/**\r\n * debounce\r\n * @description decorate a function to be debounce using requestAnimationFrame\r\n * @param {function} fn\r\n * @param {context} ctx\r\n * @return {function}\r\n */\r\nconst debounceRaf = (fn, ctx = null) => {\r\n    return (function(fn, ctx) {\r\n        let dfObj = $.Deferred(); // eslint-disable-line new-cap\r\n        let rafId = 0;\r\n\r\n        // return decorated fn\r\n        return function() {\r\n            let args;\r\n            /* eslint-disable prefer-rest-params */\r\n            args = Array.from ? Array.from(arguments) : Array.prototype.slice.call(arguments);\r\n\r\n            window.cancelAnimationFrame(rafId);\r\n            rafId = window.requestAnimationFrame(() => {\r\n                $.when(fn.apply(ctx, args)).then(\r\n                    dfObj.resolve.apply(ctx, arguments),\r\n                    dfObj.reject.apply(ctx, arguments),\r\n                    dfObj.notify.apply(ctx, arguments)\r\n                );\r\n                dfObj = $.Deferred(); // eslint-disable-line new-cap\r\n            });\r\n            /* eslint-enable prefer-rest-params */\r\n            return dfObj.promise();\r\n        };\r\n    })(fn, ctx);\r\n};\r\n\r\n/**\r\n * getNodeAttrObj\r\n * @description convert Node attributes object to a json object\r\n * @param {object} node\r\n * @param {array} skipList\r\n * @return {object}\r\n */\r\nconst getNodeAttrObj = (node, skipList) => {\r\n    let attrObj;\r\n    let attributesLength = 0;\r\n    let skipArray;\r\n\r\n    if (!node || node.nodeType !== 1 || !node.hasAttributes()) {\r\n        return attrObj;\r\n    }\r\n    if (skipList) {\r\n        skipArray = [];\r\n        skipArray = typeof skipList === 'string' ? skipArray.push(skipList) : skipList;\r\n    }\r\n    attrObj = {};\r\n    attributesLength = node.attributes.length;\r\n\r\n    if (attributesLength) {\r\n        for (let i = 0; i < attributesLength; i += 1) {\r\n            let attribute = node.attributes.item(i);\r\n            attrObj[attribute.nodeName] = attribute.nodeValue;\r\n        }\r\n    }\r\n\r\n    if (isArray(skipArray)) {\r\n        skipArray.forEach((item) => {\r\n            if (attrObj[item]) {\r\n                delete attrObj[item];\r\n            }\r\n        });\r\n    }\r\n    return attrObj;\r\n};\r\n\r\n/**\r\n * extend\r\n * @param {boolean} isDeepMerge\r\n * @param {object} target\r\n * @param {object} sources\r\n * @return {object} merged object\r\n */\r\nconst extend = (isDeepMerge = false, target, ...sources) => {\r\n    if (!sources.length) {\r\n        return target;\r\n    }\r\n    const source = sources.shift();\r\n    if (source === undefined) {\r\n        return target;\r\n    }\r\n\r\n    if (!isDeepMerge) {\r\n        return Object.assign(target, ...sources);\r\n    }\r\n\r\n    if (isMergebleObject(target) && isMergebleObject(source)) {\r\n        Object.keys(source).forEach((key) => {\r\n            if (isMergebleObject(source[key])) {\r\n                if (!target[key]) {\r\n                    target[key] = {};\r\n                }\r\n                extend(target[key], source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        });\r\n    }\r\n\r\n    return extend(true, target, ...sources);\r\n};\r\n\r\nconst isObject = (item) => {\r\n    return item !== null && typeof item === 'object';\r\n};\r\n\r\nconst isMergebleObject = (item) => {\r\n    return isObject(item) && !isArray(item);\r\n};\r\n\r\n/**\r\n * cloneDomNode\r\n * @param {object} element\r\n * @return {object} cloned element\r\n * @description helper function to clone node\r\n */\r\nconst cloneDomNode = (element) => {\r\n    return element.cloneNode(true);\r\n};\r\n\r\n/**\r\n * insertAfter\r\n * @param {object} parentNode\r\n * @param {object} newNode\r\n * @param {object} referenceNode\r\n * @return {object} node\r\n * @description helper function to insert new node before the reference node\r\n */\r\nconst insertAfter = (parentNode, newNode, referenceNode) => {\r\n    let refNextElement =\r\n        referenceNode && referenceNode.nextSibling ? referenceNode.nextSibling : null;\r\n    return parentNode.insertBefore(newNode, refNextElement);\r\n};\r\n\r\nexport {\r\n    REGEX,\r\n    isArray,\r\n    isPlainObject,\r\n    isEmptyObject,\r\n    extend,\r\n    generateElementCache,\r\n    getViewModelValue,\r\n    setViewModelValue,\r\n    parseStringToJson,\r\n    debounceRaf,\r\n    arrayRemoveMatch,\r\n    getFormData,\r\n    getFunctionParameterList,\r\n    invertObj,\r\n    getNodeAttrObj,\r\n    cloneDomNode,\r\n    insertAfter,\r\n};\r\n"]}