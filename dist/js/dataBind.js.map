{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/attrBinding.js","src/binder.js","src/blurBinding.js","src/changeBinding.js","src/clickBinding.js","src/commentWrapper.js","src/config.js","src/cssBinding.js","src/dbclickBinding.js","src/domWalker.js","src/focusBinding.js","src/forOfBinding.js","src/hoverBinding.js","src/ifBinding.js","src/index.js","src/modelBinding.js","src/pubSub.js","src/renderForOfBinding.js","src/renderIfBinding.js","src/renderTemplate.js","src/showBinding.js","src/submitBinding.js","src/switchBinding.js","src/textBinding.js","src/util.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;ACAA;;AAEA;;;;;;;;AAQA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAoC;AACpD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AAEA,MAAI,CAAC,OAAL,EAAc;AACV;AACH;;AAED,EAAA,KAAK,CAAC,WAAN,GAAoB,KAAK,CAAC,WAAN,IAAqB,EAAzC;AACA,EAAA,KAAK,CAAC,WAAN,CAAkB,iBAAlB,GAAsC,KAAK,CAAC,WAAN,CAAkB,iBAAlB,IAAuC,EAA7E;AAEA,MAAM,UAAU,GAAG,KAAK,CAAC,WAAN,CAAkB,iBAArC;AACA,MAAM,SAAS,GAAG,iCAAsB,SAAtB,EAAiC,KAAjC,CAAlB;;AAEA,MAAI,CAAC,yBAAc,SAAd,CAAL,EAA+B;AAC3B;AACH,GAfmD,CAiBpD;;;AACA,MAAI,IAAI,CAAC,SAAL,CAAe,UAAf,MAA+B,IAAI,CAAC,SAAL,CAAe,SAAf,CAAnC,EAA8D;AAC1D;AACH,GApBmD,CAsBpD;;;AACA,EAAA,KAAK,CAAC,WAAN,CAAkB,iBAAlB,GAAsC,EAAtC;;AAEA,MAAI,yBAAc,UAAd,CAAJ,EAA+B;AAC3B,oBAAK,SAAL,EAAgB,UAAC,GAAD,EAAM,KAAN,EAAe;AAC3B,MAAA,KAAK,CAAC,EAAN,CAAS,YAAT,CAAsB,GAAtB,EAA2B,KAA3B,EAD2B,CAE3B;;AACA,MAAA,KAAK,CAAC,WAAN,CAAkB,iBAAlB,CAAoC,GAApC,IAA2C,KAA3C;AACH,KAJD;AAKH,GAND,MAMO;AACH,oBAAK,UAAL,EAAiB,UAAC,GAAD,EAAM,KAAN,EAAe;AAC5B,UAAI,OAAO,SAAS,CAAC,GAAD,CAAhB,KAA0B,WAA9B,EAA2C;AACvC;AACA,QAAA,KAAK,CAAC,EAAN,CAAS,eAAT,CAAyB,GAAzB;AACH;AACJ,KALD;AAOA,oBAAK,SAAL,EAAgB,UAAC,GAAD,EAAM,KAAN,EAAe;AAC3B,UAAI,UAAU,CAAC,GAAD,CAAV,KAAoB,SAAS,CAAC,GAAD,CAAjC,EAAwC;AACpC;AACA,QAAA,KAAK,CAAC,EAAN,CAAS,YAAT,CAAsB,GAAtB,EAA2B,SAAS,CAAC,GAAD,CAApC;AACH,OAJ0B,CAK3B;;;AACA,MAAA,KAAK,CAAC,WAAN,CAAkB,iBAAlB,CAAoC,GAApC,IAA2C,KAA3C;AACH,KAPD;AAQH;AACJ,CAhDD;;eAkDe,W;;;;;;;;;;;AC5Df;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAI,WAAW,GAAG,CAAlB;;IAEM,M;;;AACF,kBAAY,YAAZ,EAA0B,SAA1B,EAAqC,YAArC,EAAmD;AAAA;;AAC/C,QAAI,YAAY,YAAY,MAAM,CAAC,MAA/B,IAAyC,YAAY,CAAC,MAA1D,EAAkE;AAC9D,MAAA,YAAY,GAAG,YAAY,CAAC,EAAb,CAAgB,CAAhB,EAAmB,CAAnB,CAAf;AACH;;AAED,QAAI,CAAC,YAAD,IAAiB,YAAY,CAAC,QAAb,KAA0B,CAA3C,IAAgD,SAAS,KAAK,IAA9D,IAAsE,QAAO,SAAP,MAAqB,QAA/F,EAAyG;AACrG,YAAM,IAAI,SAAJ,CAAc,sCAAd,CAAN;AACH;;AAED,SAAK,YAAL,GAAoB,KAApB;AAEA,SAAK,MAAL,GAAc,WAAW,IAAI,CAA7B;AAEA,SAAK,YAAL,GAAoB,YAApB;AAEA,SAAK,SAAL,GAAiB,SAAjB;AAEA,SAAK,YAAL,GAAoB,YAApB;AAEA,SAAK,MAAL,GAAc,uBAAY,KAAK,MAAjB,EAAyB,IAAzB,CAAd;AAEA,SAAK,gBAAL,GAAwB,KAAK,YAAL,CAAkB,YAAlB,CAA+B,MAAM,CAAC,kBAAtC,MAA8D,IAAtF,CArB+C,CAuB/C;;AACA,SAAK,SAAL,CAAe,GAAf,GAAqB,IAArB;AAEA,SAAK,SAAL,CAAe,KAAf,GAAuB,KAAK,SAA5B;AAEA,SAAK,SAAL,GA5B+C,CA8B/C;AACA;;AACA,QAAI,MAAM,CAAC,MAAX,EAAmB;AACf,MAAA,MAAM,CAAC,MAAP,CAAc,KAAK,YAAnB,EAAiC,IAAjC,CAAsC,MAAM,CAAC,oBAAP,CAA4B,WAAlE,EAA+E,KAAK,SAApF;AACH,KAFD,MAEO;AACH,WAAK,YAAL,CAAkB,MAAM,CAAC,oBAAP,CAA4B,WAA9C,IAA6D,KAAK,SAAlE;AACH;;AAED,WAAO,IAAP;AACH;AAED;;;;;;;;;;;gCAOY;AACR,WAAK,YAAL,GAAoB,2BAAmB;AACnC,QAAA,QAAQ,EAAE,KAAK,YADoB;AAEnC,QAAA,YAAY,EAAE,KAAK;AAFgB,OAAnB,CAApB,CADQ,CAMR;;AACA,UAAI,KAAK,gBAAL,IAAyB,CAAC,KAAK,YAAnC,EAAiD;AAC7C,aAAK,kBAAL,CAAwB;AACpB,UAAA,aAAa,EAAE;AADK,SAAxB;AAGH;;AACD,aAAO,IAAP;AACH;AAED;;;;;;;;yCAK6B;AAAA;;AAAA,UAAV,GAAU,uEAAJ,EAAI;AACzB,UAAM,YAAY,GAAG,GAAG,CAAC,YAAJ,IAAoB,KAAK,YAA9C;;AAEA,UAAI,GAAG,CAAC,QAAR,EAAkB;AACd;AACA,aAAK,YAAL,GAAoB,2BAAmB;AACnC,UAAA,QAAQ,EAAE,KAAK,YADoB;AAEnC,UAAA,YAAY,EAAE,KAAK;AAFgB,SAAnB,CAApB;AAIH,OATwB,CAUzB;;;AACA,UAAI,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,aAAxB,EAAuC;AACnC,YAAI,YAAY,CAAC,KAAK,YAAL,CAAkB,GAAnB,CAAZ,IAAuC,YAAY,CAAC,KAAK,YAAL,CAAkB,GAAnB,CAAZ,CAAoC,MAA/E,EAAuF;AACnF,UAAA,YAAY,CAAC,KAAK,YAAL,CAAkB,GAAnB,CAAZ,CAAoC,OAApC,CAA4C,UAAC,KAAD,EAAW;AACnD;AACA;AACA;AACA,gBAAI,gBAAgB,GAAG,IAAvB;;AACA,gBAAI,KAAK,CAAC,EAAN,CAAS,YAAT,CAAsB,KAAI,CAAC,YAAL,CAAkB,KAAxC,CAAJ,EAAoD;AAChD,cAAA,gBAAgB,GAAG,4BAAM;AACrB,uBAAO,IAAP;AACH,eAFD;AAGH;;AACD,YAAA,KAAK,CAAC,YAAN,GAAqB,2BAAmB;AACpC,cAAA,QAAQ,EAAE,KAAK,CAAC,EADoB;AAEpC,cAAA,YAAY,EAAE,KAAI,CAAC,YAFiB;AAGpC,cAAA,SAAS,EAAE,gBAHyB;AAIpC,cAAA,kBAAkB,EAAE,GAAG,CAAC;AAJY,aAAnB,CAArB;AAMH,WAhBD;AAiBH;AACJ;AACJ;;;6BAEgB;AAAA,UAAV,GAAU,uEAAJ,EAAI;AACb,UAAI,YAAY,GAAG,EAAnB;;AACA,UAAI,CAAC,KAAK,YAAV,EAAwB;AACpB;AACA,YAAI,KAAK,gBAAT,EAA2B;AACvB,eAAK,YAAL,CAAkB,eAAlB,CAAkC,MAAM,CAAC,kBAAzC;AACA,UAAA,YAAY,GAAG,mBAAmB,CAAC,MAAM,CAAC,uBAAP,CAA+B,cAAhC,EAAgD,GAAhD,CAAlC;AACH,SAHD,MAGO;AACH,UAAA,YAAY,GAAG,mBAAmB,CAAC,MAAM,CAAC,uBAAP,CAA+B,IAAhC,EAAsC,GAAtC,CAAlC;AACH;AACJ,OARD,MAQO;AACH;AACA,QAAA,YAAY,GAAG,mBAAmB,CAAC,EAAD,EAAK,GAAL,CAAlC;AACH,OAbY,CAeb;;;AACA,WAAK,gBAAL,GAAwB,EAAxB,CAhBa,CAkBb;AACA;;AACA,MAAA,sBAAsB,CAAC;AACnB,QAAA,GAAG,EAAE,IADc;AAEnB,QAAA,YAAY,EAAE,KAAK,YAFA;AAGnB,QAAA,YAAY,EAAE,YAHK;AAInB,QAAA,YAAY,EAAE,KAAK,YAJA;AAKnB,QAAA,SAAS,EAAE,KAAK;AALG,OAAD,CAAtB,CApBa,CA4Bb;;AACA,MAAA,MAAM,CAAC,YAAP,CAAoB;AAChB,QAAA,GAAG,EAAE,IADW;AAEhB,QAAA,YAAY,EAAE,KAAK,YAFH;AAGhB,QAAA,YAAY,EAAE,YAHE;AAIhB,QAAA,YAAY,EAAE,KAAK,YAJH;AAKhB,QAAA,SAAS,EAAE,KAAK;AALA,OAApB,EA7Ba,CAqCb;;AACA,MAAA,MAAM,CAAC,WAAP,CAAmB,KAAK,gBAAxB,EAtCa,CAuCb;;AACA,WAAK,gBAAL,CAAsB,MAAtB,GAA+B,CAA/B;AACA,aAAO,KAAK,gBAAZ;AAEA,WAAK,YAAL,GAAoB,IAApB;AACH;;;gCAkJ6B;AAAA,UAApB,SAAoB,uEAAR,EAAQ;AAAA,UAAJ,EAAI;AAC1B,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC,EAAvC;AACA,aAAO,IAAP;AACH;;;oCAEiC;AAAA,UAApB,SAAoB,uEAAR,EAAQ;AAAA,UAAJ,EAAI;AAC9B,MAAA,MAAM,CAAC,kBAAP,CAA0B,IAA1B,EAAgC,SAAhC,EAA2C,EAA3C;AACA,aAAO,IAAP;AACH;;;kCAE2B;AAAA,UAAhB,SAAgB,uEAAJ,EAAI;AACxB,MAAA,MAAM,CAAC,gBAAP,CAAwB,KAAK,MAA7B,EAAqC,SAArC;AACA,aAAO,IAAP;AACH;;;qCAEgB;AACb,MAAA,MAAM,CAAC,mBAAP,CAA2B,KAAK,MAAhC;AACA,aAAO,IAAP;AACH;;;8BAEgC;AAAA,UAAzB,SAAyB,uEAAb,EAAa;;AAAA,wCAAN,IAAM;AAAN,QAAA,IAAM;AAAA;;AAC7B,MAAA,MAAM,CAAC,YAAP,OAAA,MAAM,GAAc,SAAd,SAA4B,IAA5B,EAAN;AACA,aAAO,IAAP;AACH;;;uCAvK+E;AAAA,UAA3D,GAA2D,QAA3D,GAA2D;AAAA,UAAtD,YAAsD,QAAtD,YAAsD;AAAA,UAAxC,YAAwC,QAAxC,YAAwC;AAAA,UAA1B,YAA0B,QAA1B,YAA0B;AAAA,UAAZ,SAAY,QAAZ,SAAY;;AAC5E,UAAI,CAAC,YAAD,IAAiB,CAAC,YAAtB,EAAoC;AAChC;AACH,OAH2E,CAK5E;AAEA;;;AACA,UAAI,YAAY,CAAC,YAAb,IAA6B,YAAY,CAAC,YAAY,CAAC,KAAd,CAAzC,IAAiE,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,MAAtG,EAA8G;AAC1G,QAAA,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,OAAjC,CAAyC,UAAC,KAAD,EAAW;AAChD,wCAAa,KAAb,EAAoB,SAApB,EAA+B,YAA/B,EAA6C,YAAY,CAAC,WAA1D;AACH,SAFD;AAGH,OAZ2E,CAc5E;;;AACA,UAAI,YAAY,CAAC,WAAb,IAA4B,YAAY,CAAC,YAAY,CAAC,IAAd,CAAxC,IAA+D,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,MAAnG,EAA2G;AACvG,QAAA,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,OAAhC,CAAwC,UAAC,KAAD,EAAW;AAC/C,uCAAY,KAAZ,EAAmB,SAAnB,EAA8B,YAA9B,EAA4C,YAAY,CAAC,WAAzD;AACH,SAFD;AAGH,OAnB2E,CAqB5E;;;AACA,UAAI,YAAY,CAAC,SAAb,IAA0B,YAAY,CAAC,YAAY,MAAb,CAAtC,IAA2D,YAAY,CAAC,YAAY,MAAb,CAAZ,CAA8B,MAA7F,EAAqG;AACjG,QAAA,YAAY,CAAC,YAAY,MAAb,CAAZ,CAA8B,OAA9B,CAAsC,UAAC,KAAD,EAAW;AAC7C,qCAAU,KAAV,EAAiB,SAAjB,EAA4B,YAA5B,EAA0C,YAAY,CAAC,WAAvD;AACH,SAFD;AAGH,OA1B2E,CA4B5E;;;AACA,UAAI,YAAY,CAAC,WAAb,IAA4B,YAAY,CAAC,YAAY,CAAC,IAAd,CAAxC,IAA+D,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,MAAnG,EAA2G;AACvG,QAAA,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,OAAhC,CAAwC,UAAC,KAAD,EAAW;AAC/C,uCAAY,KAAZ,EAAmB,SAAnB,EAA8B,YAA9B,EAA4C,YAAY,CAAC,WAAzD;AACH,SAFD;AAGH,OAjC2E,CAmC5E;;;AACA,UACI,YAAY,CAAC,aAAb,IACA,YAAY,CAAC,YAAY,UAAb,CADZ,IAEA,YAAY,CAAC,YAAY,UAAb,CAAZ,CAAkC,MAHtC,EAIE;AACE,QAAA,YAAY,CAAC,YAAY,UAAb,CAAZ,CAAkC,OAAlC,CAA0C,UAAC,KAAD,EAAW;AACjD,yCAAc,KAAd,EAAqB,SAArB,EAAgC,YAAhC,EAA8C,YAAY,CAAC,WAA3D;AACH,SAFD;AAGH,OA5C2E,CA8C5E;;;AACA,UAAI,YAAY,CAAC,WAAb,IAA4B,YAAY,CAAC,YAAY,CAAC,IAAd,CAAxC,IAA+D,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,MAAnG,EAA2G;AACvG,QAAA,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,OAAhC,CAAwC,UAAC,KAAD,EAAW;AAC/C,uCAAY,KAAZ,EAAmB,SAAnB,EAA8B,YAA9B,EAA4C,YAAY,CAAC,WAAzD;AACH,SAFD;AAGH,OAnD2E,CAqD5E;;;AACA,UAAI,YAAY,CAAC,UAAb,IAA2B,YAAY,CAAC,YAAY,CAAC,GAAd,CAAvC,IAA6D,YAAY,CAAC,YAAY,CAAC,GAAd,CAAZ,CAA+B,MAAhG,EAAwG;AACpG,QAAA,YAAY,CAAC,YAAY,CAAC,GAAd,CAAZ,CAA+B,OAA/B,CAAuC,UAAC,KAAD,EAAW;AAC9C,sCAAW,KAAX,EAAkB,SAAlB,EAA6B,YAA7B,EAA2C,YAAY,CAAC,WAAxD;AACH,SAFD;AAGH,OA1D2E,CA4D5E;;;AACA,UAAI,YAAY,CAAC,YAAb,IAA6B,YAAY,CAAC,YAAY,CAAC,KAAd,CAAzC,IAAiE,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,MAAtG,EAA8G;AAC1G,QAAA,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,OAAjC,CAAyC,UAAC,KAAD,EAAW;AAChD,wCAAa,KAAb,EAAoB,SAApB,EAA+B,YAA/B,EAA6C,YAAY,CAAC,WAA1D;AACH,SAFD;AAGH,OAjE2E,CAmE5E;;;AACA,UACI,YAAY,CAAC,aAAb,IACA,YAAY,CAAC,YAAY,CAAC,MAAd,CADZ,IAEA,YAAY,CAAC,YAAY,CAAC,MAAd,CAAZ,CAAkC,MAHtC,EAIE;AACE,QAAA,YAAY,CAAC,YAAY,CAAC,MAAd,CAAZ,CAAkC,OAAlC,CAA0C,UAAC,KAAD,EAAW;AACjD,yCAAc,KAAd,EAAqB,SAArB,EAAgC,YAAhC,EAA8C,YAAY,CAAC,WAA3D;AACH,SAFD;AAGH,OA5E2E,CA8E5E;;;AACA,UACI,YAAY,CAAC,aAAb,IACA,YAAY,CAAC,YAAY,CAAC,MAAd,CADZ,IAEA,YAAY,CAAC,YAAY,CAAC,MAAd,CAAZ,CAAkC,MAHtC,EAIE;AACE,QAAA,YAAY,CAAC,YAAY,CAAC,MAAd,CAAZ,CAAkC,OAAlC,CAA0C,UAAC,KAAD,EAAW;AACjD,yCAAc,KAAd,EAAqB,SAArB,EAAgC,YAAhC,EAA8C,YAAY,CAAC,WAA3D;AACH,SAFD;AAGH,OAvF2E,CAyF5E;;;AACA,UAAI,YAAY,CAAC,YAAb,IAA6B,YAAY,CAAC,YAAY,CAAC,KAAd,CAAzC,IAAiE,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,MAAtG,EAA8G;AAC1G,QAAA,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,OAAjC,CAAyC,UAAC,KAAD,EAAW;AAChD,wCAAa,KAAb,EAAoB,SAApB,EAA+B,YAA/B,EAA6C,YAAY,CAAC,WAA1D;AACH,SAFD;AAGH,OA9F2E,CAgG5E;;;AACA,UACI,YAAY,CAAC,eAAb,IACA,YAAY,CAAC,YAAY,CAAC,QAAd,CADZ,IAEA,YAAY,CAAC,YAAY,CAAC,QAAd,CAAZ,CAAoC,MAHxC,EAIE;AACE,QAAA,YAAY,CAAC,YAAY,CAAC,QAAd,CAAZ,CAAoC,OAApC,CAA4C,UAAC,KAAD,EAAW;AACnD,0CAAgB,KAAhB,EAAuB,SAAvB,EAAkC,YAAlC,EAAgD,YAAY,CAAC,WAA7D;AACH,SAFD;AAGH,OAzG2E,CA2G5E;;;AACA,UAAI,YAAY,CAAC,WAAb,IAA4B,YAAY,CAAC,YAAY,CAAC,IAAd,CAAxC,IAA+D,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,MAAnG,EAA2G;AACvG,QAAA,YAAY,CAAC,YAAY,CAAC,IAAd,CAAZ,CAAgC,OAAhC,CAAwC,UAAC,KAAD,EAAW;AAC/C,uCAAY,KAAZ,EAAmB,SAAnB,EAA8B,YAA9B,EAA4C,YAAY,CAAC,WAAzD;AACH,SAFD;AAGH,OAhH2E,CAkH5E;;;AACA,UAAI,YAAY,CAAC,YAAb,IAA6B,YAAY,CAAC,YAAY,CAAC,KAAd,CAAzC,IAAiE,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,MAAtG,EAA8G;AAC1G,QAAA,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,OAAjC,CAAyC,UAAC,KAAD,EAAW;AAChD,wCAAa,KAAb,EAAoB,SAApB,EAA+B,YAA/B,EAA6C,YAAY,CAAC,WAA1D;AACH,SAFD;AAGH,OAvH2E,CAyH5E;;;AACA,UAAI,YAAY,CAAC,YAAb,IAA6B,YAAY,CAAC,YAAY,CAAC,KAAd,CAAzC,IAAiE,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,MAAtG,EAA8G;AAC1G,QAAA,YAAY,CAAC,YAAY,CAAC,KAAd,CAAZ,CAAiC,OAAjC,CAAyC,UAAC,KAAD,EAAW;AAChD,wCAAa,KAAb,EAAoB,SAApB,EAA+B,YAA/B,EAA6C,YAAY,CAAC,WAA1D;AACH,SAFD;AAGH;AACJ;;;gCAEkB,K,EAAO;AACtB,UAAI,CAAC,KAAD,IAAU,CAAC,KAAK,CAAC,MAArB,EAA6B;AACzB;AACH;;AACD,sBAAK,KAAL,EAAY,UAAC,KAAD,EAAQ,IAAR,EAAiB;AACzB,YAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC5B,cAAI;AACA,YAAA,IAAI;AACP,WAFD,CAEE,OAAO,GAAP,EAAY;AACV,yCAAkB,GAAlB,EAAuB,wBAAwB,MAAM,CAAC,IAAD,CAArD;AACH;AACJ;AACJ,OARD;AASH;;;;;;;;AA4BL,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,QAAgE;AAAA,MAA9D,GAA8D,SAA9D,GAA8D;AAAA,MAAzD,YAAyD,SAAzD,YAAyD;AAAA,MAA3C,YAA2C,SAA3C,YAA2C;AAAA,MAA7B,YAA6B,SAA7B,YAA6B;AAAA,MAAf,SAAe,SAAf,SAAe;;AAC3F,MAAI,CAAC,YAAD,IAAiB,CAAC,YAAtB,EAAoC;AAChC,WAAO,KAAP;AACH,GAH0F,CAI3F;;;AACA,MAAI,YAAY,CAAC,YAAY,CAAC,GAAd,CAAZ,IAAkC,YAAY,CAAC,YAAY,CAAC,GAAd,CAAZ,CAA+B,MAArE,EAA6E;AACzE;AACA;AACA,QAAI,YAAY,CAAC,eAAjB,EAAkC;AAC9B;AACA,MAAA,YAAY,GAAG,mBAAmB,CAAC,MAAM,CAAC,uBAAP,CAA+B,IAAhC,CAAlC;AAEA,MAAA,YAAY,CAAC,YAAY,CAAC,GAAd,CAAZ,CAA+B,OAA/B,CAAuC,UAAC,QAAD,EAAc;AACjD,wCAAe,QAAf,EAAyB,SAAzB,EAAoC,YAApC,EAAkD,YAAlD;AACH,OAFD,EAJ8B,CAO9B;;AACA,MAAA,GAAG,CAAC,kBAAJ,CAAuB;AACnB,QAAA,aAAa,EAAE,IADI;AAEnB,QAAA,YAAY,EAAE,YAFK;AAGnB,QAAA,mBAAmB,EAAE;AAHF,OAAvB;AAKH,KAhBwE,CAiBzE;;;AACA,IAAA,YAAY,CAAC,WAAb,GAA2B,IAA3B,CAlByE,CAoBzE;;AACA,IAAA,YAAY,CAAC,YAAY,CAAC,GAAd,CAAZ,CAA+B,OAA/B,CAAuC,UAAC,KAAD,EAAW;AAC9C,MAAA,MAAM,CAAC,YAAP,CAAoB;AAChB,QAAA,YAAY,EAAE,KAAK,CAAC,YADJ;AAEhB,QAAA,YAAY,EAAE,YAFE;AAGhB,QAAA,YAAY,EAAE,YAHE;AAIhB,QAAA,SAAS,EAAE;AAJK,OAApB;AAMH,KAPD;AAQH;;AACD,SAAO,IAAP;AACH,CApCD;AAsCA;;;;;;;;;;;;AAQA,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,GAA8B;AAAA,MAA7B,SAA6B,uEAAjB,EAAiB;AAAA,MAAb,GAAa,uEAAP,EAAO;AACtD,MAAM,oBAAoB,GAAG;AACzB,IAAA,eAAe,EAAE,KADQ;AAEzB,IAAA,WAAW,EAAE,IAFY;AAGzB,IAAA,UAAU,EAAE,IAHa;AAIzB,IAAA,SAAS,EAAE,IAJc;AAKzB,IAAA,WAAW,EAAE,IALY;AAMzB,IAAA,YAAY,EAAE,IANW;AAOzB,IAAA,WAAW,EAAE,IAPY;AAQzB,IAAA,YAAY,EAAE,IARW;AASzB,IAAA,aAAa,EAAE;AATU,GAA7B;AAWA,MAAM,oBAAoB,GAAG;AACzB,IAAA,aAAa,EAAE,IADU;AAEzB,IAAA,YAAY,EAAE,IAFW;AAGzB,IAAA,eAAe,EAAE,IAHQ;AAIzB,IAAA,WAAW,EAAE,IAJY;AAKzB,IAAA,YAAY,EAAE,IALW;AAMzB,IAAA,YAAY,EAAE,IANW;AAOzB,IAAA,aAAa,EAAE;AAPU,GAA7B,CAZsD,CAqBtD;AACA;;AACA,MAAM,qBAAqB,GAAG;AAC1B,IAAA,eAAe,EAAE,KADS;AAE1B,IAAA,WAAW,EAAE,KAFa;AAG1B,IAAA,UAAU,EAAE,KAHc;AAI1B,IAAA,SAAS,EAAE,KAJe;AAK1B,IAAA,WAAW,EAAE,KALa;AAM1B,IAAA,YAAY,EAAE,KANY;AAO1B,IAAA,WAAW,EAAE,KAPa;AAQ1B,IAAA,YAAY,EAAE,KARY;AAS1B,IAAA,aAAa,EAAE;AATW,GAA9B;AAWA,MAAI,YAAY,GAAG,EAAnB;;AAEA,UAAQ,SAAR;AACA,SAAK,MAAM,CAAC,uBAAP,CAA+B,cAApC;AACI,MAAA,YAAY,GAAG,kBAAO,EAAP,EAAW,oBAAX,EAAiC,qBAAjC,EAAwD,GAAxD,CAAf;AACA;;AACJ,SAAK,MAAM,CAAC,uBAAP,CAA+B,IAApC;AACI;AACA,MAAA,GAAG,CAAC,eAAJ,GAAsB,IAAtB;AACA,MAAA,YAAY,GAAG,kBAAO,EAAP,EAAW,oBAAX,EAAiC,oBAAjC,EAAuD,GAAvD,CAAf;AACA;;AACJ;AACI;AACA,MAAA,YAAY,GAAG,kBAAO,EAAP,EAAW,oBAAX,EAAiC,GAAjC,CAAf;AAXJ;;AAcA,SAAO,YAAP;AACH,CAnDD;AAqDA;;;;;;;;;;;AAOA,IAAM,eAAe,GAAG,SAAlB,eAAkB,QAA6D;AAAA,MAA3D,YAA2D,SAA3D,YAA2D;AAAA,MAA7C,WAA6C,SAA7C,WAA6C;AAAA,MAAhC,YAAgC,SAAhC,YAAgC;AAAA,MAAlB,YAAkB,SAAlB,YAAkB;AACjF,MAAM,mBAAmB,GAAG,YAAY,GAClC,mBAAmB,CAAC,MAAM,CAAC,uBAAP,CAA+B,IAAhC,CADe,GAElC,mBAAmB,EAFzB,CADiF,CAKjF;;AACA,EAAA,mBAAmB,CAAC,WAApB,GAAkC,IAAlC,CANiF,CAQjF;AACA;AACA;;AACA,EAAA,sBAAsB,CAAC;AACnB,IAAA,GAAG,EAAE,WAAW,CAAC,KAAZ,GAAoB,WAAW,CAAC,KAAZ,CAAkB,GAAtC,GAA4C,WAAW,CAAC,GAD1C;AAEnB,IAAA,YAAY,EAAE,YAFK;AAGnB,IAAA,YAAY,EAAE,mBAHK;AAInB,IAAA,YAAY,EAAE,YAJK;AAKnB,IAAA,SAAS,EAAE;AALQ,GAAD,CAAtB;AAQA,EAAA,MAAM,CAAC,YAAP,CAAoB;AAChB,IAAA,YAAY,EAAE,YADE;AAEhB,IAAA,YAAY,EAAE,mBAFE;AAGhB,IAAA,YAAY,EAAE,YAHE;AAIhB,IAAA,SAAS,EAAE;AAJK,GAApB;AAMH,CAzBD;;;;;;;;;;;;AC/bA;;AADA;;AAGA;;;;;;;;;AASA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AACjE,MAAM,WAAW,GAAG,KAAK,CAAC,OAA1B;AACA,MAAI,SAAS,GAAG,KAAK,CAAC,UAAtB;AACA,MAAI,gBAAJ;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,WAAD,IAAiB,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAtC,EAA4E;AACxE;AACH;;AAED,MAAM,SAAS,GAAG,6BAAkB,SAAlB,EAA6B,WAA7B,CAAlB;;AAEA,MAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACjC,IAAA,gBAAgB,GAAG,mCAAwB,SAAxB,EAAmC,WAAnC,CAAnB;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,4BAAiB,SAAjB,EAA4B,SAA5B,CAAH,GAA4C,EAAjE;AAEA,IAAA,CAAC,CAAC,KAAK,CAAC,EAAP,CAAD,CACK,GADL,CACS,eADT,EAEK,EAFL,CAEQ,eAFR,EAEyB,UAAS,CAAT,EAAY;AAC7B,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,CAAC,CAAC,IAAD,CAAL,EAAa,MAAb,CAAoB,SAApB,CAAb;AACA,MAAA,SAAS,CAAC,KAAV,CAAgB,gBAAhB,EAAkC,IAAlC;AACH,KALL;AAMH;AACJ,CAvBD;;eAyBe,W;;;;;;;;;;;ACpCf;;AADA;;AAGA;;;;;;;;AAQA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AACnE,MAAM,WAAW,GAAG,KAAK,CAAC,OAA1B;AACA,MAAI,SAAS,GAAG,KAAK,CAAC,UAAtB;AACA,MAAM,YAAY,GAAG,KAAK,CAAC,EAAN,CAAS,YAAT,CAAsB,YAAY,CAAC,KAAnC,CAArB;AACA,MAAI,QAAQ,GAAG,EAAf;AACA,MAAI,QAAQ,GAAG,EAAf;AACA,MAAI,gBAAJ;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,WAAD,IAAiB,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAtC,EAA4E;AACxE;AACH;;AAED,MAAM,SAAS,GAAG,6BAAkB,SAAlB,EAA6B,WAA7B,CAAlB;;AAEA,MAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACjC,IAAA,gBAAgB,GAAG,mCAAwB,SAAxB,EAAmC,WAAnC,CAAnB;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,4BAAiB,SAAjB,EAA4B,SAA5B,CAAH,GAA4C,EAAjE,CAFiC,CAIjC;;AACA,IAAA,CAAC,CAAC,KAAK,CAAC,EAAP,CAAD,CACK,GADL,CACS,iBADT,EAEK,EAFL,CAEQ,iBAFR,EAE2B,UAAS,CAAT,EAAY;AAC/B,UAAM,KAAK,GAAG,CAAC,CAAC,IAAD,CAAf;AACA,UAAM,UAAU,GAAG,KAAK,CAAC,EAAN,CAAS,WAAT,CAAnB;AACA,MAAA,QAAQ,GAAG,UAAU,GAAG,KAAK,CAAC,IAAN,CAAW,SAAX,CAAH,GAA2B,CAAC,CAAC,MAAF,CAAS,KAAK,CAAC,GAAN,EAAT,CAAhD,CAH+B,CAI/B;;AACA,UAAI,YAAJ,EAAkB;AACd,QAAA,QAAQ,GAAG,6BAAkB,SAAlB,EAA6B,YAA7B,CAAX;AACA,qCAAkB,SAAlB,EAA6B,YAA7B,EAA2C,QAA3C;AACH;;AACD,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,KAAJ,EAAW,QAAX,EAAqB,QAArB,EAA+B,MAA/B,CAAsC,SAAtC,CAAb;AACA,MAAA,SAAS,CAAC,KAAV,CAAgB,gBAAhB,EAAkC,IAAlC;AACA,MAAA,QAAQ,GAAG,QAAX;AACH,KAdL;AAeH;AACJ,CApCD;;eAsCe,a;;;;;;;;;;;AChDf;;AADA;;AAGA;;;;;;;;;;AAUA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AAClE,MAAM,WAAW,GAAG,KAAK,CAAC,OAA1B;AACA,MAAI,SAAS,GAAG,KAAK,CAAC,UAAtB;AACA,MAAI,gBAAJ;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,WAAD,IAAiB,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAtC,EAA4E;AACxE;AACH;;AAED,MAAM,SAAS,GAAG,6BAAkB,SAAlB,EAA6B,WAA7B,CAAlB;;AAEA,MAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACjC,IAAA,gBAAgB,GAAG,mCAAwB,SAAxB,EAAmC,WAAnC,CAAnB;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,4BAAiB,SAAjB,EAA4B,SAA5B,CAAH,GAA4C,EAAjE;AACA,IAAA,CAAC,CAAC,KAAK,CAAC,EAAP,CAAD,CACK,GADL,CACS,gBADT,EAEK,EAFL,CAEQ,gBAFR,EAE0B,UAAS,CAAT,EAAY;AAC9B,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,CAAC,CAAC,IAAD,CAAL,EAAa,MAAb,CAAoB,SAApB,CAAb;AACA,MAAA,SAAS,CAAC,KAAV,CAAgB,gBAAhB,EAAkC,IAAlC;AACH,KALL;AAMH;AACJ,CAtBD;;eAwBe,Y;;;;;;;;;;;ACpCf;;AACA;;;;AAFA;AAIA,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,WAAD,EAAiB;AAC9C,MAAM,aAAa,GAAG,WAAW,CAAC,EAAZ,CAAe,SAAf,CAAyB,IAAzB,CAAtB;AACA,EAAA,WAAW,CAAC,QAAZ,GAAuB,QAAQ,CAAC,sBAAT,EAAvB;AACA,EAAA,WAAW,CAAC,QAAZ,CAAqB,WAArB,CAAiC,aAAjC;AACA,SAAO,WAAP;AACH,CALD;;;;AAOA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,WAAD,EAAiB;AACtC,MAAI,CAAC,WAAD,IAAgB,CAAC,WAAW,CAAC,IAAjC,EAAuC;AACnC;AACH;;AACD,MAAI,aAAa,GAAG,EAApB;AACA,MAAM,aAAa,GAAG,WAAW,CAAC,OAAZ,GAAsB,WAAW,CAAC,OAAZ,CAAoB,OAApB,CAA4B,IAAI,CAAC,KAAL,CAAW,WAAvC,EAAoD,GAApD,CAAtB,GAAiF,EAAvG;;AAEA,UAAQ,WAAW,CAAC,IAApB;AACA,SAAK,MAAM,CAAC,YAAP,CAAoB,KAAzB;AACI,MAAA,aAAa,GAAG,MAAM,CAAC,aAAP,CAAqB,KAArC;AACA;;AACJ,SAAK,MAAM,CAAC,YAAP,MAAL;AACI,MAAA,aAAa,GAAG,MAAM,CAAC,aAAP,MAAhB;AACA;;AACJ,SAAK,MAAM,CAAC,YAAP,QAAL;AACI,MAAA,aAAa,GAAG,MAAM,CAAC,aAAP,QAAhB;AACA;;AACJ,SAAK,MAAM,CAAC,YAAP,WAAL;AACI,MAAA,aAAa,GAAG,MAAM,CAAC,aAAP,WAAhB;AACA;AAZJ;;AAcA,EAAA,WAAW,CAAC,aAAZ,GAA4B,aAAa,GAAG,aAA5C;AACA,SAAO,WAAP;AACH,CAvBD;AAyBA;;;;;;;;;;;;;;AAUA,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,IAAD,EAAO,WAAP,EAAuB;AAC/C,MAAI,CAAC,WAAW,CAAC,aAAjB,EAAgC;AAC5B,IAAA,gBAAgB,CAAC,WAAD,CAAhB;AACH;;AACD,MAAM,gBAAgB,GAAG,WAAW,CAAC,aAArC;AACA,MAAM,cAAc,GAAG,gBAAgB,GAAG,MAAM,CAAC,aAAjD;AACA,EAAA,IAAI,GAAG,IAAI,CAAC,WAAZ,CAN+C,CAQ/C;;AACA,MAAI,IAAJ,EAAU;AACN,QAAI,IAAI,CAAC,QAAL,KAAkB,CAAlB,IAAuB,IAAI,CAAC,WAAL,KAAqB,cAAhD,EAAgE;AAC5D,aAAO,WAAW,CAAC,QAAZ,CAAqB,YAArB,CAAkC,IAAlC,CAAP;AACH;;AACD,IAAA,mBAAmB,CAAC,IAAD,EAAO,WAAP,CAAnB;AACH;AACJ,CAfD;AAiBA;;;;;;;;;;;;AAQA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,WAAD,EAAc,IAAd,EAAuB;AAC7C,MAAI,MAAM,GAAG,EAAb;;AACA,MAAI,CAAC,WAAW,CAAC,aAAjB,EAAgC;AAC5B,IAAA,gBAAgB,CAAC,WAAD,CAAhB;AACH;;AACD,EAAA,MAAM,GAAG,WAAW,CAAC,aAArB;AACA,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAArB;AACA,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAM,GAAG,MAAM,CAAC,aAAvC,CAAnB,CAP6C,CAQ7C;AACA;;AACA,MAAI,IAAI,CAAC,QAAL,KAAkB,EAAtB,EAA0B;AACtB,IAAA,IAAI,CAAC,YAAL,CAAkB,YAAlB,EAAgC,IAAI,CAAC,UAArC;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,UAAjB;AACH,GAHD,MAGO,IAAI,IAAI,CAAC,UAAT,EAAqB;AACxB,IAAA,IAAI,CAAC,UAAL,CAAgB,YAAhB,CAA6B,YAA7B,EAA2C,IAA3C;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,IAAI,CAAC,UAAtB,EAAkC,UAAlC,EAA8C,IAA9C,EAFwB,CAGxB;;AACA,IAAA,WAAW,CAAC,0BAAZ,GAAyC,IAAI,CAAC,eAA9C;AACA,IAAA,WAAW,CAAC,sBAAZ,GAAqC,IAAI,CAAC,WAA1C;AACA,IAAA,WAAW,CAAC,aAAZ,GAA4B,IAAI,CAAC,eAAL,CAAqB,aAAjD;AACH;;AAED,SAAO,IAAP;AACH,CAvBD;AAyBA;;;;;;;;;;AAMA,IAAM,2BAA2B,GAAG,SAA9B,2BAA8B,CAAC,WAAD,EAAiB;AACjD,MAAI,CAAC,WAAW,CAAC,QAAjB,EAA2B;AACvB,IAAA,WAAW,CAAC,QAAZ,GAAuB,QAAQ,CAAC,WAAT,EAAvB;AACH;;AACD,MAAI;AACA,QAAI,WAAW,CAAC,0BAAhB,EAA4C;AACxC;AACA,MAAA,WAAW,CAAC,QAAZ,CAAqB,cAArB,CAAoC,WAAW,CAAC,0BAAZ,CAAuC,WAA3E;AACA,MAAA,mBAAmB,CAAC,WAAW,CAAC,0BAAZ,CAAuC,WAAxC,EAAqD,WAArD,CAAnB;AACH,KAJD,MAIO;AACH;AACA,MAAA,WAAW,CAAC,QAAZ,CAAqB,cAArB,CAAoC,WAAW,CAAC,aAAZ,CAA0B,UAA9D;AACA,MAAA,mBAAmB,CAAC,WAAW,CAAC,aAAZ,CAA0B,UAA3B,EAAuC,WAAvC,CAAnB;AACH;AACJ,GAVD,CAUE,OAAO,GAAP,EAAY;AACV,IAAA,OAAO,CAAC,GAAR,CAAY,qCAAZ,EAAmD,GAAG,CAAC,OAAvD;AACH;;AAED,SAAO,WAAW,CAAC,QAAZ,CAAqB,cAArB,EAAP;AACH,CAnBD;AAqBA;;;;;;;;;AAKA,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,WAAD,EAAiB;AAC9C;AACA,MAAI,WAAW,CAAC,EAAZ,CAAe,UAAnB,EAA+B;AAC3B,WAAO,WAAW,CAAC,EAAZ,CAAe,UAAf,CAA0B,WAA1B,CAAsC,WAAW,CAAC,EAAlD,CAAP;AACH;;AACD,EAAA,2BAA2B,CAAC,WAAD,CAA3B;AACH,CAND;;;;AAQA,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAC,WAAD,EAAc,QAAd,EAA2B;AACtD;AACA,MAAI,WAAW,CAAC,0BAAhB,EAA4C;AACxC,IAAA,IAAI,CAAC,WAAL,CAAiB,WAAW,CAAC,aAA7B,EAA4C,QAA5C,EAAsD,WAAW,CAAC,0BAAlE;AACH,GAFD,MAEO;AACH;AACA,QAAI,WAAW,CAAC,sBAAhB,EAAwC;AACpC,MAAA,WAAW,CAAC,aAAZ,CAA0B,YAA1B,CAAuC,QAAvC,EAAiD,WAAW,CAAC,sBAA7D;AACH,KAFD,MAEO,IAAI,WAAW,CAAC,aAAhB,EAA+B;AAClC;AACA,MAAA,WAAW,CAAC,aAAZ,CAA0B,WAA1B,CAAsC,QAAtC;AACH;AACJ;AACJ,CAbD;;;;;;;;;;;ACxIA,IAAM,YAAY,GAAG;AACjB,EAAA,IAAI,EAAE,cADW;AAEjB,EAAA,GAAG,EAAE,aAFY;AAGjB,EAAA,IAAI,EAAE,cAHW;AAIjB,EAAA,KAAK,EAAE,eAJU;AAKjB,EAAA,QAAQ,EAAE,kBALO;AAMjB,EAAA,IAAI,EAAE,cANW;AAOjB,EAAA,KAAK,EAAE,eAPU;AAQjB,EAAA,KAAK,EAAE,eARU;AASjB,EAAA,MAAM,EAAE,gBATS;AAUjB,EAAA,MAAM,EAAE,gBAVS;AAWjB,EAAA,KAAK,EAAE,eAXU;AAYjB,EAAA,IAAI,EAAE,cAZW;AAajB,EAAA,GAAG,EAAE,aAbY;AAcjB,EAAA,IAAI,EAAE,cAdW;AAejB,EAAA,KAAK,EAAE,aAfU;AAgBjB,QAAI,YAhBa;AAiBjB,YAAQ,gBAjBS;AAkBjB,UAAM,cAlBW;AAmBjB,aAAS;AAnBQ,CAArB;;AAqBA,IAAM,kBAAkB,GAAG,sBAA3B;;AACA,IAAM,aAAa,GAAG,YAAtB;;AACA,IAAM,aAAa,GAAG;AAClB,EAAA,KAAK,EAAE,aADW;AAElB,QAAI,UAFc;AAGlB,UAAM,YAHY;AAIlB,aAAS;AAJS,CAAtB;;AAMA,IAAM,aAAa,GAAG,MAAtB,C,CAEA;;;AACA,IAAM,gBAAgB,GAAG;AACrB,EAAA,QAAQ,EAAE,iBADW;AAErB,EAAA,WAAW,EAAE,iBAFQ;AAGrB,EAAA,MAAM,EAAE;AAHa,CAAzB;;AAMA,IAAM,oBAAoB,GAAG;AACzB,EAAA,WAAW,EAAE,OADY;AAEzB,EAAA,WAAW,EAAE,OAFY;AAGzB,EAAA,YAAY,EAAE,QAHW;AAIzB,EAAA,qBAAqB,EAAE,IAJE;AAKzB,EAAA,qBAAqB,EAAE;AALE,CAA7B;;AAQA,IAAM,uBAAuB,GAAG;AAC5B,EAAA,cAAc,EAAE,iBADY;AAE5B,EAAA,IAAI,EAAE;AAFsB,CAAhC,C,CAKA;;;AACA,IAAM,gBAAgB,GAAG,EAAzB;;AAEA,IAAM,SAAS,GAAG;AACd,EAAA,OAAO,EAAE;AACL,IAAA,IAAI,EAAE;AADD,GADK;AAId,EAAA,UAAU,EAAE;AAJE,CAAlB;;;;;;;;;;;ACtDA;;AAEA;;;;;;;;;;;AAWA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AAChE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,OAAD,IAAa,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAlC,EAAwE;AACpE;AACH;;AAED,EAAA,KAAK,CAAC,WAAN,GAAoB,KAAK,CAAC,WAAN,IAAqB,EAAzC;AACA,EAAA,KAAK,CAAC,WAAN,CAAkB,kBAAlB,GAAuC,KAAK,CAAC,WAAN,CAAkB,kBAAlB,IAAwC,EAA/E,CATgE,CAWhE;;AACA,MAAM,UAAU,GAAG,KAAK,CAAC,WAAN,CAAkB,kBAArC;AACA,MAAI,UAAU,GAAG,EAAjB;AACA,MAAM,YAAY,GAAG,iCAAsB,SAAtB,EAAiC,KAAjC,CAArB;AACA,MAAI,cAAc,GAAG,EAArB;AACA,MAAI,gBAAgB,GAAG,KAAvB;AACA,MAAI,gBAAgB,GAAG,KAAvB;AACA,MAAI,OAAO,GAAG,EAAd;;AAEA,MAAI,OAAO,YAAP,KAAwB,QAA5B,EAAsC;AAClC,IAAA,gBAAgB,GAAG,IAAnB;AACH,GAFD,MAEO,IAAI,yBAAc,YAAd,CAAJ,EAAiC;AACpC,IAAA,gBAAgB,GAAG,IAAnB;AACH,GAFM,MAEA;AACH;AACA;AACH;;AAED,MAAI,gBAAJ,EAAsB;AAClB,IAAA,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe,YAAf,CAAb;AACH,GAFD,MAEO;AACH,IAAA,UAAU,GAAG,YAAY,CAAC,OAAb,CAAqB,QAArB,EAA+B,GAA/B,EAAoC,IAApC,EAAb;AACA,IAAA,cAAc,GAAG,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAjB;AACH,GAlC+D,CAmChE;;;AACA,MAAI,UAAU,KAAK,UAAnB,EAA+B;AAC3B;AACH,GAtC+D,CAwChE;;;AACA,MAAM,UAAU,GAAG,KAAK,CAAC,EAAN,CAAS,SAA5B,CAzCgE,CA0ChE;;AACA,MAAM,gBAAgB,GAAG,UAAU,CAAC,MAApC;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,gBAApB,EAAsC,CAAC,IAAI,CAA3C,EAA8C;AAC1C,IAAA,OAAO,CAAC,IAAR,CAAa,UAAU,CAAC,CAAD,CAAvB;AACH;;AAED,MAAI,gBAAJ,EAAsB;AAClB,oBAAK,YAAL,EAAmB,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC9B,UAAM,CAAC,GAAG,OAAO,CAAC,OAAR,CAAgB,CAAhB,CAAV;;AACA,UAAI,CAAC,KAAK,IAAV,EAAgB;AACZ,QAAA,OAAO,CAAC,IAAR,CAAa,CAAb;AACH,OAFD,MAEO,IAAI,CAAC,KAAK,CAAC,CAAX,EAAc;AACjB,QAAA,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,CAAlB;AACH;AACJ,KAPD;AAQH,GATD,MASO,IAAI,gBAAJ,EAAsB;AACzB;AACA,IAAA,OAAO,GAAG,4BAAiB,OAAjB,EAA0B,UAA1B,CAAV;AACA,IAAA,OAAO,GAAG,OAAO,CAAC,MAAR,CAAe,cAAf,CAAV;AACH,GA7D+D,CA+DhE;;;AACA,EAAA,OAAO,GAAG,OAAO,CAAC,MAAR,CAAe,UAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAa;AAClC,WAAO,CAAC,CAAC,OAAF,CAAU,CAAV,MAAiB,CAAxB;AACH,GAFS,CAAV;AAIA,EAAA,OAAO,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAV,CApEgE,CAqEhE;;AACA,EAAA,KAAK,CAAC,WAAN,CAAkB,kBAAlB,GAAuC,UAAvC,CAtEgE,CAuEhE;;AACA,EAAA,KAAK,CAAC,EAAN,CAAS,YAAT,CAAsB,OAAtB,EAA+B,OAA/B;AACH,CAzED;;eA2Ee,U;;;;;;;;;;;ACvFf;;AADA;;AAGA;;;;;;;;;AASA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AACrE,MAAM,WAAW,GAAG,KAAK,CAAC,OAA1B;AACA,MAAI,SAAS,GAAG,KAAK,CAAC,UAAtB;AACA,MAAI,gBAAJ;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,WAAD,IAAiB,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAtC,EAA4E;AACxE;AACH;;AAED,MAAM,SAAS,GAAG,6BAAkB,SAAlB,EAA6B,WAA7B,CAAlB;;AAEA,MAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACjC,IAAA,gBAAgB,GAAG,mCAAwB,SAAxB,EAAmC,WAAnC,CAAnB;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,4BAAiB,SAAjB,EAA4B,SAA5B,CAAH,GAA4C,EAAjE;AACA,IAAA,CAAC,CAAC,KAAK,CAAC,EAAP,CAAD,CACK,GADL,CACS,mBADT,EAEK,EAFL,CAEQ,mBAFR,EAE6B,UAAS,CAAT,EAAY;AACjC,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,CAAC,CAAC,IAAD,CAAL,EAAa,MAAb,CAAoB,SAApB,CAAb;AACA,MAAA,SAAS,CAAC,KAAV,CAAgB,gBAAhB,EAAkC,IAAlC;AACH,KALL;AAMH;AACJ,CAtBD;;eAwBe,e;;;;;;;;;;;ACpCf;;AACA;;AAEA,IAAI,eAAJ;AAEA;;;;;;;;AAOA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,IAAD,EAAO,IAAP,EAAgB;AAC5B,MAAI,cAAc,GAAG,IAArB;AACA,EAAA,IAAI,GAAG,IAAI,CAAC,iBAAZ;;AACA,SAAO,IAAP,EAAa;AACT,IAAA,cAAc,GAAG,IAAI,CAAC,IAAD,CAArB;;AACA,QAAI,cAAJ,EAAoB;AAChB,MAAA,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACH;;AACD,IAAA,IAAI,GAAG,IAAI,CAAC,kBAAZ;AACH;AACJ,CAVD;;AAYA,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,IAAD,EAAU;AAClC,MAAM,GAAG,GAAG,EAAZ;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAAI,CAAC,UAAhC,EAA4C,OAA5C,CAAoD,UAAC,IAAD,EAAU;AAC1D,IAAA,GAAG,CAAC,IAAI,CAAC,IAAN,CAAH,GAAiB,IAAI,CAAC,KAAtB;AACH,GAFD;AAGA,SAAO,GAAP;AACH,CAND;;AAQA,IAAM,2BAA2B,GAAG,SAA9B,2BAA8B,GAAgC;AAAA,MAA/B,OAA+B,uEAArB,EAAqB;AAAA,MAAjB,YAAiB;AAChE,SAAO,CAAC,YAAY,CAAC,KAAd,EAAqB,YAAY,MAAjC,EAAsC,YAAY,QAAlD,EAAyD,YAAY,WAArE,EAA+E,MAA/E,CAAsF,UAAC,IAAD,EAAU;AACnG,WAAO,OAAO,OAAO,CAAC,IAAD,CAAd,KAAyB,WAAhC;AACH,GAFM,CAAP;AAGH,CAJD;;AAMA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,IAAD,EAAU;AAC5B,SAAO,IAAI,CAAC,OAAL,KAAiB,KAAxB;AACH,CAFD;;AAIA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,IAAD,EAAO,YAAP,EAAwB;AAC7C,SAAO,IAAI,CAAC,OAAL,KAAiB,KAAjB,IAA0B,IAAI,CAAC,YAAL,CAAkB,YAAY,CAAC,IAA/B,CAAjC;AACH,CAFD;;AAIA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,OAAyC;AAAA,MAAvC,IAAuC,QAAvC,IAAuC;AAAA,MAAjC,OAAiC,QAAjC,OAAiC;AAAA,MAAxB,YAAwB,QAAxB,YAAwB;AAAA,MAAV,IAAU,QAAV,IAAU;AAClE,MAAI,SAAJ;AACA,MAAI,SAAJ;;AAEA,MAAI,eAAe,IAAI,eAAe,CAAC,IAAD,CAAlC,IAA4C,OAAO,OAAO,CAAC,IAAD,CAAd,KAAyB,WAAzE,EAAsF;AAClF,IAAA,YAAY,CAAC,IAAD,CAAZ,GAAqB,YAAY,CAAC,IAAD,CAAZ,IAAsB,EAA3C;AACA,IAAA,SAAS,GAAG,OAAO,CAAC,IAAD,CAAP,CAAc,IAAd,EAAZ;AACA,IAAA,SAAS,GAAG;AACR,MAAA,EAAE,EAAE,IADI;AAER,MAAA,OAAO,EAAE;AAFD,KAAZ,CAHkF,CAQlF;;AACA,IAAA,SAAS,GAAG,6BAAkB,SAAlB,CAAZ,CATkF,CAWlF;AACA;AACA;;AACA,QAAM,SAAS,GAAG,oCAAyB,SAAS,CAAC,OAAnC,CAAlB;;AACA,QAAI,SAAJ,EAAe;AACX,MAAA,SAAS,CAAC,UAAV,GAAuB,SAAvB;AACA,MAAA,SAAS,CAAC,OAAV,GAAoB,SAAS,CAAC,OAAV,CAAkB,OAAlB,CAA0B,YAAM,aAAhC,EAA+C,EAA/C,EAAmD,IAAnD,EAApB;AACH,KAlBiF,CAmBlF;;;AACA,IAAA,SAAS,CAAC,kBAAU,UAAX,CAAT,GAAkC,YAAY,CAAC,IAAD,CAA9C;AACA,IAAA,YAAY,CAAC,IAAD,CAAZ,CAAmB,IAAnB,CAAwB,SAAxB;AACH;;AACD,SAAO,YAAP;AACH,CA5BD;;AA8BA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,QAAiF;AAAA,6BAA/E,QAA+E;AAAA,MAA/E,QAA+E,+BAApE,IAAoE;AAAA,iCAA9D,YAA8D;AAAA,MAA9D,YAA8D,mCAA/C,EAA+C;AAAA,MAA3C,SAA2C,SAA3C,SAA2C;AAAA,oCAAhC,kBAAgC;AAAA,MAAhC,kBAAgC,sCAAX,KAAW;AACxG,MAAI,YAAY,GAAG,EAAnB;;AAEA,MAAI,CAAC,QAAD,YAAqB,MAAM,CAAC,IAAhC,EAAsC;AAClC,UAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;AACH;;AAED,EAAA,eAAe,GAAG,eAAe,IAAI,qBAAU,YAAV,CAArC;;AAEA,MAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD,EAA8C;AAAA,QAAvC,eAAuC,uEAArB,gBAAqB;AAC5D,QAAI,gBAAgB,GAAG,KAAvB;;AAEA,QAAI,IAAI,CAAC,QAAL,KAAkB,CAAlB,IAAuB,CAAC,IAAI,CAAC,aAAL,EAA5B,EAAkD;AAC9C,aAAO,IAAP;AACH;;AACD,QAAI,eAAe,CAAC,IAAD,EAAO,YAAP,CAAf,IAAwC,OAAO,SAAP,KAAqB,UAArB,IAAmC,SAAS,CAAC,IAAD,CAAxF,EAAiG;AAC7F,aAAO,KAAP;AACH,KAR2D,CAU5D;AACA;;;AACA,QAAM,OAAO,GAAG,mBAAmB,CAAC,IAAD,CAAnC;AACA,QAAM,yBAAyB,GAAG,2BAA2B,CAAC,OAAD,EAAU,YAAV,CAA7D;AACA,QAAI,WAAW,GAAG,EAAlB;;AAEA,QAAI,yBAAyB,CAAC,MAA9B,EAAsC;AAClC,MAAA,gBAAgB,GAAG,IAAnB;AACA,MAAA,WAAW,GAAG,yBAAd;AACH,KAHD,MAGO,IAAI,kBAAkB,IAAI,OAAO,CAAC,YAAY,CAAC,GAAd,CAAjC,EAAqD;AACxD;AACA,aAAO,IAAP;AACH,KAHM,MAGA;AACH,MAAA,WAAW,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAd;AACH;;AAED,IAAA,WAAW,CAAC,OAAZ,CAAoB,UAAC,GAAD,EAAS;AACzB;AACA,UAAI,GAAG,KAAK,YAAY,QAApB,IAA6B,GAAG,KAAK,YAAY,WAArD,EAA+D;AAC3D,QAAA,YAAY,GAAG,oBAAoB,CAAC;AAChC,UAAA,IAAI,EAAE,IAD0B;AAEhC,UAAA,OAAO,EAAE,OAFuB;AAGhC,UAAA,YAAY,EAAE,YAHkB;AAIhC,UAAA,IAAI,EAAE;AAJ0B,SAAD,CAAnC;AAMH;AACJ,KAVD,EA1B4D,CAsC5D;;AACA,QAAI,gBAAJ,EAAsB;AAClB,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GA5CD;;AA8CA,MAAI,SAAS,CAAC,QAAD,EAAW,aAAX,CAAb,EAAwC;AACpC,IAAA,OAAO,CAAC,QAAD,EAAW,SAAX,CAAP;AACH;;AACD,SAAO,YAAP;AACH,CA3DD;;eA6De,kB;;;;;;;;;;;ACxIf;;AADA;;AAGA;;;;;;;;;AASA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AAClE,MAAM,WAAW,GAAG,KAAK,CAAC,OAA1B;AACA,MAAI,SAAS,GAAG,KAAK,CAAC,UAAtB;AACA,MAAI,gBAAJ;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,WAAD,IAAiB,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAtC,EAA4E;AACxE;AACH;;AAED,MAAM,SAAS,GAAG,6BAAkB,SAAlB,EAA6B,WAA7B,CAAlB;;AAEA,MAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACjC,IAAA,gBAAgB,GAAG,mCAAwB,SAAxB,EAAmC,WAAnC,CAAnB;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,4BAAiB,SAAjB,EAA4B,SAA5B,CAAH,GAA4C,EAAjE;AACA,IAAA,CAAC,CAAC,KAAK,CAAC,EAAP,CAAD,CACK,GADL,CACS,gBADT,EAEK,EAFL,CAEQ,gBAFR,EAE0B,UAAS,CAAT,EAAY;AAC9B,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,CAAC,CAAC,IAAD,CAAL,EAAa,MAAb,CAAoB,SAApB,CAAb;AACA,MAAA,SAAS,CAAC,KAAV,CAAgB,gBAAhB,EAAkC,IAAlC;AACH,KALL;AAMH;AACJ,CAtBD;;eAwBe,Y;;;;;;;;;;;ACpCf;;AACA;;AACA;;;;AAEA;;;;;;;;AAQA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAoC;AACrD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AAEA,MAAI,CAAC,OAAD,IAAY,OAAO,CAAC,MAAR,GAAiB,wBAAjC,EAAmD;AAC/C;AACH;;AAED,MAAI,CAAC,KAAK,CAAC,QAAX,EAAqB;AACjB,QAAI,OAAO,CAAC,MAAR,GAAiB,wBAArB,EAAuC;AACnC;AACH,KAHgB,CAIjB;;;AACA,IAAA,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,OAAN,CAAc,OAAd,CAAsB,YAAM,WAA5B,EAAyC,GAAzC,CAAhB;AACA,QAAM,WAAW,GAAG,OAAO,CAAC,KAAR,CAAc,YAAM,KAApB,CAApB;;AAEA,QAAI,CAAC,WAAL,EAAkB;AACd;AACH;;AAED,IAAA,KAAK,CAAC,QAAN,GAAiB,EAAjB;AACA,IAAA,KAAK,CAAC,QAAN,CAAe,KAAf,GAAuB,WAAW,CAAC,CAAD,CAAX,CAAe,IAAf,EAAvB;;AAEA,QAAI,WAAW,CAAC,CAAD,CAAf,EAAoB;AAChB,MAAA,KAAK,CAAC,QAAN,CAAe,OAAf,GAAyB,WAAW,CAAC,CAAD,CAAX,CAAe,IAAf,EAAzB;AACA,MAAA,KAAK,CAAC,aAAN,GAAsB,KAAK,CAAC,EAAN,CAAS,aAA/B;AACA,MAAA,KAAK,CAAC,0BAAN,GAAmC,KAAK,CAAC,EAAN,CAAS,eAA5C;AACA,MAAA,KAAK,CAAC,sBAAN,GAA+B,KAAK,CAAC,EAAN,CAAS,WAAxC;AACH;AACJ;;AAED,sCAAmB;AACf,IAAA,WAAW,EAAE,KADE;AAEf,IAAA,SAAS,EAAE,SAFI;AAGf,IAAA,YAAY,EAAE;AAHC,GAAnB;AAKH,CAnCD;;eAqCe,Y;;;;;;;;;;;AChDf;;AACA;;AAFA;;AAIA;;;;;;;;;AASA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AAClE,MAAM,WAAW,GAAG,KAAK,CAAC,OAA1B;AACA,MAAI,SAAS,GAAG,KAAK,CAAC,UAAtB;AACA,MAAM,aAAa,GAAG,6BAAqB,qBAA3C;AACA,MAAM,cAAc,GAAG,6BAAqB,qBAA5C;AACA,MAAI,gBAAJ;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;AAEA,EAAA,KAAK,CAAC,WAAN,GAAoB,KAAK,CAAC,WAAN,IAAqB,EAAzC;;AAEA,MAAI,CAAC,WAAD,IAAiB,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAtC,EAA4E;AACxE;AACH;;AAED,MAAM,QAAQ,GAAG,6BAAkB,SAAlB,EAA6B,WAA7B,CAAjB;;AAEA,MAAI,QAAQ,IAAI,OAAO,QAAQ,CAAC,aAAD,CAAf,KAAmC,UAA/C,IAA6D,OAAO,QAAQ,CAAC,cAAD,CAAf,KAAoC,UAArG,EAAiH;AAC7G,IAAA,gBAAgB,GAAG,mCAAwB,SAAxB,EAAmC,WAAnC,CAAnB;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,4BAAiB,SAAjB,EAA4B,SAA5B,CAAH,GAA4C,EAAjE;AAEA,IAAA,CAAC,CAAC,KAAK,CAAC,EAAP,CAAD,CACK,GADL,CACS,yCADT,EAEK,KAFL,CAGQ,SAAS,KAAT,CAAe,CAAf,EAAkB;AACd,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,KAAK,CAAC,EAAV,EAAc,MAAd,CAAqB,SAArB,CAAb;AACA,MAAA,QAAQ,CAAC,aAAD,CAAR,CAAwB,KAAxB,CAA8B,gBAA9B,EAAgD,IAAhD;AACH,KANT,EAOQ,SAAS,KAAT,CAAe,CAAf,EAAkB;AACd,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,KAAK,CAAC,EAAV,EAAc,MAAd,CAAqB,SAArB,CAAb;AACA,MAAA,QAAQ,CAAC,cAAD,CAAR,CAAyB,KAAzB,CAA+B,gBAA/B,EAAiD,IAAjD;AACH,KAVT;AAYH;AACJ,CAjCD;;eAmCe,Y;;;;;;;;;;;AChDf;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAQA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAoC;AAClD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB,CADkD,CAGlD;;AACA,MAAI,CAAC,OAAD,IAAa,KAAK,CAAC,MAAN,IAAgB,KAAK,CAAC,wBAAN,KAAmC,KAApE,EAA4E;AACxE;AACH;;AAED,EAAA,KAAK,CAAC,WAAN,GAAoB,KAAK,CAAC,WAAN,IAAqB,EAAzC;AACA,EAAA,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,IAAN,IAAc,0BAA3B;AAEA,MAAM,oBAAoB,GAAG,KAAK,CAAC,WAAN,CAAkB,kBAA/C,CAXkD,CAYlD;;AACA,MAAM,kBAAkB,GAAG,iCAAsB,SAAtB,EAAiC,KAAjC,KAA2C,KAAtE,CAbkD,CAelD;;AACA,MAAI,oBAAoB,KAAK,kBAAzB,IAA+C,CAAC,KAAK,CAAC,wBAA1D,EAAoF;AAChF;AACH;;AAED,MAAM,YAAY,GAAG,OAAO,CAAC,kBAAD,CAA5B,CApBkD,CAsBlD;;AACA,MAAI,CAAC,YAAD,IAAiB,KAAK,CAAC,MAAvB,IAAiC,KAAK,CAAC,EAAN,CAAS,UAA9C,EAA0D;AACtD,6BAAc,KAAK,CAAC,EAApB,EADsD,CAEtD;;AACA,IAAA,oBAAoB,CAAC;AACjB,MAAA,SAAS,EAAE,SADM;AAEjB,MAAA,KAAK,EAAE;AAFU,KAAD,CAApB;AAIA;AACH,GA/BiD,CAiClD;;;AACA,EAAA,KAAK,CAAC,WAAN,CAAkB,kBAAlB,GAAuC,kBAAvC,CAlCkD,CAoClD;AACA;AACA;;AACA,MAAI,CAAC,KAAK,CAAC,QAAX,EAAqB;AACjB,2CAAkB,KAAlB,EAAyB,KAAK,CAAC,EAA/B;AACA,IAAA,KAAK,CAAC,EAAN,CAAS,eAAT,CAAyB,YAAY,MAArC;AACA,kDAAyB,KAAzB;AACH;;AAED,MAAI,CAAC,YAAL,EAAmB;AACf;AACA,0CAAgB,KAAhB;AACH,GAHD,MAGO;AACH;AACA,0CAAgB;AACZ,MAAA,WAAW,EAAE,KADD;AAEZ,MAAA,SAAS,EAAE,SAFC;AAGZ,MAAA,YAAY,EAAE;AAHF,KAAhB,EAFG,CAQH;AACA;;AACA,QAAI,KAAK,CAAC,MAAN,IAAgB,CAAC,KAAK,CAAC,wBAA3B,EAAqD;AACjD;AACA,MAAA,oBAAoB,CAAC;AACjB,QAAA,SAAS,EAAE,SADM;AAEjB,QAAA,KAAK,EAAE;AAFU,OAAD,CAApB;AAIH;AACJ;AACJ,CAlED;;AAoEA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,OAAwB;AAAA,MAAtB,SAAsB,QAAtB,SAAsB;AAAA,MAAX,KAAW,QAAX,KAAW;AACjD,MAAI,GAAG,GAAG,KAAV;;AACA,MAAI,SAAS,CAAC,GAAV,CAAc,gBAAlB,EAAoC;AAChC,IAAA,SAAS,CAAC,GAAV,CAAc,gBAAd,CAA+B,IAA/B,CACK,UAAC,KAAD,EAAQ,KAAR;AAAA,aAAkB,YAAM;AACrB,QAAA,KAAK,CAAC,kBAAU,UAAX,CAAL,CAA4B,MAA5B,CAAmC,KAAnC,EAA0C,CAA1C;AACH,OAFA;AAAA,KAAD,CAEG,KAFH,EAEU,KAAK,CAAC,kBAAU,UAAX,CAAL,CAA4B,OAA5B,CAAoC,KAApC,CAFV,CADJ;AAKA,IAAA,GAAG,GAAG,IAAN;AACH;;AACD,SAAO,GAAP;AACH,CAXD;;eAae,S;;;;;;AC9Ff;;AACA;;;;AAEA,IAAI,YAAY,GAAG,MAAM,CAAC,YAA1B;AACA,IAAI,gBAAgB,GAAG,MAAM,CAAC,gBAA9B;;AAEA,IAAM,GAAG,GAAG,SAAN,GAAM,GAAmB;AAAA,MAAlB,QAAkB,uEAAP,EAAO;;AAC3B,MAAI,QAAQ,CAAC,YAAb,EAA2B;AACvB,IAAA,YAAY,GAAG,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,QAAQ,CAAC,YAAtB,CAAf;AACH;;AACD,MAAI,QAAQ,CAAC,gBAAb,EAA+B;AAC3B,IAAA,gBAAgB,GAAG,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,QAAQ,CAAC,gBAAtB,CAAnB;AACH;AACJ,CAPD;;AASA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,YAAD,EAAoC;AAAA,MAArB,SAAqB,uEAAT,IAAS;AAC7C,EAAA,CAAC,CAAC,gBAAF,GAAqB,gBAArB;AACA,SAAO,IAAI,cAAJ,CAAW,YAAX,EAAyB,SAAzB,EAAoC,YAApC,CAAP;AACH,CAHD,C,CAKA;;;AACA,MAAM,CAAC,QAAP,GAAkB;AACd,EAAA,GAAG,EAAE,GADS;AAEd,EAAA,IAAI,EAAE,IAFQ;AAGd,EAAA,OAAO,EAAE;AAHK,CAAlB;;;;;;;;;;ACrBA;;AAEA;;;;;;;;AAQA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AAClE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,MAAI,QAAQ,GAAG,EAAf;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,OAAD,IAAa,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAlC,EAAwE;AACpE;AACH;;AAED,EAAA,QAAQ,GAAG,6BAAkB,SAAlB,EAA6B,OAA7B,CAAX;;AAEA,MAAI,OAAO,QAAP,KAAoB,WAApB,IAAmC,QAAQ,KAAK,IAApD,EAA0D;AACtD,QAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,EAAP,CAAlB;AACA,QAAM,UAAU,GAAG,QAAQ,CAAC,EAAT,CAAY,WAAZ,CAAnB;AACA,QAAM,OAAO,GAAG,QAAQ,CAAC,EAAT,CAAY,QAAZ,CAAhB;AACA,QAAM,SAAS,GAAG,QAAQ,CAAC,CAAD,CAAR,CAAY,IAA9B;AACA,QAAM,WAAW,GAAG,OAAO,GAAG,CAAC,CAAC,iBAAiB,SAAjB,GAA6B,IAA9B,CAAJ,GAA0C,IAArE;AACA,QAAM,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC,IAAT,CAAc,SAAd,CAAH,GAA8B,QAAQ,CAAC,GAAT,EAAzD,CANsD,CAQtD;;AACA,QAAI,QAAQ,KAAK,QAAjB,EAA2B;AACvB,UAAI,UAAJ,EAAgB;AACZ,QAAA,QAAQ,CAAC,IAAT,CAAc,SAAd,EAAyB,OAAO,CAAC,QAAD,CAAhC;AACH,OAFD,MAEO,IAAI,OAAJ,EAAa;AAChB,QAAA,WAAW,CAAC,GAAZ,CAAgB,CAAC,QAAD,CAAhB;AACH,OAFM,MAEA;AACH,QAAA,QAAQ,CAAC,GAAT,CAAa,QAAb;AACH;AACJ;AACJ;AACJ,CA9BD;;eAgCe,Y;;;;;;;;;;;AC1Cf;;;;AAEA;;;;;;;;;AAUA,IAAM,MAAM,GAAG,EAAf;;AAEA,IAAM,cAAc,GAAG,SAAjB,cAAiB,GAAyD;AAAA,MAAxD,QAAwD,uEAA7C,IAA6C;AAAA,MAAvC,SAAuC,uEAA3B,EAA2B;AAAA,MAAvB,EAAuB;AAAA,MAAnB,MAAmB,uEAAV,KAAU;;AAC5E,MAAI,CAAC,QAAD,IAAa,CAAC,QAAQ,CAAC,MAAvB,IAAiC,CAAC,SAAlC,IAA+C,OAAO,EAAP,KAAc,UAAjE,EAA6E;AACzE;AACH;;AAED,MAAI,UAAJ;AACA,MAAI,YAAY,GAAG,KAAnB;AAEA,EAAA,SAAS,GAAG,SAAS,CAAC,OAAV,CAAkB,IAAI,CAAC,KAAL,CAAW,WAA7B,EAA0C,EAA1C,CAAZ;AACA,EAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,MAAM,CAAC,SAAD,CAAN,IAAqB,EAAzC,CAT4E,CAU5E;;AACA,EAAA,YAAY,GAAG,MAAM,CAAC,SAAD,CAAN,CAAkB,IAAlB,CAAuB,UAAC,UAAD,EAAgB;AAClD,QAAI,UAAU,CAAC,QAAQ,CAAC,MAAV,CAAd,EAAiC;AAC7B,MAAA,UAAU,CAAC,QAAQ,CAAC,MAAV,CAAV,GAA8B,EAAE,CAAC,IAAH,CAAQ,QAAQ,CAAC,SAAjB,CAA9B;AACA,MAAA,UAAU,CAAC,MAAX,GAAoB,MAApB;AACA,aAAO,IAAP;AACH;AACJ,GANc,CAAf,CAX4E,CAkB5E;;AACA,MAAI,CAAC,YAAL,EAAmB;AACf,IAAA,UAAU,GAAG,EAAb;AACA,IAAA,UAAU,CAAC,QAAQ,CAAC,MAAV,CAAV,GAA8B,EAAE,CAAC,IAAH,CAAQ,QAAQ,CAAC,SAAjB,CAA9B;AACA,IAAA,UAAU,CAAC,MAAX,GAAoB,MAApB;AACA,IAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,IAAlB,CAAuB,UAAvB;AACH;AACJ,CAzBD;;;;AA2BA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,GAAyC;AAAA,MAAxC,QAAwC,uEAA7B,IAA6B;AAAA,MAAvB,SAAuB,uEAAX,EAAW;AAAA,MAAP,EAAO;AAChE,EAAA,cAAc,CAAC,QAAD,EAAW,SAAX,EAAsB,EAAtB,EAA0B,IAA1B,CAAd;AACH,CAFD;;;;AAIA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAiC;AAAA,MAAhC,MAAgC,uEAAvB,EAAuB;AAAA,MAAnB,SAAmB,uEAAP,EAAO;;AACtD,MAAI,CAAC,MAAD,IAAW,CAAC,SAAhB,EAA2B;AACvB;AACH;;AAED,MAAI,CAAC,GAAG,CAAR;AACA,MAAI,iBAAiB,GAAG,CAAxB;AACA,MAAI,UAAJ;AAEA,EAAA,SAAS,GAAG,SAAS,CAAC,OAAV,CAAkB,IAAI,CAAC,KAAL,CAAW,WAA7B,EAA0C,EAA1C,CAAZ;;AAEA,MAAI,MAAM,CAAC,SAAD,CAAV,EAAuB;AACnB,IAAA,iBAAiB,GAAG,MAAM,CAAC,SAAD,CAAN,CAAkB,MAAtC;;AACA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,iBAAhB,EAAmC,CAAC,IAAI,CAAxC,EAA2C;AACvC,MAAA,UAAU,GAAG,MAAM,CAAC,SAAD,CAAN,CAAkB,CAAlB,CAAb;;AACA,UAAI,UAAU,CAAC,MAAD,CAAd,EAAwB;AACpB,QAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,MAAlB,CAAyB,CAAzB,EAA4B,CAA5B;AACA;AACH;AACJ;AACJ,GApBqD,CAqBtD;;;AACA,MAAI,CAAC,MAAM,CAAC,SAAD,CAAN,CAAkB,MAAvB,EAA+B;AAC3B,WAAO,MAAM,CAAC,SAAD,CAAb;AACH;AACJ,CAzBD;AA2BA;;;;;;;;;AAKA,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,GAAiB;AAAA,MAAhB,MAAgB,uEAAP,EAAO;;AACzC,MAAI,CAAC,MAAL,EAAa;AACT;AACH;;AACD,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAC,SAAD,EAAe;AACvC,IAAA,gBAAgB,CAAC,MAAD,EAAS,SAAT,CAAhB;AACH,GAFD;AAGH,CAPD;;;;AASA,IAAM,YAAY,GAAG,SAAf,YAAe,GAA6B;AAAA,MAA5B,SAA4B,uEAAhB,EAAgB;;AAAA,oCAAT,IAAS;AAAT,IAAA,IAAS;AAAA;;AAC9C,MAAI,CAAC,SAAD,IAAc,CAAC,MAAM,CAAC,SAAD,CAAzB,EAAsC;AAClC;AACH;;AAED,EAAA,SAAS,GAAG,SAAS,CAAC,OAAV,CAAkB,IAAI,CAAC,KAAL,CAAW,WAA7B,EAA0C,EAA1C,CAAZ;AAEA,EAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,OAAlB,CAA0B,UAAC,UAAD,EAAgB;AACtC,IAAA,MAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,OAAxB,CAAgC,UAAC,MAAD,EAAY;AACxC,UAAI,OAAO,UAAU,CAAC,MAAD,CAAjB,KAA8B,UAAlC,EAA8C;AAC1C,YAAM,GAAG,GAAG,UAAU,CAAC,MAAD,CAAV,OAAA,UAAU,EAAY,IAAZ,CAAtB;;AACA,YAAI,UAAU,CAAC,MAAf,EAAuB;AACnB,UAAA,gBAAgB,CAAC,MAAD,EAAS,SAAT,CAAhB;AACH;;AACD,eAAO,GAAP;AACH;AACJ,KARD;AASH,GAVD;AAWH,CAlBD;;;;;;;;;;;;ACrFA;;AACA;;AACA;;AACA;;AACA;;;;AALA;AAOA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,OAA4C;AAAA,MAA1C,WAA0C,QAA1C,WAA0C;AAAA,MAA7B,SAA6B,QAA7B,SAA6B;AAAA,MAAlB,YAAkB,QAAlB,YAAkB;;AACnE,MAAI,CAAC,WAAD,IAAgB,CAAC,SAAjB,IAA8B,CAAC,YAAnC,EAAiD;AAC7C;AACH;;AACD,MAAI,IAAJ;AACA,MAAI,mBAAJ;AACA,MAAM,aAAa,GAAG,iCAAsB,SAAtB,EAAiC,WAAW,CAAC,QAA7C,CAAtB;AACA,MAAI,YAAY,GAAG,KAAnB,CAPmE,CASnE;;AACA,MAAI,mBAAQ,aAAR,CAAJ,EAA4B;AACxB,IAAA,mBAAmB,GAAG,aAAa,CAAC,MAApC;AACH,GAFD,MAEO,IAAI,yBAAc,aAAd,CAAJ,EAAkC;AACrC,IAAA,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,aAAZ,CAAP;AACA,IAAA,mBAAmB,GAAG,IAAI,CAAC,MAA3B;AACH,GAHM,MAGA;AACH;AACA,WAAO,6BAAkB,IAAlB,EAAwB,+CAAxB,CAAP;AACH,GAlBkE,CAoBnE;;;AACA,MAAI,CAAC,WAAW,CAAC,IAAjB,EAAuB;AACnB,IAAA,WAAW,CAAC,IAAZ,GAAmB,qBAAmB,KAAtC;AACA,2CAAkB,WAAlB,EAA+B,WAAW,CAAC,EAA3C;AACH,GAxBkE,CA0BnE;;;AACA,MAAI,OAAO,WAAW,CAAC,aAAnB,KAAqC,WAAzC,EAAsD;AAClD;AACA,IAAA,WAAW,CAAC,aAAZ,GAA4B,mBAA5B,CAFkD,CAGlD;;AACA,IAAA,WAAW,CAAC,EAAZ,CAAe,eAAf,CAA+B,YAAY,CAAC,KAA5C;AACA,IAAA,YAAY,GAAG,IAAf;AACH,GAND,MAMO;AACH;AACA,IAAA,YAAY,GAAG,WAAW,CAAC,aAAZ,KAA8B,mBAA7C,CAFG,CAGH;;AACA,IAAA,WAAW,CAAC,aAAZ,GAA4B,mBAA5B;AACH;;AAED,MAAI,CAAC,YAAL,EAAmB;AACf,IAAA,WAAW,CAAC,qBAAZ,CAAkC,OAAlC,CAA0C,UAAS,YAAT,EAAuB,CAAvB,EAA0B;AAChE,UAAI,CAAC,yBAAc,YAAd,CAAL,EAAkC;AAC9B,YAAM,WAAW,GAAG,wBAAwB,CAAC;AACzC,UAAA,WAAW,EAAE,WAD4B;AAEzC,UAAA,SAAS,EAAE,SAF8B;AAGzC,UAAA,aAAa,EAAE,aAH0B;AAIzC,UAAA,IAAI,EAAE,IAJmC;AAKzC,UAAA,KAAK,EAAE;AALkC,SAAD,CAA5C;AAOA,qCAAgB;AACZ,UAAA,YAAY,EAAE,YADF;AAEZ,UAAA,WAAW,EAAE,WAFD;AAGZ,UAAA,YAAY,EAAE,YAHF;AAIZ,UAAA,YAAY,EAAE;AAJF,SAAhB;AAMH;AACJ,KAhBD;AAkBA;AACH,GA5DkE,CA8DnE;;;AACA,MAAM,QAAQ,GAAG,qBAAqB,CAAC,WAAD,EAAc,SAAd,EAAyB,YAAzB,EAAuC,aAAvC,EAAsD,IAAtD,CAAtC;AAEA,mDAA4B,WAA5B,EAjEmE,CAmEnE;;AACA,SAAO,4CAAuB,WAAvB,EAAoC,QAApC,CAAP;AACH,CArED;;AAuEA,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,QAA0D;AAAA,MAAxD,WAAwD,SAAxD,WAAwD;AAAA,MAA3C,SAA2C,SAA3C,SAA2C;AAAA,MAAhC,aAAgC,SAAhC,aAAgC;AAAA,MAAjB,IAAiB,SAAjB,IAAiB;AAAA,MAAX,KAAW,SAAX,KAAW;AACvF,MAAM,WAAW,GAAG,EAApB;AACA,EAAA,WAAW,CAAC,WAAW,CAAC,QAAZ,CAAqB,KAAtB,CAAX,GAA0C,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,KAAD,CAAL,CAAhB,GAAgC,aAAa,CAAC,KAAD,CAA3F,CAFuF,CAGvF;;AACA,EAAA,WAAW,CAAC,6BAAqB,WAAtB,CAAX,GAAgD,SAAS,CAAC,KAAV,IAAmB,SAAnE;AACA,EAAA,WAAW,CAAC,6BAAqB,WAAtB,CAAX,GAAgD,WAAW,CAAC,WAAW,CAAC,QAAZ,CAAqB,KAAtB,CAA3D;AACA,EAAA,WAAW,CAAC,6BAAqB,YAAtB,CAAX,GAAiD,KAAjD;AACA,SAAO,WAAP;AACH,CARD;;AAUA,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,WAAD,EAAc,SAAd,EAAyB,YAAzB,EAAuC,aAAvC,EAAsD,IAAtD,EAA+D;AACzF,MAAM,QAAQ,GAAG,QAAQ,CAAC,sBAAT,EAAjB;AACA,MAAM,mBAAmB,GAAG,WAAW,CAAC,aAAxC;AACA,MAAI,UAAJ;AACA,MAAI,WAAJ;AACA,MAAI,qBAAJ;AACA,MAAI,CAAC,GAAG,CAAR,CANyF,CAQzF;;AACA,MAAI,mBAAQ,WAAW,CAAC,qBAApB,CAAJ,EAAgD;AAC5C,IAAA,WAAW,CAAC,qBAAZ,CAAkC,MAAlC,GAA2C,CAA3C;AACH,GAFD,MAEO;AACH,IAAA,WAAW,CAAC,qBAAZ,GAAoC,EAApC;AACH,GAbwF,CAezF;;;AACA,OAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,mBAAhB,EAAqC,CAAC,IAAI,CAA1C,EAA6C;AACzC,IAAA,UAAU,GAAG,wBAAa,WAAW,CAAC,EAAzB,CAAb,CADyC,CAGzC;;AACA,IAAA,qBAAqB,GAAG,2BAAmB;AACvC,MAAA,QAAQ,EAAE,UAD6B;AAEvC,MAAA,YAAY,EAAE;AAFyB,KAAnB,CAAxB;AAKA,IAAA,WAAW,CAAC,qBAAZ,CAAkC,IAAlC,CAAuC,qBAAvC;;AAEA,QAAI,CAAC,yBAAc,qBAAd,CAAL,EAA2C;AACvC;AACA,MAAA,WAAW,GAAG,wBAAwB,CAAC;AACnC,QAAA,WAAW,EAAE,WADsB;AAEnC,QAAA,SAAS,EAAE,SAFwB;AAGnC,QAAA,aAAa,EAAE,aAHoB;AAInC,QAAA,IAAI,EAAE,IAJ6B;AAKnC,QAAA,KAAK,EAAE;AAL4B,OAAD,CAAtC;AAQA,mCAAgB;AACZ,QAAA,YAAY,EAAE,WAAW,CAAC,qBAAZ,CAAkC,CAAlC,CADF;AAEZ,QAAA,WAAW,EAAE,WAFD;AAGZ,QAAA,YAAY,EAAE,YAHF;AAIZ,QAAA,YAAY,EAAE;AAJF,OAAhB;AAMH;;AAED,IAAA,QAAQ,CAAC,WAAT,CAAqB,UAArB;AACH;;AAED,SAAO,QAAP;AACH,CAjDD;;eAmDe,kB;;;;;;;;;;;AC3If;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;AAMA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,WAAD,EAAiB;AACxC,MAAI,GAAG,GAAG,KAAV;;AACA,MAAI,WAAW,IAAI,WAAW,CAAC,0BAA/B,EAA2D;AACvD,QAAM,uBAAuB,GAAG,WAAW,CAAC,0BAAZ,CAAuC,WAAvE;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,0BAAZ,CAAuC,WAA7D;;AAEA,QAAI,aAAa,CAAC,QAAd,KAA2B,CAA/B,EAAkC;AAC9B,UAAI,aAAa,CAAC,WAAd,KAA8B,uBAAuB,GAAG,qBAA5D,EAA2E;AACvE,QAAA,GAAG,GAAG,IAAN;AACH;AACJ;AACJ;;AACD,SAAO,GAAP;AACH,CAbD;;AAeA,IAAM,eAAe,GAAG,SAAlB,eAAkB,OAA4C;AAAA,MAA1C,WAA0C,QAA1C,WAA0C;AAAA,MAA7B,SAA6B,QAA7B,SAA6B;AAAA,MAAlB,YAAkB,QAAlB,YAAkB;;AAChE,MAAI,CAAC,WAAW,CAAC,QAAjB,EAA2B;AACvB;AACH;;AAED,MAAM,YAAY,GAAG,kBAAkB,CAAC,WAAD,CAAvC;AACA,MAAI,WAAW,GAAG,WAAW,CAAC,EAA9B,CANgE,CAQhE;AACA;;AACA,MAAI,CAAC,YAAD,IAAiB,CAAC,WAAW,CAAC,MAAlC,EAA0C;AACtC,IAAA,eAAe,CAAC,WAAD,CAAf,CADsC,CAEtC;;AACA,IAAA,WAAW,GAAG,WAAW,CAAC,QAAZ,CAAqB,UAArB,CAAgC,SAAhC,CAA0C,IAA1C,CAAd;AACH,GAd+D,CAgBhE;;;AACA,MAAI,CAAC,WAAW,CAAC,qBAAb,IAAsC,CAAC,WAAW,CAAC,wBAAvD,EAAiF;AAC7E,IAAA,WAAW,CAAC,qBAAZ,GAAoC,2BAAmB;AACnD,MAAA,QAAQ,EAAE,WADyC;AAEnD,MAAA,YAAY,EAAE;AAFqC,KAAnB,CAApC;AAIH,GAtB+D,CAwBhE;AACA;;;AACA,MAAI,CAAC,yBAAc,WAAW,CAAC,qBAA1B,CAAL,EAAuD;AACnD,IAAA,WAAW,CAAC,wBAAZ,GAAuC,IAAvC;AACA,iCAAgB;AACZ,MAAA,YAAY,EAAE,WAAW,CAAC,qBADd;AAEZ,MAAA,WAAW,EAAE,SAFD;AAGZ,MAAA,YAAY,EAAE,YAHF;AAIZ,MAAA,YAAY,EAAE;AAJF,KAAhB;AAMH,GAlC+D,CAoChE;AACA;;;AACA,8CAAuB,WAAvB,EAAoC,WAApC;AACH,CAvCD;;;;AAyCA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,WAAD,EAAiB;AACrC,mDAA4B,WAA5B,EADqC,CAErC;;AACA,MAAI,WAAW,CAAC,wBAAhB,EAA0C;AACtC,WAAO,WAAW,CAAC,qBAAnB;AACA,WAAO,WAAW,CAAC,wBAAnB;AACH;AACJ,CAPD;;;;;;;;;;;;ACpEA;;AACA;;AAEA,IAAI,YAAY,GAAG,IAAnB;AACA,IAAI,aAAa,GAAG,IAApB;AACA,IAAI,kBAAkB,GAAG,CAAzB;AACA,IAAM,aAAa,GAAG,EAAtB;AAEA;;;;;;;;AAOA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,EAAD,EAA6B;AAAA,MAAxB,YAAwB,uEAAT,IAAS;AACjD,MAAI,cAAJ;AACA,MAAI,eAAJ;;AAEA,MAAI,CAAC,aAAa,CAAC,EAAD,CAAlB,EAAwB;AACpB,IAAA,eAAe,GAAG,QAAQ,CAAC,cAAT,CAAwB,EAAxB,CAAlB;AACA,IAAA,cAAc,GAAG,eAAe,GAAG,eAAe,CAAC,SAAnB,GAA+B,EAA/D;AACA,IAAA,aAAa,CAAC,EAAD,CAAb,GAAoB,CAAC,CAAC,QAAF,CAAW,cAAX,EAA2B;AAC3C,MAAA,QAAQ,EAAE;AADiC,KAA3B,CAApB;AAGH;;AAED,SAAO,aAAa,CAAC,EAAD,CAAb,CAAkB,YAAlB,CAAP;AACH,CAbD;AAeA;;;;;;;;;;;;AAUA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,YAAjC,EAAkD;AACrE,MAAM,QAAQ,GAAG,OAAO,KAAK,CAAC,OAAb,KAAyB,QAAzB,GAAoC,6BAAkB,KAAK,CAAC,OAAxB,CAApC,GAAuE,KAAK,CAAC,OAA9F;AACA,MAAI,QAAQ,GAAG,QAAQ,CAAC,IAAxB;AACA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAA1B;AACA,MAAM,SAAS,GAAG,QAAQ,CAAC,OAA3B;AACA,MAAI,eAAJ;AAEA,EAAA,KAAK,CAAC,OAAN,GAAgB,QAAhB;AAEA,EAAA,QAAQ,GACJ,OAAO,QAAP,KAAoB,WAApB,IAAmC,QAAQ,KAAK,OAAhD,GACM,SADN,GAEM,iCAAsB,SAAtB,EAAiC;AAC/B,IAAA,OAAO,EAAE,QAAQ,CAAC,IADa;AAE/B,IAAA,UAAU,EAAE,KAAK,CAAC;AAFa,GAAjC,CAHV;;AAQA,MAAI,CAAC,QAAL,EAAe;AACX;AACH;;AAED,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,EAAP,CAAlB;AACA,MAAM,MAAM,GAAG,OAAO,SAAS,CAAC,MAAjB,KAA4B,WAA5B,GAA0C,SAAS,CAAC,MAApD,GAA6D,QAAQ,CAAC,IAAT,CAAc,qBAAd,CAA5E;;AACA,MAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,IAAA,QAAQ,CAAC,MAAT,GAAkB,MAAlB;AACH;;AACD,EAAA,YAAY,GAAG,YAAY,GAAG,YAAH,GAAkB,CAAC,CAAC,QAAD,CAA9C;AACA,EAAA,aAAa,GAAG,aAAa,GAAG,aAAH,GAAmB,QAAhD;AACA,MAAM,IAAI,GAAG,eAAe,CAAC,QAAQ,CAAC,EAAV,EAAc,QAAd,CAA5B,CA5BqE,CA8BrE;AACA;;AACA,MAAI,CAAC,YAAY,CAAC,QAAb,GAAwB,MAA7B,EAAqC;AACjC,IAAA,eAAe,GAAG,YAAlB;AACA,IAAA,YAAY,CAAC,MAAb,CAAoB,IAApB;AACH,GAHD,MAGO;AACH,IAAA,eAAe,GAAG,QAAlB;;AACA,QAAI,CAAC,QAAD,IAAa,CAAC,SAAlB,EAA6B;AACzB,MAAA,eAAe,CAAC,KAAhB;AACH;;AACD,QAAI,SAAJ,EAAe;AACX,MAAA,eAAe,CAAC,OAAhB,CAAwB,IAAxB;AACH,KAFD,MAEO;AACH,MAAA,eAAe,CAAC,MAAhB,CAAuB,IAAvB;AACH;AACJ,GA7CoE,CA+CrE;;;AACA,MAAM,gBAAgB,GAAG,eAAe,CAAC,IAAhB,CAAqB,MAAM,YAAY,CAAC,GAAnB,GAAyB,GAA9C,CAAzB;;AAEA,MAAI,gBAAgB,CAAC,MAArB,EAA6B;AACzB,IAAA,kBAAkB,IAAI,gBAAgB,CAAC,MAAvC;AACA,IAAA,gBAAgB,CAAC,IAAjB,CAAsB,UAAS,KAAT,EAAgB,OAAhB,EAAyB;AAC3C,UAAM,iBAAiB,GAAG;AACtB,QAAA,EAAE,EAAE,OADkB;AAEtB,QAAA,OAAO,EAAE,OAAO,CAAC,YAAR,CAAqB,YAAY,CAAC,GAAlC;AAFa,OAA1B;AAIA,MAAA,YAAY,CAAC,YAAY,CAAC,GAAd,CAAZ,CAA+B,IAA/B,CAAoC,iBAApC,EAL2C,CAM3C;;AACA,MAAA,cAAc,CAAC,iBAAD,EAAoB,SAApB,EAA+B,YAA/B,EAA6C,YAA7C,CAAd;AACA,MAAA,kBAAkB,IAAI,CAAtB;AACH,KATD;AAUH,GA9DoE,CAgErE;;;AACA,MAAI,kBAAkB,KAAK,CAA3B,EAA8B;AAC1B;AACA,QAAI,CAAC,QAAD,IAAa,CAAC,SAAlB,EAA6B;AACzB,MAAA,aAAa,CAAC,KAAd;AACH;;AACD,QAAI,SAAJ,EAAe;AACX,MAAA,aAAa,CAAC,OAAd,CAAsB,YAAY,CAAC,IAAb,EAAtB;AACH,KAFD,MAEO;AACH,MAAA,aAAa,CAAC,MAAd,CAAqB,YAAY,CAAC,IAAb,EAArB;AACH,KATyB,CAU1B;;;AACA,IAAA,YAAY,GAAG,aAAa,GAAG,IAA/B,CAX0B,CAY1B;;AACA,QAAI,OAAO,SAAS,CAAC,mBAAjB,KAAyC,UAA7C,EAAyD;AACrD,MAAA,SAAS,CAAC,mBAAV,CAA8B,QAA9B;AACH;AACJ;AACJ,CAlFD;;eAoFe,c;;;;;;;;;;;AC5Hf;;AAEA;;;;;;;;;AASA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAoC;AACpD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,MAAI,kBAAkB,GAAG,EAAzB;AACA,MAAI,yBAAyB,GAAG,EAAhC;AACA,MAAI,UAAU,GAAG,IAAjB;;AAEA,MAAI,CAAC,OAAL,EAAc;AACV;AACH;;AAED,EAAA,KAAK,CAAC,WAAN,GAAoB,KAAK,CAAC,WAAN,IAAqB,EAAzC;AAEA,MAAM,aAAa,GAAG,KAAK,CAAC,WAAN,CAAkB,kBAAxC,CAZoD,CAcpD;;AACA,MACI,OAAO,KAAK,CAAC,WAAN,CAAkB,YAAzB,KAA0C,WAA1C,IACA,OAAO,KAAK,CAAC,WAAN,CAAkB,aAAzB,KAA2C,WAF/C,EAGE;AACE,IAAA,kBAAkB,GAAG,KAAK,CAAC,EAAN,CAAS,KAA9B;AACA,IAAA,yBAAyB,GAAG,kBAAkB,CAAC,OAA/C,CAFF,CAGE;;AACA,QAAI,yBAAJ,EAA+B;AAC3B;AACA,MAAA,KAAK,CAAC,WAAN,CAAkB,YAAlB,GAAiC,yBAAyB,KAAK,MAA9B,GAAuC,OAAvC,GAAiD,yBAAlF;AACA,MAAA,KAAK,CAAC,WAAN,CAAkB,aAAlB,GAAkC,IAAlC;AACH,KAJD,MAIO;AACH,UAAM,YAAY,GAAG,MAAM,CAAC,gBAAP,CAAwB,KAAK,CAAC,EAA9B,EAAkC,IAAlC,EAAwC,gBAAxC,CAAyD,SAAzD,CAArB;AACA,MAAA,KAAK,CAAC,WAAN,CAAkB,YAAlB,GAAiC,IAAjC;AACA,MAAA,KAAK,CAAC,WAAN,CAAkB,aAAlB,GAAkC,YAAlC;AACH;AACJ;;AAED,EAAA,UAAU,GAAG,iCAAsB,SAAtB,EAAiC,KAAjC,CAAb,CAjCoD,CAmCpD;AACA;;AACA,EAAA,UAAU,GAAG,OAAO,CAAC,UAAD,CAApB,CArCoD,CAuCpD;;AACA,MAAI,aAAa,KAAK,UAAtB,EAAkC;AAC9B;AACH;;AAED,MAAI,CAAC,UAAL,EAAiB;AACb,QAAI,KAAK,CAAC,EAAN,CAAS,KAAT,CAAe,OAAf,KAA2B,MAA/B,EAAuC;AACnC,MAAA,KAAK,CAAC,EAAN,CAAS,KAAT,CAAe,WAAf,CAA2B,SAA3B,EAAsC,MAAtC;AACH;AACJ,GAJD,MAIO;AACH,QAAI,KAAK,CAAC,WAAN,CAAkB,aAAlB,IAAmC,KAAK,CAAC,EAAN,CAAS,KAAT,CAAe,OAAf,KAA2B,MAAlE,EAA0E;AACtE,UAAI,KAAK,CAAC,WAAN,CAAkB,aAAlB,KAAoC,MAAxC,EAAgD;AAC5C;AACA,QAAA,KAAK,CAAC,EAAN,CAAS,KAAT,CAAe,WAAf,CAA2B,SAA3B,EAAsC,OAAtC;AACH,OAHD,MAGO;AACH;AACA,YAAI,kBAAkB,CAAC,MAAnB,GAA4B,CAAhC,EAAmC;AAC/B,UAAA,KAAK,CAAC,EAAN,CAAS,KAAT,CAAe,cAAf,CAA8B,SAA9B;AACH,SAFD,MAEO;AACH,UAAA,KAAK,CAAC,EAAN,CAAS,eAAT,CAAyB,OAAzB;AACH;AACJ;AACJ,KAZD,MAYO;AACH;AACA,MAAA,KAAK,CAAC,EAAN,CAAS,KAAT,CAAe,WAAf,CAA2B,SAA3B,EAAsC,KAAK,CAAC,WAAN,CAAkB,YAAxD;AACH;AACJ,GAjEmD,CAmEpD;;;AACA,EAAA,KAAK,CAAC,WAAN,CAAkB,kBAAlB,GAAuC,UAAvC;AACH,CArED;;eAuEe,W;;;;;;;;;;;AClFf;;AAEA;;;;;;;;AAQA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AACnE,MAAM,WAAW,GAAG,KAAK,CAAC,OAA1B;AACA,MAAI,SAAS,GAAG,KAAK,CAAC,UAAtB;AACA,MAAI,gBAAJ;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C;;AAEA,MAAI,CAAC,WAAD,IAAiB,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAtC,EAA4E;AACxE;AACH;;AAED,MAAM,SAAS,GAAG,6BAAkB,SAAlB,EAA6B,WAA7B,CAAlB;AACA,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,EAAP,CAAlB;;AAEA,MAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACjC,IAAA,gBAAgB,GAAG,mCAAwB,SAAxB,EAAmC,WAAnC,CAAnB;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,4BAAiB,SAAjB,EAA4B,SAA5B,CAAH,GAA4C,EAAjE,CAFiC,CAGjC;;AACA,IAAA,QAAQ,CAAC,GAAT,CAAa,iBAAb,EAAgC,EAAhC,CAAmC,iBAAnC,EAAsD,UAAS,CAAT,EAAY;AAC9D,UAAM,IAAI,GAAG,CAAC,CAAD,EAAI,QAAJ,EAAc,uBAAY,QAAZ,CAAd,EAAqC,MAArC,CAA4C,SAA5C,CAAb;AACA,MAAA,SAAS,CAAC,KAAV,CAAgB,gBAAhB,EAAkC,IAAlC;AACH,KAHD;AAIH;AACJ,CAtBD;;eAwBe,a;;;;;;;;;;;AClCf;;AACA;;AACA;;AACA;;;;;;;;;AASA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAoC;AACtD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AAEA,MAAI,CAAC,OAAL,EAAc;AACV;AACH;;AAED,EAAA,KAAK,CAAC,WAAN,GAAoB,KAAK,CAAC,WAAN,IAAqB,EAAzC;AAEA,MAAM,aAAa,GAAG,iCAAsB,SAAtB,EAAiC,KAAjC,CAAtB;;AAEA,MAAI,aAAa,KAAK,KAAK,CAAC,WAAN,CAAkB,kBAAxC,EAA4D;AACxD;AACH;;AAED,EAAA,KAAK,CAAC,WAAN,CAAkB,kBAAlB,GAAuC,aAAvC,CAfsD,CAiBtD;;AACA,MAAI,CAAC,KAAK,CAAC,KAAX,EAAkB;AACd,QAAM,gBAAgB,GAAG,KAAK,CAAC,EAAN,CAAS,QAAlC;;AACA,QAAI,CAAC,gBAAgB,CAAC,MAAtB,EAA8B;AAC1B;AACH;;AACD,IAAA,KAAK,CAAC,KAAN,GAAc,EAAd;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,aAAa,GAAG,gBAAgB,CAAC,MAAjD,EAAyD,CAAC,GAAG,aAA7D,EAA4E,CAAC,IAAI,CAAjF,EAAoF;AAChF,UAAI,QAAQ,GAAG,IAAf;;AACA,UAAI,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,YAApB,CAAiC,YAAY,QAA7C,CAAJ,EAAyD;AACrD,QAAA,QAAQ,GAAG,cAAc,CAAC,gBAAgB,CAAC,CAAD,CAAjB,EAAsB,YAAY,QAAlC,CAAzB;AACH,OAFD,MAEO,IAAI,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,YAApB,CAAiC,YAAY,WAA7C,CAAJ,EAA4D;AAC/D,QAAA,QAAQ,GAAG,cAAc,CAAC,gBAAgB,CAAC,CAAD,CAAjB,EAAsB,YAAY,WAAlC,CAAzB;AACA,QAAA,QAAQ,CAAC,SAAT,GAAqB,IAArB;AACH,OAP+E,CAQhF;AACA;;;AACA,UAAI,QAAJ,EAAc;AACV,+CAAkB,QAAlB,EAA4B,QAAQ,CAAC,EAArC,EADU,CAEV;;AACA,YAAI,QAAQ,CAAC,SAAb,EAAwB;AACpB,UAAA,QAAQ,CAAC,EAAT,CAAY,eAAZ,CAA4B,YAAY,WAAxC;AACH,SAFD,MAEO;AACH,UAAA,QAAQ,CAAC,EAAT,CAAY,eAAZ,CAA4B,YAAY,QAAxC;AACH;;AACD,sDAAyB,QAAzB;AACA,QAAA,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAiB,QAAjB;AACH;AACJ;AACJ;;AAED,MAAI,KAAK,CAAC,KAAN,CAAY,MAAhB,EAAwB;AACpB,QAAI,QAAQ,GAAG,KAAf,CADoB,CAEpB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,WAAW,GAAG,KAAK,CAAC,KAAN,CAAY,MAA1C,EAAkD,CAAC,GAAG,WAAtD,EAAmE,CAAC,IAAI,CAAxE,EAA2E;AACvE,UAAI,YAAY,SAAhB;;AACA,UAAI,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,OAAnB,EAA4B;AACxB;AACA,QAAA,YAAY,GAAG,iCAAsB,SAAtB,EAAiC,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAjC,KAAoD,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,OAAlF;AACH;;AAED,UAAI,YAAY,KAAK,KAAK,CAAC,WAAN,CAAkB,kBAAnC,IAAyD,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,SAA5E,EAAuF;AACnF,QAAA,QAAQ,GAAG,IAAX,CADmF,CAEnF;;AACA,8CAAgB;AACZ,UAAA,WAAW,EAAE,KAAK,CAAC,KAAN,CAAY,CAAZ,CADD;AAEZ,UAAA,SAAS,EAAE,SAFC;AAGZ,UAAA,YAAY,EAAE;AAHF,SAAhB,EAHmF,CASnF;;AACA,QAAA,kBAAkB,CAAC,KAAK,CAAC,KAAP,EAAc,CAAd,CAAlB;AACA;AACH;AACJ,KAvBmB,CAwBpB;;;AACA,QAAI,CAAC,QAAL,EAAe;AACX,MAAA,kBAAkB,CAAC,KAAK,CAAC,KAAP,CAAlB;AACH;AACJ;AACJ,CA7ED;;AA+EA,SAAS,kBAAT,CAA4B,KAA5B,EAAmC,YAAnC,EAAiD;AAC7C,EAAA,KAAK,CAAC,OAAN,CAAc,UAAC,QAAD,EAAW,KAAX,EAAqB;AAC/B,QAAI,KAAK,KAAK,YAAV,IAA0B,OAAO,YAAP,KAAwB,WAAtD,EAAmE;AAC/D,4CAAgB,QAAhB,EAD+D,CAE/D;;AACA,UAAI,QAAQ,CAAC,wBAAb,EAAuC;AACnC,QAAA,QAAQ,CAAC,qBAAT,GAAiC,IAAjC;AACA,QAAA,QAAQ,CAAC,wBAAT,GAAoC,KAApC;AACH;AACJ;AACJ,GATD;AAUH;;AAED,SAAS,cAAT,CAAwB,IAAxB,EAA8B,QAA9B,EAAwC;AACpC,MAAM,QAAQ,GAAG;AACb,IAAA,EAAE,EAAE,IADS;AAEb,IAAA,OAAO,EAAE,IAAI,CAAC,YAAL,CAAkB,QAAlB,CAFI;AAGb,IAAA,IAAI,EAAE;AAHO,GAAjB;AAKA,SAAO,QAAP;AACH;;eAEc,a;;;;;;;;;;;ACjHf;;;;AAEA;;;;;;;;;AASA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAQ,SAAR,EAAmB,YAAnB,EAAiC,WAAjC,EAAiD;AACjE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,GAAV,IAAiB,SAAS,CAAC,KAAV,CAAgB,GAA7C,CAFiE,CAIjE;;AACA,MAAI,CAAC,OAAD,IAAa,CAAC,WAAD,IAAgB,CAAC,GAAG,CAAC,YAAJ,CAAiB,QAAjB,CAA0B,KAAK,CAAC,EAAhC,CAAlC,EAAwE;AACpE;AACH;;AAED,MAAM,QAAQ,GAAG,iCAAsB,SAAtB,EAAiC,KAAjC,CAAjB;AACA,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAN,CAAS,WAA1B;;AAEA,MAAI,OAAO,QAAP,KAAoB,WAApB,IAAmC,QAAO,QAAP,MAAoB,QAAvD,IAAmE,QAAQ,KAAK,IAApF,EAA0F;AACtF,QAAI,QAAQ,KAAK,QAAjB,EAA2B;AACvB,MAAA,KAAK,CAAC,EAAN,CAAS,WAAT,GAAuB,QAAvB;AACH;AACJ;AACJ,CAjBD;;eAmBe,W;;;;;;;;;;;AC9Bf;;;;;;AAEA;AACA,CAAC,GAAG,MAAM,CAAC,CAAP,IAAY,EAAhB;AAEA,IAAM,UAAU,GAAG,KAAK,CAAC,OAAzB;AAEA,IAAM,cAAc,GAAG,OAAO,MAAM,CAAC,SAAD,CAAb,KAA6B,UAApD;AAEA,IAAM,KAAK,GAAG;AACV,EAAA,aAAa,EAAE,WADL;AAEV,EAAA,WAAW,EAAE,MAFH;AAGV,EAAA,KAAK,EAAE,0BAHG;AAIV,EAAA,IAAI,EAAE;AAJI,CAAd;;;AAOA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAC,YAAD,EAAkB;AAC3C,MAAM,YAAY,GAAG,EAArB;AACA,EAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,UAAS,CAAT,EAAY,CAAZ,EAAe;AAChC,IAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,EAAlB;AACH,GAFD;AAGA,SAAO,YAAP;AACH,CAND;;;;AAQA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,GAAD,EAAS;AACrB,SAAO,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,GAAd,CAAH,GAAwB,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,gBAAjF;AACH,CAFD;;;;AAIA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,GAAD,EAAS;AACxB,SAAO,GAAG,KAAK,IAAR,IAAgB,QAAO,GAAP,MAAe,QAA/B,IAA2C,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,iBAA1F;AACH,CAFD;;;;AAIA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,GAAD,EAAS;AAC3B,MAAI,CAAC,UAAU,CAAC,GAAD,CAAf,EAAsB;AAClB,WAAO,KAAP;AACH,GAH0B,CAK3B;;;AACA,MAAM,IAAI,GAAG,GAAG,CAAC,WAAjB;AACA,MAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC,OAAO,KAAP,CAPL,CAS3B;;AACA,MAAM,IAAI,GAAG,IAAI,CAAC,SAAlB;AACA,MAAI,UAAU,CAAC,IAAD,CAAV,KAAqB,KAAzB,EAAgC,OAAO,KAAP,CAXL,CAa3B;;AACA,MAAI,IAAI,CAAC,cAAL,CAAoB,eAApB,MAAyC,KAA7C,EAAoD;AAChD,WAAO,KAAP;AACH,GAhB0B,CAkB3B;;;AACA,SAAO,IAAP;AACH,CApBD;;;;AAsBA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,GAAD,EAAS;AAC3B,MAAI,UAAU,CAAC,GAAD,CAAd,EAAqB;AACjB,WAAO,MAAM,CAAC,mBAAP,CAA2B,GAA3B,EAAgC,MAAhC,KAA2C,CAAlD;AACH;;AACD,SAAO,KAAP;AACH,CALD;AAOA;;;;;;;;;;;AAOA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,SAAD,EAAY,IAAZ,EAAqB;AAC3C,SAAO,CAAC,CAAC,GAAF,CAAM,SAAN,EAAiB,IAAjB,CAAP;AACH,CAFD;AAIA;;;;;;;;;;;;AAQA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAsB;AAC5C,SAAO,CAAC,CAAC,GAAF,CAAM,GAAN,EAAW,IAAX,EAAiB,KAAjB,CAAP;AACH,CAFD;;;;AAIA,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,SAAD,EAAY,YAAZ,EAA6B;AACvD,MAAI,OAAO,GAAG,YAAY,CAAC,OAA3B;AACA,MAAI,SAAS,GAAG,YAAY,CAAC,UAA7B;AACA,MAAM,eAAe,GAAG,OAAO,CAAC,MAAR,CAAe,CAAf,MAAsB,GAA9C;;AAEA,MAAI,eAAJ,EAAqB;AACjB,IAAA,OAAO,GAAG,eAAe,GAAG,OAAO,CAAC,SAAR,CAAkB,CAAlB,CAAH,GAA0B,OAAnD;AACH;;AAED,MAAI,GAAG,GAAG,iBAAiB,CAAC,SAAD,EAAY,OAAZ,CAA3B;;AAEA,MAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAC3B,QAAM,gBAAgB,GAAG,uBAAuB,CAAC,SAAD,EAAY,OAAZ,CAAhD;AACA,QAAM,oBAAoB,GAAG,YAAY,CAAC,WAAb,GAA2B,YAAY,CAAC,WAAb,CAAyB,iBAApD,GAAwE,IAArG;AACA,IAAA,SAAS,GAAG,SAAS,GAAG,gBAAgB,CAAC,SAAD,EAAY,SAAZ,CAAnB,GAA4C,EAAjE,CAH2B,CAI3B;;AACA,QAAM,IAAI,GAAG,SAAS,CAAC,MAAV,CAAiB,CAAC,oBAAD,EAAuB,YAAY,CAAC,EAApC,CAAjB,CAAb;AACA,IAAA,GAAG,GAAG,GAAG,CAAC,KAAJ,CAAU,gBAAV,EAA4B,IAA5B,CAAN;AACH;;AAED,EAAA,GAAG,GAAG,eAAe,GAAG,CAAC,OAAO,CAAC,GAAD,CAAX,GAAmB,GAAxC,CApBuD,CAsBvD;;AACA,EAAA,GAAG,GAAG,yBAAyB,CAAC;AAC5B,IAAA,KAAK,EAAE,GADqB;AAE5B,IAAA,SAAS,EAAE,SAFiB;AAG5B,IAAA,YAAY,EAAE;AAHc,GAAD,CAA/B;AAMA,SAAO,GAAP;AACH,CA9BD;;;;AAgCA,IAAM,yBAAyB,GAAG,SAA5B,yBAA4B,OAAsC;AAAA,MAApC,KAAoC,QAApC,KAAoC;AAAA,MAA7B,SAA6B,QAA7B,SAA6B;AAAA,MAAlB,YAAkB,QAAlB,YAAkB;AACpE,MAAI,GAAG,GAAG,KAAV;;AACA,MAAI,YAAY,CAAC,OAAjB,EAA0B;AACtB,IAAA,IAAI,CAAC,YAAY,CAAC,OAAd,EAAuB,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAC1C,UAAM,gBAAgB,GAAG,uBAAuB,CAAC,SAAD,EAAY,MAAZ,CAAhD;AACA,UAAM,QAAQ,GAAG,iBAAiB,CAAC,IAAlB,CAAuB,gBAAvB,EAAyC,gBAAzC,EAA2D,MAA3D,CAAjB;;AACA,UAAI;AACA,QAAA,GAAG,GAAG,QAAQ,CAAC,IAAT,CAAc,gBAAd,EAAgC,GAAhC,CAAN;AACH,OAFD,CAEE,OAAO,GAAP,EAAY;AACV,QAAA,iBAAiB,CAAC,GAAD,4BAAyB,MAAzB,EAAjB;AACH;AACJ,KARG,CAAJ;AASH;;AACD,SAAO,GAAP;AACH,CAdD;;AAgBA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,GAAD,EAAS;AAC/B;AACA,MAAM,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,qDAAZ,EAAmE,SAAnE,EAA8E,OAA9E,CAAsF,IAAtF,EAA4F,GAA5F,CAAZ;AACA,SAAO,IAAI,CAAC,KAAL,CAAW,GAAX,CAAP;AACH,CAJD;AAMA;;;;;;;;;;;AAOA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,OAAD,EAAU,UAAV,EAAyB;AAC9C,SAAO,OAAO,CAAC,MAAR,CAAe,UAAC,KAAD,EAAQ,KAAR,EAAkB;AACpC,WAAO,UAAU,CAAC,OAAX,CAAmB,KAAnB,IAA4B,CAAnC;AACH,GAFM,CAAP;AAGH,CAJD;;;;AAMA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAW;AAC3B,MAAM,MAAM,GAAG,KAAK,CAAC,cAAN,EAAf;AACA,MAAM,IAAI,GAAG,EAAb;AAEA,EAAA,MAAM,CAAC,GAAP,CAAW,UAAC,CAAD,EAAO;AACd,IAAA,IAAI,CAAC,CAAC,CAAC,MAAD,CAAF,CAAJ,GAAkB,CAAC,CAAC,OAAD,CAAnB;AACH,GAFD;AAIA,SAAO,IAAP;AACH,CATD;AAWA;;;;;;;;;;;AAOA,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,GAAD,EAAS;AACtC,MAAI,CAAC,GAAD,IAAQ,GAAG,CAAC,MAAJ,GAAa,MAAM,CAAC,gBAAhC,EAAkD;AAC9C;AACH;;AACD,MAAI,SAAS,GAAG,GAAG,CAAC,KAAJ,CAAU,KAAK,CAAC,aAAhB,CAAhB;;AAEA,MAAI,SAAS,IAAI,SAAS,CAAC,CAAD,CAA1B,EAA+B;AAC3B,IAAA,SAAS,GAAG,SAAS,CAAC,CAAD,CAAT,CAAa,KAAb,CAAmB,GAAnB,CAAZ;AACA,IAAA,SAAS,CAAC,OAAV,CAAkB,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC7B,MAAA,SAAS,CAAC,CAAD,CAAT,GAAe,CAAC,CAAC,IAAF,EAAf;AACH,KAFD;AAGH;;AACD,SAAO,SAAP;AACH,CAbD;;;;AAeA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,SAAD,EAAe;AACrC,MAAI,CAAC,SAAD,IAAc,CAAC,SAAS,CAAC,OAAzB,IAAoC,SAAS,CAAC,OAAV,CAAkB,MAAlB,GAA2B,MAAM,CAAC,gBAA1E,EAA4F;AACxF,WAAO,SAAP;AACH;;AACD,MAAM,UAAU,GAAG,SAAS,CAAC,OAAV,CAAkB,KAAlB,CAAwB,KAAK,CAAC,IAA9B,CAAnB;AACA,MAAI,WAAJ;AACA,EAAA,SAAS,CAAC,OAAV,GAAoB,UAAU,CAAC,CAAD,CAAV,CAAc,IAAd,EAApB;;AACA,MAAI,UAAU,CAAC,MAAX,GAAoB,CAAxB,EAA2B;AACvB,IAAA,UAAU,CAAC,KAAX,CAAiB,CAAjB;AACA,IAAA,UAAU,CAAC,OAAX,CAAmB,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC9B,MAAA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,CAAC,IAAF,EAAhB;;AACA,UAAI,UAAU,CAAC,CAAD,CAAV,KAAkB,MAAM,CAAC,SAAP,CAAiB,OAAjB,CAAyB,IAA/C,EAAqD;AACjD,QAAA,SAAS,CAAC,MAAV,GAAmB,IAAnB;AACA,QAAA,WAAW,GAAG,CAAd;AACH;AACJ,KAND,EAFuB,CASvB;;AACA,QAAI,WAAW,IAAI,CAAnB,EAAsB;AAClB,MAAA,UAAU,CAAC,MAAX,CAAkB,WAAlB,EAA+B,CAA/B;AACH;;AACD,IAAA,SAAS,CAAC,OAAV,GAAoB,UAApB;AACH;;AACD,SAAO,SAAP;AACH,CAvBD;;;;AAyBA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,SAAD,EAAe;AAC7B,SAAO,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,MAAvB,CAA8B,UAAS,GAAT,EAAc,GAAd,EAAmB;AACpD,IAAA,GAAG,CAAC,SAAS,CAAC,GAAD,CAAV,CAAH,GAAsB,GAAtB;AACA,WAAO,GAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH,CALD;;;;AAOA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,GAAM;AAC5B,MAAI,KAAK,GAAG,EAAZ;;AACA,MAAI,cAAJ,EAAoB;AAChB,IAAA,KAAK,CAAC,OAAN,GAAgB,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AAC7C,MAAA,KAAK,CAAC,OAAN,GAAgB,OAAhB;AACA,MAAA,KAAK,CAAC,MAAN,GAAe,MAAf;AACH,KAHe,CAAhB;AAIH,GALD,MAKO;AACH,IAAA,KAAK,GAAG,CAAC,CAAC,QAAF,EAAR,CADG,CACmB;AACzB;;AACD,SAAO,KAAP;AACH,CAXD;AAaA;;;;;;;;;AAOA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,EAAD,EAAoB;AAAA,MAAf,GAAe,uEAAT,IAAS;AACpC,SAAQ,UAAS,EAAT,EAAa,GAAb,EAAkB;AACtB,QAAI,KAAK,GAAG,iBAAiB,EAA7B;AACA,QAAI,KAAK,GAAG,CAAZ,CAFsB,CAItB;;AACA,WAAO,YAAW;AACd;AACA,UAAM,IAAI,GAAG,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,IAAN,CAAW,SAAX,CAAb,GAAqC,KAAK,CAAC,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAlD;AAEA,MAAA,MAAM,CAAC,oBAAP,CAA4B,KAA5B;AACA,MAAA,KAAK,GAAG,MAAM,CAAC,qBAAP,CAA6B,YAAM;AACvC,YAAI;AACA;AACA,UAAA,EAAE,CAAC,KAAH,CAAS,GAAT,EAAc,IAAd,EAFA,CAGA;AACA;;AACA,UAAA,KAAK,CAAC,OAAN,CAAc,GAAd;AACH,SAND,CAME,OAAO,GAAP,EAAY;AACV,UAAA,KAAK,CAAC,MAAN,CAAa,GAAb,EAAkB,GAAlB;AACH,SATsC,CAWvC;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAA,KAAK,GAAG,iBAAiB,EAAzB;AAEA,QAAA,MAAM,CAAC,oBAAP,CAA4B,KAA5B;AACH,OApBO,CAAR;AAsBA;;AACA,aAAO,cAAc,GAAG,KAAK,CAAC,OAAT,GAAmB,KAAK,CAAC,OAAN,EAAxC;AACH,KA7BD;AA8BH,GAnCM,CAmCJ,EAnCI,EAmCA,GAnCA,CAAP;AAoCH,CArCD;AAuCA;;;;;;;;;;;AAOA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,IAAD,EAAO,QAAP,EAAoB;AACvC,MAAI,gBAAgB,GAAG,CAAvB;AACA,MAAI,SAAJ;;AAEA,MAAI,CAAC,IAAD,IAAS,IAAI,CAAC,QAAL,KAAkB,CAA3B,IAAgC,CAAC,IAAI,CAAC,aAAL,EAArC,EAA2D;AACvD;AACH;;AACD,MAAI,QAAJ,EAAc;AACV,IAAA,SAAS,GAAG,EAAZ;AACA,IAAA,SAAS,GAAG,OAAO,QAAP,KAAoB,QAApB,GAA+B,SAAS,CAAC,IAAV,CAAe,QAAf,CAA/B,GAA0D,QAAtE;AACH;;AACD,MAAM,OAAO,GAAG,EAAhB;AACA,EAAA,gBAAgB,GAAG,IAAI,CAAC,UAAL,CAAgB,MAAnC;;AAEA,MAAI,gBAAJ,EAAsB;AAClB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,gBAApB,EAAsC,CAAC,IAAI,CAA3C,EAA8C;AAC1C,UAAM,SAAS,GAAG,IAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,CAArB,CAAlB;AACA,MAAA,OAAO,CAAC,SAAS,CAAC,QAAX,CAAP,GAA8B,SAAS,CAAC,SAAxC;AACH;AACJ;;AAED,MAAI,OAAO,CAAC,SAAD,CAAX,EAAwB;AACpB,IAAA,SAAS,CAAC,OAAV,CAAkB,UAAC,IAAD,EAAU;AACxB,UAAI,OAAO,CAAC,IAAD,CAAX,EAAmB;AACf,eAAO,OAAO,CAAC,IAAD,CAAd;AACH;AACJ,KAJD;AAKH;;AACD,SAAO,OAAP;AACH,CA7BD;AA+BA;;;;;;;;;;;AAOA,IAAM,MAAM,GAAG,SAAT,MAAS,GAA6C;AAAA,MAA5C,WAA4C,uEAA9B,KAA8B;AAAA,MAAvB,MAAuB;;AAAA,oCAAZ,OAAY;AAAZ,IAAA,OAAY;AAAA;;AACxD,MAAI,CAAC,OAAO,CAAC,MAAb,EAAqB;AACjB,WAAO,MAAP;AACH;;AACD,MAAM,MAAM,GAAG,OAAO,CAAC,KAAR,EAAf;;AACA,MAAI,MAAM,KAAK,SAAf,EAA0B;AACtB,WAAO,MAAP;AACH;;AAED,MAAI,CAAC,WAAL,EAAkB;AACd,WAAO,MAAM,CAAC,MAAP,OAAA,MAAM,GAAQ,MAAR,SAAmB,OAAnB,EAAb;AACH;;AAED,MAAI,gBAAgB,CAAC,MAAD,CAAhB,IAA4B,gBAAgB,CAAC,MAAD,CAAhD,EAA0D;AACtD,IAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAC,GAAD,EAAS;AACjC,UAAI,gBAAgB,CAAC,MAAM,CAAC,GAAD,CAAP,CAApB,EAAmC;AAC/B,YAAI,CAAC,MAAM,CAAC,GAAD,CAAX,EAAkB;AACd,UAAA,MAAM,CAAC,GAAD,CAAN,GAAc,EAAd;AACH;;AACD,QAAA,MAAM,CAAC,MAAM,CAAC,GAAD,CAAP,EAAc,MAAM,CAAC,GAAD,CAApB,CAAN;AACH,OALD,MAKO;AACH,QAAA,MAAM,CAAC,GAAD,CAAN,GAAc,MAAM,CAAC,GAAD,CAApB;AACH;AACJ,KATD;AAUH;;AAED,SAAO,MAAM,MAAN,UAAO,IAAP,EAAa,MAAb,SAAwB,OAAxB,EAAP;AACH,CA3BD;;;;AA6BA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,GAAD,EAAM,EAAN,EAAa;AACtB,MAAI,QAAO,GAAP,MAAe,QAAf,IAA2B,OAAO,EAAP,KAAc,UAA7C,EAAyD;AACrD;AACH;;AACD,MAAI,IAAI,GAAG,EAAX;AACA,MAAI,UAAU,GAAG,CAAjB;AACA,MAAM,UAAU,GAAG,OAAO,CAAC,GAAD,CAA1B;AACA,MAAI,GAAJ;AACA,MAAI,KAAJ;AACA,MAAI,CAAC,GAAG,CAAR;;AAEA,MAAI,UAAJ,EAAgB;AACZ,IAAA,UAAU,GAAG,GAAG,CAAC,MAAjB;AACH,GAFD,MAEO,IAAI,UAAU,CAAC,GAAD,CAAd,EAAqB;AACxB,IAAA,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAP;AACA,IAAA,UAAU,GAAG,IAAI,CAAC,MAAlB;AACH,GAHM,MAGA;AACH,UAAM,IAAI,SAAJ,CAAc,kCAAd,CAAN;AACH;;AAED,OAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,UAAhB,EAA4B,CAAC,IAAI,CAAjC,EAAoC;AAChC,QAAI,UAAJ,EAAgB;AACZ,MAAA,GAAG,GAAG,CAAN;AACA,MAAA,KAAK,GAAG,GAAG,CAAC,CAAD,CAAX;AACH,KAHD,MAGO;AACH,MAAA,GAAG,GAAG,IAAI,CAAC,CAAD,CAAV;AACA,MAAA,KAAK,GAAG,GAAG,CAAC,GAAD,CAAX;AACH;;AACD,IAAA,EAAE,CAAC,GAAD,EAAM,KAAN,CAAF;AACH;AACJ,CA9BD;;;;AAgCA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,IAAD,EAAU;AAC/B,SAAO,UAAU,CAAC,IAAD,CAAV,IAAoB,CAAC,OAAO,CAAC,IAAD,CAAnC;AACH,CAFD;AAIA;;;;;;;;AAMA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,OAAD,EAAa;AAC9B,SAAO,OAAO,CAAC,SAAR,CAAkB,IAAlB,CAAP;AACH,CAFD;AAIA;;;;;;;;;;;;AAQA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,UAAD,EAAa,OAAb,EAAsB,aAAtB,EAAwC;AACxD,MAAM,cAAc,GAAG,aAAa,IAAI,aAAa,CAAC,WAA/B,GAA6C,aAAa,CAAC,WAA3D,GAAyE,IAAhG;AACA,SAAO,UAAU,CAAC,YAAX,CAAwB,OAAxB,EAAiC,cAAjC,CAAP;AACH,CAHD;;;;AAKA,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,CAAC,SAAD,EAAY,OAAZ,EAAwB;AACpD,MAAI,GAAG,GAAG,SAAV;;AACA,MAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,WAAO,GAAP;AACH;;AACD,MAAM,kBAAkB,GAAG,OAAO,CAAC,KAAR,CAAc,GAAd,CAA3B;;AACA,MAAI,kBAAkB,CAAC,MAAnB,GAA4B,CAAhC,EAAmC;AAC/B,QAAI,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,MAAM,CAAC,oBAAP,CAA4B,WAA1D,EAAuE;AACnE,MAAA,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,oBAAP,CAA4B,WAA7B,CAAT,IAAsD,SAA5D;AACH,KAFD,MAEO,IAAI,kBAAkB,CAAC,CAAD,CAAlB,KAA0B,MAAM,CAAC,oBAAP,CAA4B,WAA1D,EAAuE;AAC1E,MAAA,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,oBAAP,CAA4B,WAA7B,CAAT,IAAsD,SAA5D;AACH;AACJ;;AACD,SAAO,GAAP;AACH,CAdD;;;;AAgBA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,SAAD,EAAY,SAAZ,EAA0B;AAC/C,MAAI,CAAC,SAAD,IAAc,CAAC,OAAO,CAAC,SAAD,CAA1B,EAAuC;AACnC;AACH;;AACD,SAAO,SAAS,CAAC,GAAV,CAAc,UAAC,KAAD,EAAW;AAC5B,IAAA,KAAK,GAAG,KAAK,CAAC,IAAN,EAAR;;AAEA,QAAI,KAAK,KAAK,MAAM,CAAC,oBAAP,CAA4B,YAA1C,EAAwD;AACpD;AACA,MAAA,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,oBAAP,CAA4B,YAA7B,CAAjB;AACH,KAHD,MAGO,IAAI,KAAK,KAAK,MAAM,CAAC,oBAAP,CAA4B,WAA1C,EAAuD;AAC1D;AACA,MAAA,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,oBAAP,CAA4B,WAA7B,CAAT,IAAsD,SAA9D;AACH,KAHM,MAGA,IAAI,KAAK,KAAK,MAAM,CAAC,oBAAP,CAA4B,WAA1C,EAAuD;AAC1D;AACA,MAAA,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,oBAAP,CAA4B,WAA7B,CAAT,IAAsD,SAA9D;AACH;;AACD,WAAO,KAAP;AACH,GAdM,CAAP;AAeH,CAnBD;;;;AAqBA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,EAAD,EAAQ;AAC1B,MAAI,EAAE,IAAI,EAAE,CAAC,UAAb,EAAyB;AACrB,IAAA,EAAE,CAAC,UAAH,CAAc,WAAd,CAA0B,EAA1B;AACH;AACJ,CAJD;;;;AAMA,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,GAAmC;AAAA,MAAlC,GAAkC,uEAA5B,IAA4B;AAAA,MAAtB,YAAsB,uEAAP,EAAO;AACzD,MAAM,OAAO,GAAG,GAAG,IAAI,GAAG,CAAC,OAAX,GAAqB,GAAG,CAAC,OAAzB,GAAmC,YAAnD;;AACA,MAAI,OAAO,OAAO,CAAC,KAAf,KAAyB,UAA7B,EAAyC;AACrC,WAAO,OAAO,CAAC,KAAR,CAAc,OAAd,CAAP;AACH;;AACD,SAAO,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAP;AACH,CAND","file":"dataBind.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {getViewModelPropValue, isPlainObject, isEmptyObject, each} from './util';\n\n/**\n * attrBinding\n * @description\n * DOM decleartive attr binding. update elenment attributes\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst attrBinding = (cache, viewModel, bindingAttrs) => {\n    const dataKey = cache.dataKey;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n    cache.elementData.viewModelProValue = cache.elementData.viewModelProValue || {};\n\n    const oldAttrObj = cache.elementData.viewModelProValue;\n    const vmAttrObj = getViewModelPropValue(viewModel, cache);\n\n    if (!isPlainObject(vmAttrObj)) {\n        return;\n    }\n\n    // reject if nothing changed\n    if (JSON.stringify(oldAttrObj) === JSON.stringify(vmAttrObj)) {\n        return;\n    }\n\n    // reset old data and update it\n    cache.elementData.viewModelProValue = {};\n\n    if (isEmptyObject(oldAttrObj)) {\n        each(vmAttrObj, (key, value)=> {\n            cache.el.setAttribute(key, value);\n            // populate with vmAttrObj data\n            cache.elementData.viewModelProValue[key] = value;\n        });\n    } else {\n        each(oldAttrObj, (key, value)=> {\n            if (typeof vmAttrObj[key] === 'undefined') {\n                // remove attribute if not present in current vm\n                cache.el.removeAttribute(key);\n            }\n        });\n\n        each(vmAttrObj, (key, value)=> {\n            if (oldAttrObj[key] !== vmAttrObj[key]) {\n                // update attribute if value changed\n                cache.el.setAttribute(key, vmAttrObj[key]);\n            }\n            // populate with vmAttrObj data\n            cache.elementData.viewModelProValue[key] = value;\n        });\n    }\n};\n\nexport default attrBinding;\n","import * as config from './config';\nimport {debounceRaf, extend, each, throwErrorMessage} from './util';\nimport renderTemplate from './renderTemplate';\nimport clickBinding from './clickBinding';\nimport dblclickBinding from './dbclickBinding';\nimport blurBinding from './blurBinding';\nimport focusBinding from './focusBinding';\nimport hoverBinding from './hoverBinding';\nimport changeBinding from './changeBinding';\nimport modelBinding from './modelBinding';\nimport submitBinding from './submitBinding';\nimport textBinding from './textBinding';\nimport showBinding from './showBinding';\nimport cssBinding from './cssBinding';\nimport attrBinding from './attrBinding';\nimport forOfBinding from './forOfBinding';\nimport ifBinding from './ifBinding';\nimport switchBinding from './switchBinding';\nimport createBindingCache from './domWalker';\nimport * as pubSub from './pubSub';\n\nlet compIdIndex = 0;\n\nclass Binder {\n    constructor($rootElement, viewModel, bindingAttrs) {\n        if ($rootElement instanceof window.jQuery && $rootElement.length) {\n            $rootElement = $rootElement.eq(0)[0];\n        }\n\n        if (!$rootElement || $rootElement.nodeType !== 1 || viewModel === null || typeof viewModel !== 'object') {\n            throw new TypeError('$rootElement or viewModel is invalid');\n        }\n\n        this.initRendered = false;\n\n        this.compId = compIdIndex += 1;\n\n        this.$rootElement = $rootElement;\n\n        this.viewModel = viewModel;\n\n        this.bindingAttrs = bindingAttrs;\n\n        this.render = debounceRaf(this.render, this);\n\n        this.isServerRendered = this.$rootElement.getAttribute(config.serverRenderedAttr) !== null;\n\n        // inject instance into viewModel\n        this.viewModel.APP = this;\n\n        this.viewModel.$root = this.viewModel;\n\n        this.parseView();\n\n        // for jquery user set viewModel referece to $rootElement for easy debug\n        // otherwise use Expando to attach viewModel to $rootElement\n        if (window.jQuery) {\n            window.jQuery(this.$rootElement).data(config.bindingDataReference.rootDataKey, this.viewModel);\n        } else {\n            this.$rootElement[config.bindingDataReference.rootDataKey] = this.viewModel;\n        }\n\n        return this;\n    }\n\n    /**\n     * parseView\n     * @description\n     * @return {this}\n     * traver from $rootElement to find each data-bind-* element\n     * then apply data binding\n     */\n    parseView() {\n        this.elementCache = createBindingCache({\n            rootNode: this.$rootElement,\n            bindingAttrs: this.bindingAttrs,\n        });\n\n        // updateElementCache if server rendered on init\n        if (this.isServerRendered && !this.initRendered) {\n            this.updateElementCache({\n                templateCache: true,\n            });\n        }\n        return this;\n    }\n\n    /**\n     * updateElementCache\n     * @param {object} opt\n     * @description call createBindingCache to parse view and generate bindingCache\n     */\n    updateElementCache(opt = {}) {\n        const elementCache = opt.elementCache || this.elementCache;\n\n        if (opt.allCache) {\n            // walk dom from root element to regenerate elementCache\n            this.elementCache = createBindingCache({\n                rootNode: this.$rootElement,\n                bindingAttrs: this.bindingAttrs,\n            });\n        }\n        // walk from first rendered template node to create/update child bindingCache\n        if (opt.allCache || opt.templateCache) {\n            if (elementCache[this.bindingAttrs.tmp] && elementCache[this.bindingAttrs.tmp].length) {\n                elementCache[this.bindingAttrs.tmp].forEach((cache) => {\n                    // set skipCheck as skipForOfParseFn whenever an node has\n                    // both template and forOf bindings\n                    // then the template bindingCache should be an empty object\n                    let skipForOfParseFn = null;\n                    if (cache.el.hasAttribute(this.bindingAttrs.forOf)) {\n                        skipForOfParseFn = () => {\n                            return true;\n                        };\n                    }\n                    cache.bindingCache = createBindingCache({\n                        rootNode: cache.el,\n                        bindingAttrs: this.bindingAttrs,\n                        skipCheck: skipForOfParseFn,\n                        isRenderedTemplate: opt.isRenderedTemplates,\n                    });\n                });\n            }\n        }\n    }\n\n    render(opt = {}) {\n        let updateOption = {};\n        if (!this.initRendered) {\n            // only update eventsBinding if server rendered\n            if (this.isServerRendered) {\n                this.$rootElement.removeAttribute(config.serverRenderedAttr);\n                updateOption = createBindingOption(config.bindingUpdateConditions.serverRendered, opt);\n            } else {\n                updateOption = createBindingOption(config.bindingUpdateConditions.init, opt);\n            }\n        } else {\n            // when called again only update visualBinding options\n            updateOption = createBindingOption('', opt);\n        }\n\n        // create postProcessQueue before start rendering\n        this.postProcessQueue = [];\n\n        // render and apply binding to template(s)\n        // this is an share function therefore passing 'this' context\n        renderTemplatesBinding({\n            ctx: this,\n            elementCache: this.elementCache,\n            updateOption: updateOption,\n            bindingAttrs: this.bindingAttrs,\n            viewModel: this.viewModel,\n        });\n\n        // apply bindings to rest of the DOM\n        Binder.applyBinding({\n            ctx: this,\n            elementCache: this.elementCache,\n            updateOption: updateOption,\n            bindingAttrs: this.bindingAttrs,\n            viewModel: this.viewModel,\n        });\n\n        // trigger postProcess\n        Binder.postProcess(this.postProcessQueue);\n        // clear postProcessQueue\n        this.postProcessQueue.length = 0;\n        delete this.postProcessQueue;\n\n        this.initRendered = true;\n    }\n\n    static applyBinding({ctx, elementCache, updateOption, bindingAttrs, viewModel}) {\n        if (!elementCache || !updateOption) {\n            return;\n        }\n\n        // the follow binding should be in order for better efficiency\n\n        // apply forOf Binding\n        if (updateOption.forOfBinding && elementCache[bindingAttrs.forOf] && elementCache[bindingAttrs.forOf].length) {\n            elementCache[bindingAttrs.forOf].forEach((cache) => {\n                forOfBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply attr Binding\n        if (updateOption.attrBinding && elementCache[bindingAttrs.attr] && elementCache[bindingAttrs.attr].length) {\n            elementCache[bindingAttrs.attr].forEach((cache) => {\n                attrBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply if Binding\n        if (updateOption.ifBinding && elementCache[bindingAttrs.if] && elementCache[bindingAttrs.if].length) {\n            elementCache[bindingAttrs.if].forEach((cache) => {\n                ifBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply show Binding\n        if (updateOption.showBinding && elementCache[bindingAttrs.show] && elementCache[bindingAttrs.show].length) {\n            elementCache[bindingAttrs.show].forEach((cache) => {\n                showBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply switch Binding\n        if (\n            updateOption.switchBinding &&\n            elementCache[bindingAttrs.switch] &&\n            elementCache[bindingAttrs.switch].length\n        ) {\n            elementCache[bindingAttrs.switch].forEach((cache) => {\n                switchBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply text binding\n        if (updateOption.textBinding && elementCache[bindingAttrs.text] && elementCache[bindingAttrs.text].length) {\n            elementCache[bindingAttrs.text].forEach((cache) => {\n                textBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply cssBinding\n        if (updateOption.cssBinding && elementCache[bindingAttrs.css] && elementCache[bindingAttrs.css].length) {\n            elementCache[bindingAttrs.css].forEach((cache) => {\n                cssBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply model binding\n        if (updateOption.modelBinding && elementCache[bindingAttrs.model] && elementCache[bindingAttrs.model].length) {\n            elementCache[bindingAttrs.model].forEach((cache) => {\n                modelBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply change binding\n        if (\n            updateOption.changeBinding &&\n            elementCache[bindingAttrs.change] &&\n            elementCache[bindingAttrs.change].length\n        ) {\n            elementCache[bindingAttrs.change].forEach((cache) => {\n                changeBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply submit binding\n        if (\n            updateOption.submitBinding &&\n            elementCache[bindingAttrs.submit] &&\n            elementCache[bindingAttrs.submit].length\n        ) {\n            elementCache[bindingAttrs.submit].forEach((cache) => {\n                submitBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply click binding\n        if (updateOption.clickBinding && elementCache[bindingAttrs.click] && elementCache[bindingAttrs.click].length) {\n            elementCache[bindingAttrs.click].forEach((cache) => {\n                clickBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply double click binding\n        if (\n            updateOption.dblclickBinding &&\n            elementCache[bindingAttrs.dblclick] &&\n            elementCache[bindingAttrs.dblclick].length\n        ) {\n            elementCache[bindingAttrs.dblclick].forEach((cache) => {\n                dblclickBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply blur binding\n        if (updateOption.blurBinding && elementCache[bindingAttrs.blur] && elementCache[bindingAttrs.blur].length) {\n            elementCache[bindingAttrs.blur].forEach((cache) => {\n                blurBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply focus binding\n        if (updateOption.focusBinding && elementCache[bindingAttrs.focus] && elementCache[bindingAttrs.focus].length) {\n            elementCache[bindingAttrs.focus].forEach((cache) => {\n                focusBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n\n        // apply hover binding\n        if (updateOption.hoverBinding && elementCache[bindingAttrs.hover] && elementCache[bindingAttrs.hover].length) {\n            elementCache[bindingAttrs.hover].forEach((cache) => {\n                hoverBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\n            });\n        }\n    }\n\n    static postProcess(tasks) {\n        if (!tasks || !tasks.length) {\n            return;\n        }\n        each(tasks, (index, task) => {\n            if (typeof task === 'function') {\n                try {\n                    task();\n                } catch (err) {\n                    throwErrorMessage(err, 'Error postProcess: ' + String(task));\n                }\n            }\n        });\n    }\n\n    subscribe(eventName = '', fn) {\n        pubSub.subscribeEvent(this, eventName, fn);\n        return this;\n    }\n\n    subscribeOnce(eventName = '', fn) {\n        pubSub.subscribeEventOnce(this, eventName, fn);\n        return this;\n    }\n\n    unsubscribe(eventName = '') {\n        pubSub.unsubscribeEvent(this.compId, eventName);\n        return this;\n    }\n\n    unsubscribeAll() {\n        pubSub.unsubscribeAllEvent(this.compId);\n        return this;\n    }\n\n    publish(eventName = '', ...args) {\n        pubSub.publishEvent(eventName, ...args);\n        return this;\n    }\n}\n\nconst renderTemplatesBinding = ({ctx, elementCache, updateOption, bindingAttrs, viewModel}) => {\n    if (!elementCache || !bindingAttrs) {\n        return false;\n    }\n    // render and apply binding to template(s) and forOf DOM\n    if (elementCache[bindingAttrs.tmp] && elementCache[bindingAttrs.tmp].length) {\n        // when re-render call with {templateBinding: true}\n        // template and nested templates\n        if (updateOption.templateBinding) {\n            // overwrite updateOption with 'init' bindingUpdateConditions\n            updateOption = createBindingOption(config.bindingUpdateConditions.init);\n\n            elementCache[bindingAttrs.tmp].forEach(($element) => {\n                renderTemplate($element, viewModel, bindingAttrs, elementCache);\n            });\n            // update cache after all template(s) rendered\n            ctx.updateElementCache({\n                templateCache: true,\n                elementCache: elementCache,\n                isRenderedTemplates: true,\n            });\n        }\n        // enforce render even element is not in DOM tree\n        updateOption.forceRender = true;\n\n        // apply bindings to rendered templates element\n        elementCache[bindingAttrs.tmp].forEach((cache) => {\n            Binder.applyBinding({\n                elementCache: cache.bindingCache,\n                updateOption: updateOption,\n                bindingAttrs: bindingAttrs,\n                viewModel: viewModel,\n            });\n        });\n    }\n    return true;\n};\n\n/**\n * createBindingOption\n * @param {string} condition\n * @param {object} opt\n * @description\n * generate binding update option object by condition\n * @return {object} updateOption\n */\nconst createBindingOption = (condition = '', opt = {}) => {\n    const visualBindingOptions = {\n        templateBinding: false,\n        textBinding: true,\n        cssBinding: true,\n        ifBinding: true,\n        showBinding: true,\n        modelBinding: true,\n        attrBinding: true,\n        forOfBinding: true,\n        switchBinding: true,\n    };\n    const eventsBindingOptions = {\n        changeBinding: true,\n        clickBinding: true,\n        dblclickBinding: true,\n        blurBinding: true,\n        focusBinding: true,\n        hoverBinding: true,\n        submitBinding: true,\n    };\n    // this is visualBindingOptions but everything false\n    // concrete declear for performance purpose\n    const serverRenderedOptions = {\n        templateBinding: false,\n        textBinding: false,\n        cssBinding: false,\n        ifBinding: false,\n        showBinding: false,\n        modelBinding: false,\n        attrBinding: false,\n        forOfBinding: false,\n        switchBinding: false,\n    };\n    let updateOption = {};\n\n    switch (condition) {\n    case config.bindingUpdateConditions.serverRendered:\n        updateOption = extend({}, eventsBindingOptions, serverRenderedOptions, opt);\n        break;\n    case config.bindingUpdateConditions.init:\n        // flag templateBinding to true to render tempalte(s)\n        opt.templateBinding = true;\n        updateOption = extend({}, visualBindingOptions, eventsBindingOptions, opt);\n        break;\n    default:\n        // when called again only update visualBinding options\n        updateOption = extend({}, visualBindingOptions, opt);\n    }\n\n    return updateOption;\n};\n\n/**\n * renderIteration\n * @param {object} opt\n * @description\n * render element's binding by supplied elementCache\n * This function is desidned for FoOf, If, switch bindings\n */\nconst renderIteration = ({elementCache, iterationVm, bindingAttrs, isRegenerate}) => {\n    const bindingUpdateOption = isRegenerate\n        ? createBindingOption(config.bindingUpdateConditions.init)\n        : createBindingOption();\n\n    // enforce render even element is not in DOM tree\n    bindingUpdateOption.forceRender = true;\n\n    // render and apply binding to template(s)\n    // this is an share function therefore passing current APP 'this' context\n    // viewModel is a dynamic generated iterationVm\n    renderTemplatesBinding({\n        ctx: iterationVm.$root ? iterationVm.$root.APP : iterationVm.APP,\n        elementCache: elementCache,\n        updateOption: bindingUpdateOption,\n        bindingAttrs: bindingAttrs,\n        viewModel: iterationVm,\n    });\n\n    Binder.applyBinding({\n        elementCache: elementCache,\n        updateOption: bindingUpdateOption,\n        bindingAttrs: bindingAttrs,\n        viewModel: iterationVm,\n    });\n};\n\nexport {Binder, createBindingOption, renderTemplatesBinding, renderIteration};\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * blurBinding\n * DOM decleartive on blur event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst blurBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let viewModelContext;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n\n        $(cache.el)\n            .off('blur.databind')\n            .on('blur.databind', function(e) {\n                const args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default blurBinding;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, setViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * changeBinding\n * @description input element on change event binding. DOM -> viewModel update\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst changeBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    const modelDataKey = cache.el.getAttribute(bindingAttrs.model);\n    let newValue = '';\n    let oldValue = '';\n    let viewModelContext;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n\n        // assing on change event\n        $(cache.el)\n            .off('change.databind')\n            .on('change.databind', function(e) {\n                const $this = $(this);\n                const isCheckbox = $this.is(':checkbox');\n                newValue = isCheckbox ? $this.prop('checked') : _.escape($this.val());\n                // set data to viewModel\n                if (modelDataKey) {\n                    oldValue = getViewModelValue(viewModel, modelDataKey);\n                    setViewModelValue(viewModel, modelDataKey, newValue);\n                }\n                const args = [e, $this, newValue, oldValue].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n                oldValue = newValue;\n            });\n    }\n};\n\nexport default changeBinding;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * clickBinding\n * @description\n * DOM decleartive click event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst clickBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let viewModelContext;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el)\n            .off('click.databind')\n            .on('click.databind', function(e) {\n                const args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default clickBinding;\n","/* eslint-disable no-invalid-this */\nimport * as config from './config';\nimport * as util from './util';\n\nconst createClonedElementCache = (bindingData) => {\n    const clonedElement = bindingData.el.cloneNode(true);\n    bindingData.fragment = document.createDocumentFragment();\n    bindingData.fragment.appendChild(clonedElement);\n    return bindingData;\n};\n\nconst setCommentPrefix = (bindingData) => {\n    if (!bindingData || !bindingData.type) {\n        return;\n    }\n    let commentPrefix = '';\n    const dataKeyMarker = bindingData.dataKey ? bindingData.dataKey.replace(util.REGEX.WHITESPACES, '_') : '';\n\n    switch (bindingData.type) {\n    case config.bindingAttrs.forOf:\n        commentPrefix = config.commentPrefix.forOf;\n        break;\n    case config.bindingAttrs.if:\n        commentPrefix = config.commentPrefix.if;\n        break;\n    case config.bindingAttrs.case:\n        commentPrefix = config.commentPrefix.case;\n        break;\n    case config.bindingAttrs.default:\n        commentPrefix = config.commentPrefix.default;\n        break;\n    }\n    bindingData.commentPrefix = commentPrefix + dataKeyMarker;\n    return bindingData;\n};\n\n/**\n * setDocRangeEndAfter\n * @param {object} node\n * @param {object} bindingData\n * @description\n * recursive execution to find last wrapping comment node\n * and set as bindingData.docRange.setEndAfter\n * if not found deleteContents will has no operation\n * @return {undefined}\n */\nconst setDocRangeEndAfter = (node, bindingData) => {\n    if (!bindingData.commentPrefix) {\n        setCommentPrefix(bindingData);\n    }\n    const startTextContent = bindingData.commentPrefix;\n    const endTextContent = startTextContent + config.commentSuffix;\n    node = node.nextSibling;\n\n    // check last wrap comment node\n    if (node) {\n        if (node.nodeType === 8 && node.textContent === endTextContent) {\n            return bindingData.docRange.setEndBefore(node);\n        }\n        setDocRangeEndAfter(node, bindingData);\n    }\n};\n\n/**\n * wrapCommentAround\n * @param {object} bindingData\n * @param {Node} node\n * @return {object} DOM fragment\n * @description\n * wrap frament with comment node\n */\nconst wrapCommentAround = (bindingData, node) => {\n    let prefix = '';\n    if (!bindingData.commentPrefix) {\n        setCommentPrefix(bindingData);\n    }\n    prefix = bindingData.commentPrefix;\n    const commentBegin = document.createComment(prefix);\n    const commentEnd = document.createComment(prefix + config.commentSuffix);\n    // document fragment - logic for ForOf binding\n    // check node.parentNode because node could be from cache and no longer in DOM\n    if (node.nodeType === 11) {\n        node.insertBefore(commentBegin, node.firstChild);\n        node.appendChild(commentEnd);\n    } else if (node.parentNode) {\n        node.parentNode.insertBefore(commentBegin, node);\n        util.insertAfter(node.parentNode, commentEnd, node);\n        // update bindingData details\n        bindingData.previousNonTemplateElement = node.previousSibling;\n        bindingData.nextNonTemplateElement = node.nextSibling;\n        bindingData.parentElement = node.previousSibling.parentElement;\n    }\n\n    return node;\n};\n\n/**\n * removeElemnetsByCommentWrap\n * @param {object} bindingData\n * @return {undefined}\n * @description remove elments by range\n */\nconst removeElemnetsByCommentWrap = (bindingData) => {\n    if (!bindingData.docRange) {\n        bindingData.docRange = document.createRange();\n    }\n    try {\n        if (bindingData.previousNonTemplateElement) {\n            // update docRange start and end match the wrapped comment node\n            bindingData.docRange.setStartBefore(bindingData.previousNonTemplateElement.nextSibling);\n            setDocRangeEndAfter(bindingData.previousNonTemplateElement.nextSibling, bindingData);\n        } else {\n            // insert before next non template element\n            bindingData.docRange.setStartBefore(bindingData.parentElement.firstChild);\n            setDocRangeEndAfter(bindingData.parentElement.firstChild, bindingData);\n        }\n    } catch (err) {\n        console.log('error removeElemnetsByCommentWrap: ', err.message);\n    }\n\n    return bindingData.docRange.deleteContents();\n};\n\n/**\n * removeDomTemplateElement\n * @param {object} bindingData\n * @return {object} null\n */\nconst removeDomTemplateElement = (bindingData) => {\n    // first render - forElement is live DOM element so has parentNode\n    if (bindingData.el.parentNode) {\n        return bindingData.el.parentNode.removeChild(bindingData.el);\n    }\n    removeElemnetsByCommentWrap(bindingData);\n};\n\nconst insertRenderedElements = (bindingData, fragment) => {\n    // insert rendered fragment after the previousNonTemplateElement\n    if (bindingData.previousNonTemplateElement) {\n        util.insertAfter(bindingData.parentElement, fragment, bindingData.previousNonTemplateElement);\n    } else {\n        // insert before next non template element\n        if (bindingData.nextNonTemplateElement) {\n            bindingData.parentElement.insertBefore(fragment, bindingData.nextNonTemplateElement);\n        } else if (bindingData.parentElement) {\n            // insert from parent\n            bindingData.parentElement.appendChild(fragment);\n        }\n    }\n};\n\nexport {\n    createClonedElementCache,\n    setCommentPrefix,\n    wrapCommentAround,\n    removeElemnetsByCommentWrap,\n    removeDomTemplateElement,\n    setDocRangeEndAfter,\n    insertRenderedElements,\n};\n","const bindingAttrs = {\n    comp: 'data-jq-comp',\n    tmp: 'data-jq-tmp',\n    text: 'data-jq-text',\n    click: 'data-jq-click',\n    dblclick: 'data-jq-dblclick',\n    blur: 'data-jq-blur',\n    focus: 'data-jq-focus',\n    hover: 'data-jq-hover',\n    change: 'data-jq-change',\n    submit: 'data-jq-submit',\n    model: 'data-jq-model',\n    show: 'data-jq-show',\n    css: 'data-jq-css',\n    attr: 'data-jq-attr',\n    forOf: 'data-jq-for',\n    if: 'data-jq-if',\n    switch: 'data-jq-switch',\n    case: 'data-jq-case',\n    default: 'data-jq-default',\n};\nconst serverRenderedAttr = 'data-server-rendered';\nconst dataIndexAttr = 'data-index';\nconst commentPrefix = {\n    forOf: 'data-forOf_',\n    if: 'data-if_',\n    case: 'data-case_',\n    default: 'data-default_',\n};\nconst commentSuffix = '_end';\n\n// global setting of underscore template inteprolate default token\nconst templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /\\{\\{=(.+?)\\}\\}/g,\n    escape: /\\{\\{(.+?)\\}\\}/g,\n};\n\nconst bindingDataReference = {\n    rootDataKey: '$root',\n    currentData: '$data',\n    currentIndex: '$index',\n    mouseEnterHandlerName: 'in',\n    mouseLeaveHandlerName: 'out',\n};\n\nconst bindingUpdateConditions = {\n    serverRendered: 'SERVER-RENDERED',\n    init: 'INIT',\n};\n\n// maximum string length before running regex\nconst maxDatakeyLength = 50;\n\nconst constants = {\n    filters: {\n        ONCE: 'once',\n    },\n    PARENT_REF: '_parent',\n};\n\nexport {\n    bindingAttrs,\n    dataIndexAttr,\n    templateSettings,\n    serverRenderedAttr,\n    commentPrefix,\n    commentSuffix,\n    bindingUpdateConditions,\n    bindingDataReference,\n    maxDatakeyLength,\n    constants,\n};\n","import {getViewModelPropValue, isPlainObject, arrayRemoveMatch, each} from './util';\n\n/**\n * cssBinding\n * @description\n * DOM decleartive css binding. update classlist.\n * viewModel data can function but must return JSOL.\n * added css class if value is true\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst cssBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const dataKey = cache.dataKey;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!dataKey || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n    cache.elementData.viewModelPropValue = cache.elementData.viewModelPropValue || '';\n\n    // let $element = $(cache.el);\n    const oldCssList = cache.elementData.viewModelPropValue;\n    let newCssList = '';\n    const vmCssListObj = getViewModelPropValue(viewModel, cache);\n    let vmCssListArray = [];\n    let isViewDataObject = false;\n    let isViewDataString = false;\n    let cssList = [];\n\n    if (typeof vmCssListObj === 'string') {\n        isViewDataString = true;\n    } else if (isPlainObject(vmCssListObj)) {\n        isViewDataObject = true;\n    } else {\n        // reject if vmCssListObj is not an object or string\n        return;\n    }\n\n    if (isViewDataObject) {\n        newCssList = JSON.stringify(vmCssListObj);\n    } else {\n        newCssList = vmCssListObj.replace(/\\s\\s+/g, ' ').trim();\n        vmCssListArray = newCssList.split(' ');\n    }\n    // reject if nothing changed\n    if (oldCssList === newCssList) {\n        return;\n    }\n\n    // get current css classes from element\n    const domCssList = cache.el.classList;\n    // clone domCssList as new array\n    const domCssListLength = domCssList.length;\n    for (let i = 0; i < domCssListLength; i += 1) {\n        cssList.push(domCssList[i]);\n    }\n\n    if (isViewDataObject) {\n        each(vmCssListObj, function(k, v) {\n            const i = cssList.indexOf(k);\n            if (v === true) {\n                cssList.push(k);\n            } else if (i !== -1) {\n                cssList.splice(i, 1);\n            }\n        });\n    } else if (isViewDataString) {\n        // remove oldCssList items from cssList\n        cssList = arrayRemoveMatch(cssList, oldCssList);\n        cssList = cssList.concat(vmCssListArray);\n    }\n\n    // unique cssList array\n    cssList = cssList.filter((v, i, a) => {\n        return a.indexOf(v) === i;\n    });\n\n    cssList = cssList.join(' ');\n    // update element data\n    cache.elementData.viewModelPropValue = newCssList;\n    // replace all css classes\n    cache.el.setAttribute('class', cssList);\n};\n\nexport default cssBinding;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * dblclickBinding\n * DOM decleartive double click event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst dblclickBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let viewModelContext;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el)\n            .off('dblclick.databind')\n            .on('dblclick.databind', function(e) {\n                const args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default dblclickBinding;\n","import {invertObj, extractFilterList, getFunctionParameterList, REGEX} from './util';\nimport {constants} from './config';\n\nlet bindingAttrsMap;\n\n/**\n * walkDOM\n * @description by Douglas Crockford - walk each DOM node and calls provided callback function\n * start walk from firstChild\n * @param {object} node\n * @param {function} func\n */\nconst walkDOM = (node, func) => {\n    let parseChildNode = true;\n    node = node.firstElementChild;\n    while (node) {\n        parseChildNode = func(node);\n        if (parseChildNode) {\n            walkDOM(node, func);\n        }\n        node = node.nextElementSibling;\n    }\n};\n\nconst getAttributesObject = (node) => {\n    const ret = {};\n    Array.prototype.slice.call(node.attributes).forEach((item) => {\n        ret[item.name] = item.value;\n    });\n    return ret;\n};\n\nconst checkSkipChildParseBindings = (attrObj = {}, bindingAttrs) => {\n    return [bindingAttrs.forOf, bindingAttrs.if, bindingAttrs.case, bindingAttrs.default].filter((type) => {\n        return typeof attrObj[type] !== 'undefined';\n    });\n};\n\nconst rootSkipCheck = (node) => {\n    return node.tagName === 'SVG';\n};\n\nconst defaultSkipCheck = (node, bindingAttrs) => {\n    return node.tagName === 'SVG' || node.hasAttribute(bindingAttrs.comp);\n};\n\nconst populateBindingCache = ({node, attrObj, bindingCache, type}) => {\n    let attrValue;\n    let cacheData;\n\n    if (bindingAttrsMap && bindingAttrsMap[type] && typeof attrObj[type] !== 'undefined') {\n        bindingCache[type] = bindingCache[type] || [];\n        attrValue = attrObj[type].trim();\n        cacheData = {\n            el: node,\n            dataKey: attrValue,\n        };\n\n        // populate cacheData.filters. update filterList first item as dataKey\n        cacheData = extractFilterList(cacheData);\n\n        // populate cacheData.parameters\n        // for store function call parameters eg. '$index', '$root'\n        // useful with DOM for-loop template as reference to binding data\n        const paramList = getFunctionParameterList(cacheData.dataKey);\n        if (paramList) {\n            cacheData.parameters = paramList;\n            cacheData.dataKey = cacheData.dataKey.replace(REGEX.FUNCTIONPARAM, '').trim();\n        }\n        // store parent array reference to cacheData\n        cacheData[constants.PARENT_REF] = bindingCache[type];\n        bindingCache[type].push(cacheData);\n    }\n    return bindingCache;\n};\n\nconst createBindingCache = ({rootNode = null, bindingAttrs = {}, skipCheck, isRenderedTemplate = false}) => {\n    let bindingCache = {};\n\n    if (!rootNode instanceof window.Node) {\n        throw new TypeError('walkDOM: Expected a DOM node');\n    }\n\n    bindingAttrsMap = bindingAttrsMap || invertObj(bindingAttrs);\n\n    const parseNode = (node, skipNodeCheckFn = defaultSkipCheck) => {\n        let isSkipForOfChild = false;\n\n        if (node.nodeType !== 1 || !node.hasAttributes()) {\n            return true;\n        }\n        if (skipNodeCheckFn(node, bindingAttrs) || (typeof skipCheck === 'function' && skipCheck(node))) {\n            return false;\n        }\n\n        // when creating sub bindingCache if is for tmp binding\n        // skip same element that has forOf binding the  forOf is alredy parsed\n        const attrObj = getAttributesObject(node);\n        const hasSkipChildParseBindings = checkSkipChildParseBindings(attrObj, bindingAttrs);\n        let iterateList = [];\n\n        if (hasSkipChildParseBindings.length) {\n            isSkipForOfChild = true;\n            iterateList = hasSkipChildParseBindings;\n        } else if (isRenderedTemplate && attrObj[bindingAttrs.tmp]) {\n            // skip current node parse if was called by node has template binding and already rendered\n            return true;\n        } else {\n            iterateList = Object.keys(attrObj);\n        }\n\n        iterateList.forEach((key) => {\n            // skip for switch case and default bining\n            if (key !== bindingAttrs.case && key !== bindingAttrs.default) {\n                bindingCache = populateBindingCache({\n                    node: node,\n                    attrObj: attrObj,\n                    bindingCache: bindingCache,\n                    type: key,\n                });\n            }\n        });\n\n        // after cache forOf skip parse child nodes\n        if (isSkipForOfChild) {\n            return false;\n        }\n\n        return true;\n    };\n\n    if (parseNode(rootNode, rootSkipCheck)) {\n        walkDOM(rootNode, parseNode);\n    }\n    return bindingCache;\n};\n\nexport default createBindingCache;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * focusBinding\n * DOM decleartive on focus event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst focusBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let viewModelContext;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el)\n            .off('focus.databind')\n            .on('focus.databind', function(e) {\n                const args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default focusBinding;\n","import {maxDatakeyLength} from './config';\nimport {REGEX} from './util';\nimport renderForOfBinding from './renderForOfBinding';\n\n/**\n * forOfBinding\n * @description\n * DOM decleartive for binding.\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst forOfBinding = (cache, viewModel, bindingAttrs) => {\n    const dataKey = cache.dataKey;\n\n    if (!dataKey || dataKey.length > maxDatakeyLength) {\n        return;\n    }\n\n    if (!cache.iterator) {\n        if (dataKey.length > maxDatakeyLength) {\n            return;\n        }\n        // replace mess spaces with single space\n        cache.dataKey = cache.dataKey.replace(REGEX.WHITESPACES, ' ');\n        const forExpMatch = dataKey.match(REGEX.FOROF);\n\n        if (!forExpMatch) {\n            return;\n        }\n\n        cache.iterator = {};\n        cache.iterator.alias = forExpMatch[1].trim();\n\n        if (forExpMatch[2]) {\n            cache.iterator.dataKey = forExpMatch[2].trim();\n            cache.parentElement = cache.el.parentElement;\n            cache.previousNonTemplateElement = cache.el.previousSibling;\n            cache.nextNonTemplateElement = cache.el.nextSibling;\n        }\n    }\n\n    renderForOfBinding({\n        bindingData: cache,\n        viewModel: viewModel,\n        bindingAttrs: bindingAttrs,\n    });\n};\n\nexport default forOfBinding;\n","/* eslint-disable no-invalid-this */\nimport {bindingDataReference} from './config';\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * blurBinding\n * DOM decleartive on blur event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst hoverBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    const inHandlerName = bindingDataReference.mouseEnterHandlerName;\n    const outHandlerName = bindingDataReference.mouseLeaveHandlerName;\n    let viewModelContext;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    cache.elementData = cache.elementData || {};\n\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const handlers = getViewModelValue(viewModel, handlerName);\n\n    if (handlers && typeof handlers[inHandlerName] === 'function' && typeof handlers[outHandlerName] === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n\n        $(cache.el)\n            .off('mouseenter.databind mouseleave.databind')\n            .hover(\n                function enter(e) {\n                    const args = [e, cache.el].concat(paramList);\n                    handlers[inHandlerName].apply(viewModelContext, args);\n                },\n                function leave(e) {\n                    const args = [e, cache.el].concat(paramList);\n                    handlers[outHandlerName].apply(viewModelContext, args);\n                }\n            );\n    }\n};\n\nexport default hoverBinding;\n","import {bindingAttrs as configBindingAttrs, constants} from './config';\nimport {getViewModelPropValue, removeElement} from './util';\nimport {createClonedElementCache, wrapCommentAround} from './commentWrapper';\nimport {renderIfBinding, removeIfBinding} from './renderIfBinding';\n\n/**\n * if-Binding\n * @description\n * DOM decleartive for binding.\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst ifBinding = (cache, viewModel, bindingAttrs) => {\n    const dataKey = cache.dataKey;\n\n    // isOnce only return if there is no child bindings\n    if (!dataKey || (cache.isOnce && cache.hasIterationBindingCache === false)) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n    cache.type = cache.type || configBindingAttrs.if;\n\n    const oldViewModelProValue = cache.elementData.viewModelPropValue;\n    // getViewModelPropValue could be return undefined or null\n    const viewModelPropValue = getViewModelPropValue(viewModel, cache) || false;\n\n    // do nothing if viewModel value not changed and no child bindings\n    if (oldViewModelProValue === viewModelPropValue && !cache.hasIterationBindingCache) {\n        return;\n    }\n\n    const shouldRender = Boolean(viewModelPropValue);\n\n    // remove this cache from parent array\n    if (!shouldRender && cache.isOnce && cache.el.parentNode) {\n        removeElement(cache.el);\n        // delete cache.fragment;\n        removeBindingInQueue({\n            viewModel: viewModel,\n            cache: cache,\n        });\n        return;\n    }\n\n    // store new show status\n    cache.elementData.viewModelPropValue = viewModelPropValue;\n\n    // only create fragment once\n    // wrap comment tag around\n    // remove if attribute from original element to allow later dataBind parsing\n    if (!cache.fragment) {\n        wrapCommentAround(cache, cache.el);\n        cache.el.removeAttribute(bindingAttrs.if);\n        createClonedElementCache(cache);\n    }\n\n    if (!shouldRender) {\n        // remove element\n        removeIfBinding(cache);\n    } else {\n        // render element\n        renderIfBinding({\n            bindingData: cache,\n            viewModel: viewModel,\n            bindingAttrs: bindingAttrs,\n        });\n\n        // if render once\n        // remove this cache from parent array if no child caches\n        if (cache.isOnce && !cache.hasIterationBindingCache) {\n            // delete cache.fragment;\n            removeBindingInQueue({\n                viewModel: viewModel,\n                cache: cache,\n            });\n        }\n    }\n};\n\nconst removeBindingInQueue = ({viewModel, cache}) => {\n    let ret = false;\n    if (viewModel.APP.postProcessQueue) {\n        viewModel.APP.postProcessQueue.push(\n            ((cache, index) => () => {\n                cache[constants.PARENT_REF].splice(index, 1);\n            })(cache, cache[constants.PARENT_REF].indexOf(cache))\n        );\n        ret = true;\n    }\n    return ret;\n};\n\nexport default ifBinding;\n","import * as config from './config';\nimport {Binder} from './binder';\n\nlet bindingAttrs = config.bindingAttrs;\nlet templateSettings = config.templateSettings;\n\nconst use = (settings = {}) => {\n    if (settings.bindingAttrs) {\n        bindingAttrs = $.extend({}, settings.bindingAttrs);\n    }\n    if (settings.templateSettings) {\n        templateSettings = $.extend({}, settings.templateSettings);\n    }\n};\n\nconst init = ($rootElement, viewModel = null) => {\n    _.templateSettings = templateSettings;\n    return new Binder($rootElement, viewModel, bindingAttrs);\n};\n\n// expose to global\nwindow.dataBind = {\n    use: use,\n    init: init,\n    version: '1.8.1',\n};\n","import {getViewModelValue} from './util';\n\n/**\n * modelBinding\n * @description input element data binding. viewModel -> DOM update\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst modelBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const dataKey = cache.dataKey;\n    let newValue = '';\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!dataKey || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    newValue = getViewModelValue(viewModel, dataKey);\n\n    if (typeof newValue !== 'undefined' && newValue !== null) {\n        const $element = $(cache.el);\n        const isCheckbox = $element.is(':checkbox');\n        const isRadio = $element.is(':radio');\n        const inputName = $element[0].name;\n        const $radioGroup = isRadio ? $('input[name=\"' + inputName + '\"]') : null;\n        const oldValue = isCheckbox ? $element.prop('checked') : $element.val();\n\n        // update element value\n        if (newValue !== oldValue) {\n            if (isCheckbox) {\n                $element.prop('checked', Boolean(newValue));\n            } else if (isRadio) {\n                $radioGroup.val([newValue]);\n            } else {\n                $element.val(newValue);\n            }\n        }\n    }\n};\n\nexport default modelBinding;\n","import * as util from './util';\n\n/**\n *  pubSub\n * @description use jQuery object as pubSub\n * @example EVENTS object strucure:\n *  EVENTS = {\n        'EVENT-NAME': [{ 'comp-id': fn }],\n        'EVENT-NAME2': [{ 'comp-id': fn }]\n    };\n */\n\nconst EVENTS = {};\n\nconst subscribeEvent = (instance = null, eventName = '', fn, isOnce = false) => {\n    if (!instance || !instance.compId || !eventName || typeof fn !== 'function') {\n        return;\n    }\n\n    let subscriber;\n    let isSubscribed = false;\n\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\n    EVENTS[eventName] = EVENTS[eventName] || [];\n    // check if already subscribed and update callback fn\n    isSubscribed = EVENTS[eventName].some((subscriber) => {\n        if (subscriber[instance.compId]) {\n            subscriber[instance.compId] = fn.bind(instance.viewModel);\n            subscriber.isOnce = isOnce;\n            return true;\n        }\n    });\n    // push if not yet subscribe\n    if (!isSubscribed) {\n        subscriber = {};\n        subscriber[instance.compId] = fn.bind(instance.viewModel);\n        subscriber.isOnce = isOnce;\n        EVENTS[eventName].push(subscriber);\n    }\n};\n\nconst subscribeEventOnce = (instance = null, eventName = '', fn) => {\n    subscribeEvent(instance, eventName, fn, true);\n};\n\nconst unsubscribeEvent = (compId = '', eventName = '') => {\n    if (!compId || !eventName) {\n        return;\n    }\n\n    let i = 0;\n    let subscribersLength = 0;\n    let subscriber;\n\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\n\n    if (EVENTS[eventName]) {\n        subscribersLength = EVENTS[eventName].length;\n        for (i = 0; i < subscribersLength; i += 1) {\n            subscriber = EVENTS[eventName][i];\n            if (subscriber[compId]) {\n                EVENTS[eventName].splice(i, 1);\n                break;\n            }\n        }\n    }\n    // delete the event if no more subscriber\n    if (!EVENTS[eventName].length) {\n        delete EVENTS[eventName];\n    }\n};\n\n/**\n * unsubscribeAllEvent\n * @description unsubscribe all event by compId. eg when a component removed\n * @param {string} compId\n */\nconst unsubscribeAllEvent = (compId = '') => {\n    if (!compId) {\n        return;\n    }\n    Object.keys(EVENTS).forEach((eventName) => {\n        unsubscribeEvent(compId, eventName);\n    });\n};\n\nconst publishEvent = (eventName = '', ...args) => {\n    if (!eventName || !EVENTS[eventName]) {\n        return;\n    }\n\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\n\n    EVENTS[eventName].forEach((subscriber) => {\n        Object.keys(subscriber).forEach((compId) => {\n            if (typeof subscriber[compId] === 'function') {\n                const ret = subscriber[compId](...args);\n                if (subscriber.isOnce) {\n                    unsubscribeEvent(compId, eventName);\n                }\n                return ret;\n            }\n        });\n    });\n};\n\nexport {subscribeEvent, subscribeEventOnce, unsubscribeEvent, unsubscribeAllEvent, publishEvent};\n","/* eslint-disable no-invalid-this */\nimport {bindingAttrs as configBindingAttrs, bindingDataReference} from './config';\nimport {getViewModelPropValue, isArray, isPlainObject, throwErrorMessage, cloneDomNode, isEmptyObject} from './util';\nimport createBindingCache from './domWalker';\nimport {renderIteration} from './binder';\nimport {wrapCommentAround, removeElemnetsByCommentWrap, insertRenderedElements} from './commentWrapper';\n\nconst renderForOfBinding = ({bindingData, viewModel, bindingAttrs}) => {\n    if (!bindingData || !viewModel || !bindingAttrs) {\n        return;\n    }\n    let keys;\n    let iterationDataLength;\n    const iterationData = getViewModelPropValue(viewModel, bindingData.iterator);\n    let isRegenerate = false;\n\n    // check iterationData and set iterationDataLength\n    if (isArray(iterationData)) {\n        iterationDataLength = iterationData.length;\n    } else if (isPlainObject(iterationData)) {\n        keys = Object.keys(iterationData);\n        iterationDataLength = keys.length;\n    } else {\n        // throw error but let script contince to run\n        return throwErrorMessage(null, 'iterationData is not an plain object or array');\n    }\n\n    // flag as pared for-of logic with bindingData.type\n    if (!bindingData.type) {\n        bindingData.type = configBindingAttrs.forOf;\n        wrapCommentAround(bindingData, bindingData.el);\n    }\n\n    // assign forOf internal id to bindingData once\n    if (typeof bindingData.iterationSize === 'undefined') {\n        // store iterationDataLength\n        bindingData.iterationSize = iterationDataLength;\n        // remove orignal node for-of attributes\n        bindingData.el.removeAttribute(bindingAttrs.forOf);\n        isRegenerate = true;\n    } else {\n        // only regenerate cache if iterationDataLength changed\n        isRegenerate = bindingData.iterationSize !== iterationDataLength;\n        // update iterationSize\n        bindingData.iterationSize = iterationDataLength;\n    }\n\n    if (!isRegenerate) {\n        bindingData.iterationBindingCache.forEach(function(elementCache, i) {\n            if (!isEmptyObject(elementCache)) {\n                const iterationVm = createIterationViewModel({\n                    bindingData: bindingData,\n                    viewModel: viewModel,\n                    iterationData: iterationData,\n                    keys: keys,\n                    index: i,\n                });\n                renderIteration({\n                    elementCache: elementCache,\n                    iterationVm: iterationVm,\n                    bindingAttrs: bindingAttrs,\n                    isRegenerate: false,\n                });\n            }\n        });\n\n        return;\n    }\n\n    // generate forOfBinding elements into fragment\n    const fragment = generateForOfElements(bindingData, viewModel, bindingAttrs, iterationData, keys);\n\n    removeElemnetsByCommentWrap(bindingData);\n\n    // insert fragment content into DOM\n    return insertRenderedElements(bindingData, fragment);\n};\n\nconst createIterationViewModel = ({bindingData, viewModel, iterationData, keys, index}) => {\n    const iterationVm = {};\n    iterationVm[bindingData.iterator.alias] = keys ? iterationData[keys[index]] : iterationData[index];\n    // populate common binding data reference\n    iterationVm[bindingDataReference.rootDataKey] = viewModel.$root || viewModel;\n    iterationVm[bindingDataReference.currentData] = iterationVm[bindingData.iterator.alias];\n    iterationVm[bindingDataReference.currentIndex] = index;\n    return iterationVm;\n};\n\nconst generateForOfElements = (bindingData, viewModel, bindingAttrs, iterationData, keys) => {\n    const fragment = document.createDocumentFragment();\n    const iterationDataLength = bindingData.iterationSize;\n    let clonedItem;\n    let iterationVm;\n    let iterationBindingCache;\n    let i = 0;\n\n    // create or clear exisitng iterationBindingCache\n    if (isArray(bindingData.iterationBindingCache)) {\n        bindingData.iterationBindingCache.length = 0;\n    } else {\n        bindingData.iterationBindingCache = [];\n    }\n\n    // generate forOf and append to DOM\n    for (i = 0; i < iterationDataLength; i += 1) {\n        clonedItem = cloneDomNode(bindingData.el);\n\n        // create bindingCache per iteration\n        iterationBindingCache = createBindingCache({\n            rootNode: clonedItem,\n            bindingAttrs: bindingAttrs,\n        });\n\n        bindingData.iterationBindingCache.push(iterationBindingCache);\n\n        if (!isEmptyObject(iterationBindingCache)) {\n            // create an iterationVm match iterator alias\n            iterationVm = createIterationViewModel({\n                bindingData: bindingData,\n                viewModel: viewModel,\n                iterationData: iterationData,\n                keys: keys,\n                index: i,\n            });\n\n            renderIteration({\n                elementCache: bindingData.iterationBindingCache[i],\n                iterationVm: iterationVm,\n                bindingAttrs: bindingAttrs,\n                isRegenerate: true,\n            });\n        }\n\n        fragment.appendChild(clonedItem);\n    }\n\n    return fragment;\n};\n\nexport default renderForOfBinding;\n","import {isEmptyObject} from './util';\nimport {renderIteration} from './binder';\nimport createBindingCache from './domWalker';\nimport {commentSuffix} from './config';\nimport {removeElemnetsByCommentWrap, insertRenderedElements} from './commentWrapper';\n\n/**\n * isTargetDomRemoved\n * @description check if DOM between 'start' and 'end' comment tag has been removed\n * @param {object} bindingData\n * @return {boolean}\n */\nconst isTargetDomRemoved = (bindingData) => {\n    let ret = false;\n    if (bindingData && bindingData.previousNonTemplateElement) {\n        const commentStartTextContent = bindingData.previousNonTemplateElement.textContent;\n        const endCommentTag = bindingData.previousNonTemplateElement.nextSibling;\n\n        if (endCommentTag.nodeType === 8) {\n            if (endCommentTag.textContent === commentStartTextContent + commentSuffix) {\n                ret = true;\n            }\n        }\n    }\n    return ret;\n};\n\nconst renderIfBinding = ({bindingData, viewModel, bindingAttrs}) => {\n    if (!bindingData.fragment) {\n        return;\n    }\n\n    const isDomRemoved = isTargetDomRemoved(bindingData);\n    let rootElement = bindingData.el;\n\n    // remove current old DOM.\n    // TODO: try preserve DOM\n    if (!isDomRemoved && !bindingData.isOnce) {\n        removeIfBinding(bindingData);\n        // use fragment for create iterationBindingCache\n        rootElement = bindingData.fragment.firstChild.cloneNode(true);\n    }\n\n    // walk clonedElement to create iterationBindingCache once\n    if (!bindingData.iterationBindingCache || !bindingData.hasIterationBindingCache) {\n        bindingData.iterationBindingCache = createBindingCache({\n            rootNode: rootElement,\n            bindingAttrs: bindingAttrs,\n        });\n    }\n\n    // only render if has iterationBindingCache\n    // means has other dataBindings to be render\n    if (!isEmptyObject(bindingData.iterationBindingCache)) {\n        bindingData.hasIterationBindingCache = true;\n        renderIteration({\n            elementCache: bindingData.iterationBindingCache,\n            iterationVm: viewModel,\n            bindingAttrs: bindingAttrs,\n            isRegenerate: true,\n        });\n    }\n\n    // insert to new rendered DOM\n    // TODO: check unnecessary insertion when DOM is preserved\n    insertRenderedElements(bindingData, rootElement);\n};\n\nconst removeIfBinding = (bindingData) => {\n    removeElemnetsByCommentWrap(bindingData);\n    // remove cache.IterationBindingCache to prevent memory leak\n    if (bindingData.hasIterationBindingCache) {\n        delete bindingData.iterationBindingCache;\n        delete bindingData.hasIterationBindingCache;\n    }\n};\n\nexport {renderIfBinding, removeIfBinding};\n","import {dataIndexAttr} from './config';\nimport {parseStringToJson, getViewModelPropValue} from './util';\n\nlet $domFragment = null;\nlet $templateRoot = null;\nlet nestTemplatesCount = 0;\nconst templateCache = {};\n\n/**\n * compileTemplate\n * @description compile underscore template and store in templateCache\n * @param {string} id\n * @param {object} templateData\n * @return {string} rendered html string\n */\nconst compileTemplate = (id, templateData = null) => {\n    let templateString;\n    let templateElement;\n\n    if (!templateCache[id]) {\n        templateElement = document.getElementById(id);\n        templateString = templateElement ? templateElement.innerHTML : '';\n        templateCache[id] = _.template(templateString, {\n            variable: 'data',\n        });\n    }\n\n    return templateCache[id](templateData);\n};\n\n/**\n * renderTemplate\n * @description\n * get template setting from DOM attribute then call compileTemplate\n * to render and append to target DOM\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {object} elementCache\n */\nconst renderTemplate = (cache, viewModel, bindingAttrs, elementCache) => {\n    const settings = typeof cache.dataKey === 'string' ? parseStringToJson(cache.dataKey) : cache.dataKey;\n    let viewData = settings.data;\n    const isAppend = settings.append;\n    const isPrepend = settings.prepend;\n    let $currentElement;\n\n    cache.dataKey = settings;\n\n    viewData =\n        typeof viewData === 'undefined' || viewData === '$root'\n            ? viewModel\n            : getViewModelPropValue(viewModel, {\n                dataKey: settings.data,\n                parameters: cache.parameters,\n            });\n\n    if (!viewData) {\n        return;\n    }\n\n    const $element = $(cache.el);\n    const $index = typeof viewModel.$index !== 'undefined' ? viewModel.$index : $element.attr(dataIndexAttr);\n    if (typeof $index !== 'undefined') {\n        viewData.$index = $index;\n    }\n    $domFragment = $domFragment ? $domFragment : $('<div/>');\n    $templateRoot = $templateRoot ? $templateRoot : $element;\n    const html = compileTemplate(settings.id, viewData);\n\n    // domFragment should be empty in first run\n    // append rendered html\n    if (!$domFragment.children().length) {\n        $currentElement = $domFragment;\n        $domFragment.append(html);\n    } else {\n        $currentElement = $element;\n        if (!isAppend && !isPrepend) {\n            $currentElement.empty();\n        }\n        if (isPrepend) {\n            $currentElement.prepend(html);\n        } else {\n            $currentElement.append(html);\n        }\n    }\n\n    // check if there are nested template then recurisive render them\n    const $nestedTemplates = $currentElement.find('[' + bindingAttrs.tmp + ']');\n\n    if ($nestedTemplates.length) {\n        nestTemplatesCount += $nestedTemplates.length;\n        $nestedTemplates.each(function(index, element) {\n            const thisTemplateCache = {\n                el: element,\n                dataKey: element.getAttribute(bindingAttrs.tmp),\n            };\n            elementCache[bindingAttrs.tmp].push(thisTemplateCache);\n            // recursive template render\n            renderTemplate(thisTemplateCache, viewModel, bindingAttrs, elementCache);\n            nestTemplatesCount -= 1;\n        });\n    }\n\n    // no more nested tempalted to render, start to append $domFragment into $templateRoot\n    if (nestTemplatesCount === 0) {\n        // append to DOM once\n        if (!isAppend && !isPrepend) {\n            $templateRoot.empty();\n        }\n        if (isPrepend) {\n            $templateRoot.prepend($domFragment.html());\n        } else {\n            $templateRoot.append($domFragment.html());\n        }\n        // clear cached fragment\n        $domFragment = $templateRoot = null;\n        // trigger callback if provided\n        if (typeof viewModel.afterTemplateRender === 'function') {\n            viewModel.afterTemplateRender(viewData);\n        }\n    }\n};\n\nexport default renderTemplate;\n","import {getViewModelPropValue} from './util';\n\n/**\n * showBinding\n * @description\n * DOM decleartive show binding. Make binding show/hide according to viewModel data (boolean)\n * viewModel data can function but must return boolean\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst showBinding = (cache, viewModel, bindingAttrs) => {\n    const dataKey = cache.dataKey;\n    let currentInlineSytle = {};\n    let currentInlineDisplaySytle = '';\n    let shouldShow = true;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n\n    const oldShowStatus = cache.elementData.viewModelPropValue;\n\n    // store current element display default style once only\n    if (\n        typeof cache.elementData.displayStyle === 'undefined' ||\n        typeof cache.elementData.computedStyle === 'undefined'\n    ) {\n        currentInlineSytle = cache.el.style;\n        currentInlineDisplaySytle = currentInlineSytle.display;\n        // use current inline style if defined\n        if (currentInlineDisplaySytle) {\n            // set to 'block' if is 'none'\n            cache.elementData.displayStyle = currentInlineDisplaySytle === 'none' ? 'block' : currentInlineDisplaySytle;\n            cache.elementData.computedStyle = null;\n        } else {\n            const computeStyle = window.getComputedStyle(cache.el, null).getPropertyValue('display');\n            cache.elementData.displayStyle = null;\n            cache.elementData.computedStyle = computeStyle;\n        }\n    }\n\n    shouldShow = getViewModelPropValue(viewModel, cache);\n\n    // treat undefined || null as false.\n    // eg if property doesn't exsits in viewModel, it will treat as false to hide element\n    shouldShow = Boolean(shouldShow);\n\n    // reject if nothing changed\n    if (oldShowStatus === shouldShow) {\n        return;\n    }\n\n    if (!shouldShow) {\n        if (cache.el.style.display !== 'none') {\n            cache.el.style.setProperty('display', 'none');\n        }\n    } else {\n        if (cache.elementData.computedStyle || cache.el.style.display === 'none') {\n            if (cache.elementData.computedStyle === 'none') {\n                // default display is none in css rule, so use display 'block'\n                cache.el.style.setProperty('display', 'block');\n            } else {\n                // has default displayable type so just remove inline display 'none'\n                if (currentInlineSytle.length > 1) {\n                    cache.el.style.removeProperty('display');\n                } else {\n                    cache.el.removeAttribute('style');\n                }\n            }\n        } else {\n            // element default display was inline style, so restore it\n            cache.el.style.setProperty('display', cache.elementData.displayStyle);\n        }\n    }\n\n    // store new show status\n    cache.elementData.viewModelPropValue = shouldShow;\n};\n\nexport default showBinding;\n","import {getViewModelValue, resolveViewModelContext, resolveParamList, getFormData} from './util';\n\n/**\n * submitBinding\n * @description on form submit binding. pass current form data as json object to handler\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst submitBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let viewModelContext;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const handlerFn = getViewModelValue(viewModel, handlerName);\n    const $element = $(cache.el);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        // assing on change event\n        $element.off('submit.databind').on('submit.databind', function(e) {\n            const args = [e, $element, getFormData($element)].concat(paramList);\n            handlerFn.apply(viewModelContext, args);\n        });\n    }\n};\n\nexport default submitBinding;\n","import {getViewModelPropValue} from './util';\nimport {createClonedElementCache, wrapCommentAround} from './commentWrapper';\nimport {renderIfBinding, removeIfBinding} from './renderIfBinding';\n/**\n * switch-Binding\n * @description\n * DOM decleartive switch binding.\n * switch parent element wrap direct child with case bindings\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst switchBinding = (cache, viewModel, bindingAttrs) => {\n    const dataKey = cache.dataKey;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n\n    const newExpression = getViewModelPropValue(viewModel, cache);\n\n    if (newExpression === cache.elementData.viewModelPropValue) {\n        return;\n    }\n\n    cache.elementData.viewModelPropValue = newExpression;\n\n    // build switch cases if not yet defined\n    if (!cache.cases) {\n        const childrenElements = cache.el.children;\n        if (!childrenElements.length) {\n            return;\n        }\n        cache.cases = [];\n        for (let i = 0, elementLength = childrenElements.length; i < elementLength; i += 1) {\n            let caseData = null;\n            if (childrenElements[i].hasAttribute(bindingAttrs.case)) {\n                caseData = createCaseData(childrenElements[i], bindingAttrs.case);\n            } else if (childrenElements[i].hasAttribute(bindingAttrs.default)) {\n                caseData = createCaseData(childrenElements[i], bindingAttrs.default);\n                caseData.isDefault = true;\n            }\n            // create fragment by clone node\n            // wrap with comment tag\n            if (caseData) {\n                wrapCommentAround(caseData, caseData.el);\n                // remove binding attribute for later dataBind parse\n                if (caseData.isDefault) {\n                    caseData.el.removeAttribute(bindingAttrs.default);\n                } else {\n                    caseData.el.removeAttribute(bindingAttrs.case);\n                }\n                createClonedElementCache(caseData);\n                cache.cases.push(caseData);\n            }\n        }\n    }\n\n    if (cache.cases.length) {\n        let hasMatch = false;\n        // do switch operation - reuse if binding logic\n        for (let j = 0, casesLength = cache.cases.length; j < casesLength; j += 1) {\n            let newCaseValue;\n            if (cache.cases[j].dataKey) {\n                // set back to dataKey if nothing found in viewModel\n                newCaseValue = getViewModelPropValue(viewModel, cache.cases[j]) || cache.cases[j].dataKey;\n            }\n\n            if (newCaseValue === cache.elementData.viewModelPropValue || cache.cases[j].isDefault) {\n                hasMatch = true;\n                // render element\n                renderIfBinding({\n                    bindingData: cache.cases[j],\n                    viewModel: viewModel,\n                    bindingAttrs: bindingAttrs,\n                });\n\n                // remove other elements\n                removeUnmatchCases(cache.cases, j);\n                break;\n            }\n        }\n        // no match remove all cases\n        if (!hasMatch) {\n            removeUnmatchCases(cache.cases);\n        }\n    }\n};\n\nfunction removeUnmatchCases(cases, matchedIndex) {\n    cases.forEach((caseData, index) => {\n        if (index !== matchedIndex || typeof matchedIndex === 'undefined') {\n            removeIfBinding(caseData);\n            // remove cache.IterationBindingCache to prevent memory leak\n            if (caseData.hasIterationBindingCache) {\n                caseData.iterationBindingCache = null;\n                caseData.hasIterationBindingCache = false;\n            }\n        }\n    });\n}\n\nfunction createCaseData(node, attrName) {\n    const caseData = {\n        el: node,\n        dataKey: node.getAttribute(attrName),\n        type: attrName,\n    };\n    return caseData;\n}\n\nexport default switchBinding;\n","import {getViewModelPropValue} from './util';\n\n/**\n * textBinding\n * * @description\n * DOM decleartive text binding update dom textnode with viewModel data\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {boolean} forceRender\n */\nconst textBinding = (cache, viewModel, bindingAttrs, forceRender) => {\n    const dataKey = cache.dataKey;\n    const APP = viewModel.APP || viewModel.$root.APP;\n\n    // NOTE: this doesn't work for for-of, if and switch bindings because element was not in DOM\n    if (!dataKey || (!forceRender && !APP.$rootElement.contains(cache.el))) {\n        return;\n    }\n\n    const newValue = getViewModelPropValue(viewModel, cache);\n    const oldValue = cache.el.textContent;\n\n    if (typeof newValue !== 'undefined' && typeof newValue !== 'object' && newValue !== null) {\n        if (newValue !== oldValue) {\n            cache.el.textContent = newValue;\n        }\n    }\n};\n\nexport default textBinding;\n","import * as config from './config';\n\n// require to use lodash\n_ = window._ || {};\n\nconst hasIsArray = Array.isArray;\n\nconst supportPromise = typeof window['Promise'] === 'function';\n\nconst REGEX = {\n    FUNCTIONPARAM: /\\((.*?)\\)/,\n    WHITESPACES: /\\s+/g,\n    FOROF: /(.*?)\\s+(?:in|of)\\s+(.*)/,\n    PIPE: /\\|/,\n};\n\nconst generateElementCache = (bindingAttrs) => {\n    const elementCache = {};\n    $.each(bindingAttrs, function(k, v) {\n        elementCache[v] = [];\n    });\n    return elementCache;\n};\n\nconst isArray = (obj) => {\n    return hasIsArray ? Array.isArray(obj) : Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nconst isJsObject = (obj) => {\n    return obj !== null && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]';\n};\n\nconst isPlainObject = (obj) => {\n    if (!isJsObject(obj)) {\n        return false;\n    }\n\n    // If has modified constructor\n    const ctor = obj.constructor;\n    if (typeof ctor !== 'function') return false;\n\n    // If has modified prototype\n    const prot = ctor.prototype;\n    if (isJsObject(prot) === false) return false;\n\n    // If constructor does not have an Object-specific method\n    if (prot.hasOwnProperty('isPrototypeOf') === false) {\n        return false;\n    }\n\n    // Most likely a plain Object\n    return true;\n};\n\nconst isEmptyObject = (obj) => {\n    if (isJsObject(obj)) {\n        return Object.getOwnPropertyNames(obj).length === 0;\n    }\n    return false;\n};\n\n/**\n * getViewModelValue\n * @description walk a object by provided string path. eg 'a.b.c'\n * @param {object} viewModel\n * @param {string} prop\n * @return {object}\n */\nconst getViewModelValue = (viewModel, prop) => {\n    return _.get(viewModel, prop);\n};\n\n/**\n * setViewModelValue\n * @description populate viewModel object by path string\n * @param {object} obj\n * @param {string} prop\n * @param {string} value\n * @return {call} underscore set\n */\nconst setViewModelValue = (obj, prop, value) => {\n    return _.set(obj, prop, value);\n};\n\nconst getViewModelPropValue = (viewModel, bindingCache) => {\n    let dataKey = bindingCache.dataKey;\n    let paramList = bindingCache.parameters;\n    const isInvertBoolean = dataKey.charAt(0) === '!';\n\n    if (isInvertBoolean) {\n        dataKey = isInvertBoolean ? dataKey.substring(1) : dataKey;\n    }\n\n    let ret = getViewModelValue(viewModel, dataKey);\n\n    if (typeof ret === 'function') {\n        const viewModelContext = resolveViewModelContext(viewModel, dataKey);\n        const oldViewModelProValue = bindingCache.elementData ? bindingCache.elementData.viewModelProValue : null;\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        // let args = [oldViewModelProValue, bindingCache.el].concat(paramList);\n        const args = paramList.concat([oldViewModelProValue, bindingCache.el]);\n        ret = ret.apply(viewModelContext, args);\n    }\n\n    ret = isInvertBoolean ? !Boolean(ret) : ret;\n\n    // call through fitlers to get final value\n    ret = filtersViewModelPropValue({\n        value: ret,\n        viewModel: viewModel,\n        bindingCache: bindingCache,\n    });\n\n    return ret;\n};\n\nconst filtersViewModelPropValue = ({value, viewModel, bindingCache}) => {\n    let ret = value;\n    if (bindingCache.filters) {\n        each(bindingCache.filters, (index, filter) => {\n            const viewModelContext = resolveViewModelContext(viewModel, filter);\n            const filterFn = getViewModelValue.call(viewModelContext, viewModelContext, filter);\n            try {\n                ret = filterFn.call(viewModelContext, ret);\n            } catch (err) {\n                throwErrorMessage(err, `Invalid filter: ${filter}`);\n            }\n        });\n    }\n    return ret;\n};\n\nconst parseStringToJson = (str) => {\n    // fix unquote or single quote keys and replace single quote to double quote\n    const ret = str.replace(/(\\s*?{\\s*?|\\s*?,\\s*?)(['\"])?([a-zA-Z0-9]+)(['\"])?:/g, '$1\"$3\":').replace(/'/g, '\"');\n    return JSON.parse(ret);\n};\n\n/**\n * arrayRemoveMatch\n * @description remove match items in fromArray out of toArray\n * @param {array} toArray\n * @param {array} frommArray\n * @return {boolean}\n */\nconst arrayRemoveMatch = (toArray, frommArray) => {\n    return toArray.filter((value, index) => {\n        return frommArray.indexOf(value) < 0;\n    });\n};\n\nconst getFormData = ($form) => {\n    const sArray = $form.serializeArray();\n    const data = {};\n\n    sArray.map((n) => {\n        data[n['name']] = n['value'];\n    });\n\n    return data;\n};\n\n/**\n * getFunctionParameterList\n * @description convert parameter string to arrary\n * eg. '(\"a\",\"b\",\"c\")' > [\"a\",\"b\",\"c\"]\n * @param {string} str\n * @return {array} paramlist\n */\nconst getFunctionParameterList = (str) => {\n    if (!str || str.length > config.maxDatakeyLength) {\n        return;\n    }\n    let paramlist = str.match(REGEX.FUNCTIONPARAM);\n\n    if (paramlist && paramlist[1]) {\n        paramlist = paramlist[1].split(',');\n        paramlist.forEach(function(v, i) {\n            paramlist[i] = v.trim();\n        });\n    }\n    return paramlist;\n};\n\nconst extractFilterList = (cacheData) => {\n    if (!cacheData || !cacheData.dataKey || cacheData.dataKey.length > config.maxDatakeyLength) {\n        return cacheData;\n    }\n    const filterList = cacheData.dataKey.split(REGEX.PIPE);\n    let isOnceIndex;\n    cacheData.dataKey = filterList[0].trim();\n    if (filterList.length > 1) {\n        filterList.shift(0);\n        filterList.forEach(function(v, i) {\n            filterList[i] = v.trim();\n            if (filterList[i] === config.constants.filters.ONCE) {\n                cacheData.isOnce = true;\n                isOnceIndex = i;\n            }\n        });\n        // don't store filter 'once' - because it is internal logic not a property from viewModel\n        if (isOnceIndex >= 0) {\n            filterList.splice(isOnceIndex, 1);\n        }\n        cacheData.filters = filterList;\n    }\n    return cacheData;\n};\n\nconst invertObj = (sourceObj) => {\n    return Object.keys(sourceObj).reduce(function(obj, key) {\n        obj[sourceObj[key]] = key;\n        return obj;\n    }, {});\n};\n\nconst createDeferredObj = () => {\n    let dfObj = {};\n    if (supportPromise) {\n        dfObj.promise = new Promise((resolve, reject) => {\n            dfObj.resolve = resolve;\n            dfObj.reject = reject;\n        });\n    } else {\n        dfObj = $.Deferred(); // eslint-disable-line new-cap\n    }\n    return dfObj;\n};\n\n/**\n * debounce\n * @description decorate a function to be debounce using requestAnimationFrame\n * @param {function} fn\n * @param {context} ctx\n * @return {function}\n */\nconst debounceRaf = (fn, ctx = null) => {\n    return (function(fn, ctx) {\n        let dfObj = createDeferredObj();\n        let rafId = 0;\n\n        // return decorated fn\n        return function() {\n            /* eslint-disable prefer-rest-params */\n            const args = Array.from ? Array.from(arguments) : Array.prototype.slice.call(arguments);\n\n            window.cancelAnimationFrame(rafId);\n            rafId = window.requestAnimationFrame(() => {\n                try {\n                    // fn is Binder.render function\n                    fn.apply(ctx, args);\n                    // dfObj.resolve is function provided in .then promise chain\n                    // ctx is the current component\n                    dfObj.resolve(ctx);\n                } catch (err) {\n                    dfObj.reject(ctx, err);\n                }\n\n                // reset dfObj - otherwise then callbacks will not be in execution order\n                // example:\n                // myApp.render().then(function(){console.log('ok1')});\n                // myApp.render().then(function(){console.log('ok2')});\n                // myApp.render().then(function(){console.log('ok3')});\n                // >> ok1, ok2, ok3\n                dfObj = createDeferredObj();\n\n                window.cancelAnimationFrame(rafId);\n            });\n\n            /* eslint-enable prefer-rest-params */\n            return supportPromise ? dfObj.promise : dfObj.promise();\n        };\n    })(fn, ctx);\n};\n\n/**\n * getNodeAttrObj\n * @description convert Node attributes object to a json object\n * @param {object} node\n * @param {array} skipList\n * @return {object}\n */\nconst getNodeAttrObj = (node, skipList) => {\n    let attributesLength = 0;\n    let skipArray;\n\n    if (!node || node.nodeType !== 1 || !node.hasAttributes()) {\n        return;\n    }\n    if (skipList) {\n        skipArray = [];\n        skipArray = typeof skipList === 'string' ? skipArray.push(skipList) : skipList;\n    }\n    const attrObj = {};\n    attributesLength = node.attributes.length;\n\n    if (attributesLength) {\n        for (let i = 0; i < attributesLength; i += 1) {\n            const attribute = node.attributes.item(i);\n            attrObj[attribute.nodeName] = attribute.nodeValue;\n        }\n    }\n\n    if (isArray(skipArray)) {\n        skipArray.forEach((item) => {\n            if (attrObj[item]) {\n                delete attrObj[item];\n            }\n        });\n    }\n    return attrObj;\n};\n\n/**\n * extend\n * @param {boolean} isDeepMerge\n * @param {object} target\n * @param {object} sources\n * @return {object} merged object\n */\nconst extend = (isDeepMerge = false, target, ...sources) => {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (source === undefined) {\n        return target;\n    }\n\n    if (!isDeepMerge) {\n        return Object.assign(target, ...sources);\n    }\n\n    if (isMergebleObject(target) && isMergebleObject(source)) {\n        Object.keys(source).forEach((key) => {\n            if (isMergebleObject(source[key])) {\n                if (!target[key]) {\n                    target[key] = {};\n                }\n                extend(target[key], source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        });\n    }\n\n    return extend(true, target, ...sources);\n};\n\nconst each = (obj, fn) => {\n    if (typeof obj !== 'object' || typeof fn !== 'function') {\n        return;\n    }\n    let keys = [];\n    let keysLength = 0;\n    const isArrayObj = isArray(obj);\n    let key;\n    let value;\n    let i = 0;\n\n    if (isArrayObj) {\n        keysLength = obj.length;\n    } else if (isJsObject(obj)) {\n        keys = Object.keys(obj);\n        keysLength = keys.length;\n    } else {\n        throw new TypeError('Object is not an array or object');\n    }\n\n    for (i = 0; i < keysLength; i += 1) {\n        if (isArrayObj) {\n            key = i;\n            value = obj[i];\n        } else {\n            key = keys[i];\n            value = obj[key];\n        }\n        fn(key, value);\n    }\n};\n\nconst isMergebleObject = (item) => {\n    return isJsObject(item) && !isArray(item);\n};\n\n/**\n * cloneDomNode\n * @param {object} element\n * @return {object} cloned element\n * @description helper function to clone node\n */\nconst cloneDomNode = (element) => {\n    return element.cloneNode(true);\n};\n\n/**\n * insertAfter\n * @param {object} parentNode\n * @param {object} newNode\n * @param {object} referenceNode\n * @return {object} node\n * @description helper function to insert new node before the reference node\n */\nconst insertAfter = (parentNode, newNode, referenceNode) => {\n    const refNextElement = referenceNode && referenceNode.nextSibling ? referenceNode.nextSibling : null;\n    return parentNode.insertBefore(newNode, refNextElement);\n};\n\nconst resolveViewModelContext = (viewModel, datakey) => {\n    let ret = viewModel;\n    if (typeof datakey !== 'string') {\n        return ret;\n    }\n    const bindingDataContext = datakey.split('.');\n    if (bindingDataContext.length > 1) {\n        if (bindingDataContext[0] === config.bindingDataReference.rootDataKey) {\n            ret = viewModel[config.bindingDataReference.rootDataKey] || viewModel;\n        } else if (bindingDataContext[0] === config.bindingDataReference.currentData) {\n            ret = viewModel[config.bindingDataReference.currentData] || viewModel;\n        }\n    }\n    return ret;\n};\n\nconst resolveParamList = (viewModel, paramList) => {\n    if (!viewModel || !isArray(paramList)) {\n        return;\n    }\n    return paramList.map((param) => {\n        param = param.trim();\n\n        if (param === config.bindingDataReference.currentIndex) {\n            // convert '$index' to value\n            param = viewModel[config.bindingDataReference.currentIndex];\n        } else if (param === config.bindingDataReference.currentData) {\n            // convert '$data' to value or current viewModel\n            param = viewModel[config.bindingDataReference.currentData] || viewModel;\n        } else if (param === config.bindingDataReference.rootDataKey) {\n            // convert '$root' to root viewModel\n            param = viewModel[config.bindingDataReference.rootDataKey] || viewModel;\n        }\n        return param;\n    });\n};\n\nconst removeElement = (el) => {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n};\n\nconst throwErrorMessage = (err = null, errorMessage = '') => {\n    const message = err && err.message ? err.message : errorMessage;\n    if (typeof console.error === 'function') {\n        return console.error(message);\n    }\n    return console.log(message);\n};\n\nexport {\n    REGEX,\n    arrayRemoveMatch,\n    cloneDomNode,\n    debounceRaf,\n    each,\n    extend,\n    extractFilterList,\n    generateElementCache,\n    getFormData,\n    getFunctionParameterList,\n    getNodeAttrObj,\n    getViewModelPropValue,\n    getViewModelValue,\n    insertAfter,\n    invertObj,\n    isArray,\n    isEmptyObject,\n    isJsObject,\n    isPlainObject,\n    parseStringToJson,\n    removeElement,\n    resolveParamList,\n    resolveViewModelContext,\n    setViewModelValue,\n    throwErrorMessage,\n};\n"]}