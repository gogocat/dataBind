{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/attrBinding.js","src/binder.js","src/blurBinding.js","src/changeBinding.js","src/clickBinding.js","src/commentWrapper.js","src/config.js","src/cssBinding.js","src/dbclickBinding.js","src/domWalker.js","src/focusBinding.js","src/forOfBinding.js","src/hoverBinding.js","src/ifBinding.js","src/index.js","src/modelBinding.js","src/pubSub.js","src/renderForOfBinding.js","src/renderIfBinding.js","src/renderTemplate.js","src/showBinding.js","src/submitBinding.js","src/switchBinding.js","src/textBinding.js","src/util.js"],"names":[],"mappings":"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","file":"dataBind.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","import {getViewModelPropValue, isPlainObject, isEmptyObject, each} from './util';\r\n\r\n/**\r\n * attrBinding\r\n * @description\r\n * DOM decleartive attr binding. update elenment attributes\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst attrBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    cache.elementData = cache.elementData || {};\r\n    cache.elementData.viewModelProValue = cache.elementData.viewModelProValue || {};\r\n\r\n    const oldAttrObj = cache.elementData.viewModelProValue;\r\n    const vmAttrObj = getViewModelPropValue(viewModel, cache);\r\n\r\n    if (!isPlainObject(vmAttrObj)) {\r\n        return;\r\n    }\r\n\r\n    // reject if nothing changed\r\n    if (JSON.stringify(oldAttrObj) === JSON.stringify(vmAttrObj)) {\r\n        return;\r\n    }\r\n\r\n    // reset old data and update it\r\n    cache.elementData.viewModelProValue = {};\r\n\r\n    if (isEmptyObject(oldAttrObj)) {\r\n        each(vmAttrObj, (key, value)=> {\r\n            cache.el.setAttribute(key, value);\r\n            // populate with vmAttrObj data\r\n            cache.elementData.viewModelProValue[key] = value;\r\n        });\r\n    } else {\r\n        each(oldAttrObj, (key, value)=> {\r\n            if (typeof vmAttrObj[key] === 'undefined') {\r\n                // remove attribute if not present in current vm\r\n                cache.el.removeAttribute(key);\r\n            }\r\n        });\r\n\r\n        each(vmAttrObj, (key, value)=> {\r\n            if (oldAttrObj[key] !== vmAttrObj[key]) {\r\n                // update attribute if value changed\r\n                cache.el.setAttribute(key, vmAttrObj[key]);\r\n            }\r\n            // populate with vmAttrObj data\r\n            cache.elementData.viewModelProValue[key] = value;\r\n        });\r\n    }\r\n};\r\n\r\nexport default attrBinding;\r\n","import * as config from './config';\r\nimport {debounceRaf, extend} from './util';\r\nimport renderTemplate from './renderTemplate';\r\nimport clickBinding from './clickBinding';\r\nimport dblclickBinding from './dbclickBinding';\r\nimport blurBinding from './blurBinding';\r\nimport focusBinding from './focusBinding';\r\nimport hoverBinding from './hoverBinding';\r\nimport changeBinding from './changeBinding';\r\nimport modelBinding from './modelBinding';\r\nimport submitBinding from './submitBinding';\r\nimport textBinding from './textBinding';\r\nimport showBinding from './showBinding';\r\nimport cssBinding from './cssBinding';\r\nimport attrBinding from './attrBinding';\r\nimport forOfBinding from './forOfBinding';\r\nimport ifBinding from './ifBinding';\r\nimport switchBinding from './switchBinding';\r\nimport createBindingCache from './domWalker';\r\nimport * as pubSub from './pubSub';\r\n\r\nlet compIdIndex = 0;\r\n\r\nclass Binder {\r\n    constructor($rootElement, viewModel, bindingAttrs) {\r\n        if ($rootElement instanceof window.jQuery && $rootElement.length) {\r\n            $rootElement = $rootElement.eq(0)[0];\r\n        }\r\n\r\n        if (!$rootElement || $rootElement.nodeType !== 1 || viewModel === null || typeof viewModel !== 'object') {\r\n            throw new TypeError('$rootElement or viewModel is invalid');\r\n        }\r\n\r\n        this.initRendered = false;\r\n\r\n        this.compId = compIdIndex += 1;\r\n\r\n        this.$rootElement = $rootElement;\r\n\r\n        this.viewModel = viewModel;\r\n\r\n        this.bindingAttrs = bindingAttrs;\r\n\r\n        this.render = debounceRaf(this.render, this);\r\n\r\n        this.isServerRendered = this.$rootElement.getAttribute(config.serverRenderedAttr) !== null;\r\n\r\n        // inject instance into viewModel\r\n        this.viewModel.APP = this;\r\n\r\n        this.viewModel.$root = this.viewModel;\r\n\r\n        this.parseView();\r\n\r\n        // for jquery user set viewModel referece to $rootElement for easy debug\r\n        // otherwise use Expando to attach viewModel to $rootElement\r\n        if (window.jQuery) {\r\n            window.jQuery(this.$rootElement).data(config.bindingDataReference.rootDataKey, this.viewModel);\r\n        } else {\r\n            this.$rootElement[config.bindingDataReference.rootDataKey] = this.viewModel;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * parseView\r\n     * @description\r\n     * @return {this}\r\n     * traver from $rootElement to find each data-bind-* element\r\n     * then apply data binding\r\n     */\r\n    parseView() {\r\n        this.elementCache = createBindingCache({\r\n            rootNode: this.$rootElement,\r\n            bindingAttrs: this.bindingAttrs,\r\n        });\r\n\r\n        // updateElementCache if server rendered on init\r\n        if (this.isServerRendered && !this.initRendered) {\r\n            this.updateElementCache({\r\n                templateCache: true,\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * updateElementCache\r\n     * @param {object} opt\r\n     * @description call createBindingCache to parse view and generate bindingCache\r\n     */\r\n    updateElementCache(opt = {}) {\r\n        let elementCache = opt.elementCache || this.elementCache;\r\n\r\n        if (opt.allCache) {\r\n            // walk dom from root element to regenerate elementCache\r\n            this.elementCache = createBindingCache({\r\n                rootNode: this.$rootElement,\r\n                bindingAttrs: this.bindingAttrs,\r\n            });\r\n        }\r\n        // walk from first rendered template node to create/update child bindingCache\r\n        if (opt.allCache || opt.templateCache) {\r\n            if (elementCache[this.bindingAttrs.tmp] && elementCache[this.bindingAttrs.tmp].length) {\r\n                elementCache[this.bindingAttrs.tmp].forEach((cache) => {\r\n                    // set skipCheck as skipForOfParseFn whenever an node has\r\n                    // both template and forOf bindings\r\n                    // then the template bindingCache should be an empty object\r\n                    let skipForOfParseFn = null;\r\n                    if (cache.el.hasAttribute(this.bindingAttrs.forOf)) {\r\n                        skipForOfParseFn = () => {\r\n                            return true;\r\n                        };\r\n                    }\r\n                    cache.bindingCache = createBindingCache({\r\n                        rootNode: cache.el,\r\n                        bindingAttrs: this.bindingAttrs,\r\n                        skipCheck: skipForOfParseFn,\r\n                        isRenderedTemplate: opt.isRenderedTemplates,\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render(opt = {}) {\r\n        let updateOption = {};\r\n        if (!this.initRendered) {\r\n            // only update eventsBinding if server rendered\r\n            if (this.isServerRendered) {\r\n                this.$rootElement.removeAttribute(config.serverRenderedAttr);\r\n                updateOption = createBindingOption(config.bindingUpdateConditions.serverRendered, opt);\r\n            } else {\r\n                updateOption = createBindingOption(config.bindingUpdateConditions.init, opt);\r\n            }\r\n        } else {\r\n            // when called again only update visualBinding options\r\n            updateOption = createBindingOption('', opt);\r\n        }\r\n\r\n        // render and apply binding to template(s)\r\n        // this is an share function therefore passing 'this' context\r\n        renderTemplatesBinding({\r\n            ctx: this,\r\n            elementCache: this.elementCache,\r\n            updateOption: updateOption,\r\n            bindingAttrs: this.bindingAttrs,\r\n            viewModel: this.viewModel,\r\n        });\r\n\r\n        // apply bindings to rest of the DOM\r\n        Binder.applyBinding({\r\n            elementCache: this.elementCache,\r\n            updateOption: updateOption,\r\n            bindingAttrs: this.bindingAttrs,\r\n            viewModel: this.viewModel,\r\n        });\r\n\r\n        this.initRendered = true;\r\n    }\r\n\r\n    static applyBinding({elementCache, updateOption, bindingAttrs, viewModel}) {\r\n        if (!elementCache || !updateOption) {\r\n            return;\r\n        }\r\n\r\n        // the follow binding should be in order for better efficiency\r\n\r\n        // apply forOf Binding\r\n        if (updateOption.forOfBinding && elementCache[bindingAttrs.forOf] && elementCache[bindingAttrs.forOf].length) {\r\n            elementCache[bindingAttrs.forOf].forEach((cache) => {\r\n                forOfBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply attr Binding\r\n        if (updateOption.attrBinding && elementCache[bindingAttrs.attr] && elementCache[bindingAttrs.attr].length) {\r\n            elementCache[bindingAttrs.attr].forEach((cache) => {\r\n                attrBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply if Binding\r\n        if (updateOption.ifBinding && elementCache[bindingAttrs.if] && elementCache[bindingAttrs.if].length) {\r\n            elementCache[bindingAttrs.if].forEach((cache) => {\r\n                ifBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply show Binding\r\n        if (updateOption.showBinding && elementCache[bindingAttrs.show] && elementCache[bindingAttrs.show].length) {\r\n            elementCache[bindingAttrs.show].forEach((cache) => {\r\n                showBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply switch Binding\r\n        if (\r\n            updateOption.switchBinding &&\r\n            elementCache[bindingAttrs.switch] &&\r\n            elementCache[bindingAttrs.switch].length\r\n        ) {\r\n            elementCache[bindingAttrs.switch].forEach((cache) => {\r\n                switchBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply text binding\r\n        if (updateOption.textBinding && elementCache[bindingAttrs.text] && elementCache[bindingAttrs.text].length) {\r\n            elementCache[bindingAttrs.text].forEach((cache) => {\r\n                textBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply cssBinding\r\n        if (updateOption.cssBinding && elementCache[bindingAttrs.css] && elementCache[bindingAttrs.css].length) {\r\n            elementCache[bindingAttrs.css].forEach((cache) => {\r\n                cssBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply model binding\r\n        if (updateOption.modelBinding && elementCache[bindingAttrs.model] && elementCache[bindingAttrs.model].length) {\r\n            elementCache[bindingAttrs.model].forEach((cache) => {\r\n                modelBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply change binding\r\n        if (\r\n            updateOption.changeBinding &&\r\n            elementCache[bindingAttrs.change] &&\r\n            elementCache[bindingAttrs.change].length\r\n        ) {\r\n            elementCache[bindingAttrs.change].forEach((cache) => {\r\n                changeBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply submit binding\r\n        if (\r\n            updateOption.submitBinding &&\r\n            elementCache[bindingAttrs.submit] &&\r\n            elementCache[bindingAttrs.submit].length\r\n        ) {\r\n            elementCache[bindingAttrs.submit].forEach((cache) => {\r\n                submitBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply click binding\r\n        if (updateOption.clickBinding && elementCache[bindingAttrs.click] && elementCache[bindingAttrs.click].length) {\r\n            elementCache[bindingAttrs.click].forEach((cache) => {\r\n                clickBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply double click binding\r\n        if (\r\n            updateOption.dblclickBinding &&\r\n            elementCache[bindingAttrs.dblclick] &&\r\n            elementCache[bindingAttrs.dblclick].length\r\n        ) {\r\n            elementCache[bindingAttrs.dblclick].forEach((cache) => {\r\n                dblclickBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply blur binding\r\n        if (updateOption.blurBinding && elementCache[bindingAttrs.blur] && elementCache[bindingAttrs.blur].length) {\r\n            elementCache[bindingAttrs.blur].forEach((cache) => {\r\n                blurBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply focus binding\r\n        if (updateOption.focusBinding && elementCache[bindingAttrs.focus] && elementCache[bindingAttrs.focus].length) {\r\n            elementCache[bindingAttrs.focus].forEach((cache) => {\r\n                focusBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n\r\n        // apply hover binding\r\n        if (updateOption.hoverBinding && elementCache[bindingAttrs.hover] && elementCache[bindingAttrs.hover].length) {\r\n            elementCache[bindingAttrs.hover].forEach((cache) => {\r\n                hoverBinding(cache, viewModel, bindingAttrs, updateOption.forceRender);\r\n            });\r\n        }\r\n    }\r\n\r\n    subscribe(eventName = '', fn) {\r\n        pubSub.subscribeEvent(this, eventName, fn);\r\n        return this;\r\n    }\r\n\r\n    subscribeOnce(eventName = '', fn) {\r\n        pubSub.subscribeEventOnce(this, eventName, fn);\r\n        return this;\r\n    }\r\n\r\n    unsubscribe(eventName = '') {\r\n        pubSub.unsubscribeEvent(this.compId, eventName);\r\n        return this;\r\n    }\r\n\r\n    unsubscribeAll() {\r\n        pubSub.unsubscribeAllEvent(this.compId);\r\n        return this;\r\n    }\r\n\r\n    publish(eventName = '', ...args) {\r\n        pubSub.publishEvent(eventName, ...args);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst renderTemplatesBinding = ({ctx, elementCache, updateOption, bindingAttrs, viewModel}) => {\r\n    if (!elementCache || !bindingAttrs) {\r\n        return false;\r\n    }\r\n    // render and apply binding to template(s) and forOf DOM\r\n    if (elementCache[bindingAttrs.tmp] && elementCache[bindingAttrs.tmp].length) {\r\n        // when re-render call with {templateBinding: true}\r\n        // template and nested templates\r\n        if (updateOption.templateBinding) {\r\n            // overwrite updateOption with 'init' bindingUpdateConditions\r\n            updateOption = createBindingOption(config.bindingUpdateConditions.init);\r\n\r\n            elementCache[bindingAttrs.tmp].forEach(($element) => {\r\n                renderTemplate($element, viewModel, bindingAttrs, elementCache);\r\n            });\r\n            // update cache after all template(s) rendered\r\n            ctx.updateElementCache({\r\n                templateCache: true,\r\n                elementCache: elementCache,\r\n                isRenderedTemplates: true,\r\n            });\r\n        }\r\n        // enforce render even element is not in DOM tree\r\n        updateOption.forceRender = true;\r\n\r\n        // apply bindings to rendered templates element\r\n        elementCache[bindingAttrs.tmp].forEach((cache) => {\r\n            Binder.applyBinding({\r\n                elementCache: cache.bindingCache,\r\n                updateOption: updateOption,\r\n                bindingAttrs: bindingAttrs,\r\n                viewModel: viewModel,\r\n            });\r\n        });\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * createBindingOption\r\n * @param {string} condition\r\n * @param {object} opt\r\n * @description\r\n * generate binding update option object by condition\r\n * @return {object} updateOption\r\n */\r\nconst createBindingOption = (condition = '', opt = {}) => {\r\n    let visualBindingOptions = {\r\n        templateBinding: false,\r\n        textBinding: true,\r\n        cssBinding: true,\r\n        ifBinding: true,\r\n        showBinding: true,\r\n        modelBinding: true,\r\n        attrBinding: true,\r\n        forOfBinding: true,\r\n        switchBinding: true,\r\n    };\r\n    let eventsBindingOptions = {\r\n        changeBinding: true,\r\n        clickBinding: true,\r\n        dblclickBinding: true,\r\n        blurBinding: true,\r\n        focusBinding: true,\r\n        hoverBinding: true,\r\n        submitBinding: true,\r\n    };\r\n    // this is visualBindingOptions but everything false\r\n    // concrete declear for performance purpose\r\n    let serverRenderedOptions = {\r\n        templateBinding: false,\r\n        textBinding: false,\r\n        cssBinding: false,\r\n        ifBinding: false,\r\n        showBinding: false,\r\n        modelBinding: false,\r\n        attrBinding: false,\r\n        forOfBinding: false,\r\n        switchBinding: false,\r\n    };\r\n    let updateOption = {};\r\n\r\n    switch (condition) {\r\n    case config.bindingUpdateConditions.serverRendered:\r\n        updateOption = extend({}, eventsBindingOptions, serverRenderedOptions, opt);\r\n        break;\r\n    case config.bindingUpdateConditions.init:\r\n        // flag templateBinding to true to render tempalte(s)\r\n        opt.templateBinding = true;\r\n        updateOption = extend({}, visualBindingOptions, eventsBindingOptions, opt);\r\n        break;\r\n    default:\r\n        // when called again only update visualBinding options\r\n        updateOption = extend({}, visualBindingOptions, eventsBindingOptions, opt);\r\n    }\r\n\r\n    return updateOption;\r\n};\r\n\r\n/**\r\n * renderIteration\r\n * @param {object} opt\r\n * @description\r\n * render element's binding by supplied elementCache\r\n * This function is desidned for FoOf, If, switch bindings\r\n */\r\nconst renderIteration = ({elementCache, iterationVm, bindingAttrs, isRegenerate}) => {\r\n    let bindingUpdateOption = isRegenerate\r\n        ? createBindingOption(config.bindingUpdateConditions.init)\r\n        : createBindingOption();\r\n\r\n    // enforce render even element is not in DOM tree\r\n    bindingUpdateOption.forceRender = true;\r\n\r\n    // render and apply binding to template(s)\r\n    // this is an share function therefore passing current APP 'this' context\r\n    // viewModel is a dynamic generated iterationVm\r\n    renderTemplatesBinding({\r\n        ctx: iterationVm.$root ? iterationVm.$root.APP : iterationVm.APP,\r\n        elementCache: elementCache,\r\n        updateOption: bindingUpdateOption,\r\n        bindingAttrs: bindingAttrs,\r\n        viewModel: iterationVm,\r\n    });\r\n\r\n    Binder.applyBinding({\r\n        elementCache: elementCache,\r\n        updateOption: bindingUpdateOption,\r\n        bindingAttrs: bindingAttrs,\r\n        viewModel: iterationVm,\r\n    });\r\n};\r\n\r\nexport {Binder, createBindingOption, renderTemplatesBinding, renderIteration};\r\n","/* eslint-disable no-invalid-this */\r\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\n\r\n/**\r\n * blurBinding\r\n * DOM decleartive on blur event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst blurBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let handlerName = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    let handlerFn;\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n\r\n        $(cache.el)\r\n            .off('blur.databind')\r\n            .on('blur.databind', function(e) {\r\n                let args = [e, $(this)].concat(paramList);\r\n                handlerFn.apply(viewModelContext, args);\r\n            });\r\n    }\r\n};\r\n\r\nexport default blurBinding;\r\n","/* eslint-disable no-invalid-this */\r\nimport {getViewModelValue, setViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\n\r\n/**\r\n * changeBinding\r\n * @description input element on change event binding. DOM -> viewModel update\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst changeBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let handlerName = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    let modelDataKey = cache.el.getAttribute(bindingAttrs.model);\r\n    let handlerFn;\r\n    let newValue = '';\r\n    let oldValue = '';\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n\r\n        // assing on change event\r\n        $(cache.el)\r\n            .off('change.databind')\r\n            .on('change.databind', function(e) {\r\n                let $this = $(this);\r\n                let isCheckbox = $this.is(':checkbox');\r\n                newValue = isCheckbox ? $this.prop('checked') : _.escape($this.val());\r\n                // set data to viewModel\r\n                if (modelDataKey) {\r\n                    oldValue = getViewModelValue(viewModel, modelDataKey);\r\n                    setViewModelValue(viewModel, modelDataKey, newValue);\r\n                }\r\n                let args = [e, $this, newValue, oldValue].concat(paramList);\r\n                handlerFn.apply(viewModelContext, args);\r\n                oldValue = newValue;\r\n            });\r\n    }\r\n};\r\n\r\nexport default changeBinding;\r\n","/* eslint-disable no-invalid-this */\r\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\n\r\n/**\r\n * clickBinding\r\n * @description\r\n * DOM decleartive click event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst clickBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let handlerName = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    let handlerFn;\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n        $(cache.el)\r\n            .off('click.databind')\r\n            .on('click.databind', function(e) {\r\n                let args = [e, $(this)].concat(paramList);\r\n                handlerFn.apply(viewModelContext, args);\r\n            });\r\n    }\r\n};\r\n\r\nexport default clickBinding;\r\n","/* eslint-disable no-invalid-this */\r\nimport * as config from './config';\r\nimport * as util from './util';\r\n\r\nconst createClonedElementCache = (bindingData) => {\r\n    const clonedElement = bindingData.el.cloneNode(true);\r\n    bindingData.fragment = document.createDocumentFragment();\r\n    bindingData.fragment.appendChild(clonedElement);\r\n    return bindingData;\r\n};\r\n\r\nconst setCommentPrefix = (bindingData) => {\r\n    if (!bindingData || !bindingData.type) {\r\n        return;\r\n    }\r\n    let commentPrefix = '';\r\n    const dataKeyMarker = bindingData.dataKey ? bindingData.dataKey.replace(util.REGEX.WHITESPACES, '_') : '';\r\n\r\n    switch (bindingData.type) {\r\n    case config.bindingAttrs.forOf:\r\n        commentPrefix = config.commentPrefix.forOf;\r\n        break;\r\n    case config.bindingAttrs.if:\r\n        commentPrefix = config.commentPrefix.if;\r\n        break;\r\n    case config.bindingAttrs.case:\r\n        commentPrefix = config.commentPrefix.case;\r\n        break;\r\n    case config.bindingAttrs.default:\r\n        commentPrefix = config.commentPrefix.default;\r\n        break;\r\n    }\r\n    bindingData.commentPrefix = commentPrefix + dataKeyMarker;\r\n    return bindingData;\r\n};\r\n\r\n/**\r\n * setDocRangeEndAfter\r\n * @param {object} node\r\n * @param {object} bindingData\r\n * @description\r\n * recursive execution to find last wrapping comment node\r\n * and set as bindingData.docRange.setEndAfter\r\n * if not found deleteContents will has no operation\r\n * @return {undefined}\r\n */\r\nconst setDocRangeEndAfter = (node, bindingData) => {\r\n    if (!bindingData.commentPrefix) {\r\n        setCommentPrefix(bindingData);\r\n    }\r\n    let startTextContent = bindingData.commentPrefix;\r\n    let endTextContent = startTextContent + config.commentSuffix;\r\n    node = node.nextSibling;\r\n\r\n    // check last wrap comment node\r\n    if (node) {\r\n        if (node.nodeType === 8 && node.textContent === endTextContent) {\r\n            return bindingData.docRange.setEndBefore(node);\r\n        }\r\n        setDocRangeEndAfter(node, bindingData);\r\n    }\r\n};\r\n\r\n/**\r\n * wrapCommentAround\r\n * @param {object} bindingData\r\n * @param {Node} node\r\n * @return {object} DOM fragment\r\n * @description\r\n * wrap frament with comment node\r\n */\r\nconst wrapCommentAround = (bindingData, node) => {\r\n    let commentBegin;\r\n    let commentEnd;\r\n    let prefix = '';\r\n    if (!bindingData.commentPrefix) {\r\n        setCommentPrefix(bindingData);\r\n    }\r\n    prefix = bindingData.commentPrefix;\r\n    commentBegin = document.createComment(prefix);\r\n    commentEnd = document.createComment(prefix + config.commentSuffix);\r\n    // document fragment - logic for ForOf binding\r\n    if (node.nodeType === 11) {\r\n        node.insertBefore(commentBegin, node.firstChild);\r\n        node.appendChild(commentEnd);\r\n    } else {\r\n        node.parentNode.insertBefore(commentBegin, node);\r\n        util.insertAfter(node.parentNode, commentEnd, node);\r\n        // update bindingData details\r\n        bindingData.previousNonTemplateElement = node.previousSibling;\r\n        bindingData.nextNonTemplateElement = node.nextSibling;\r\n        bindingData.parentElement = node.previousSibling.parentElement;\r\n    }\r\n\r\n    return node;\r\n};\r\n\r\n/**\r\n * removeElemnetsByCommentWrap\r\n * @param {object} bindingData\r\n * @return {undefined}\r\n * @description remove elments by range\r\n */\r\nconst removeElemnetsByCommentWrap = (bindingData) => {\r\n    if (!bindingData.docRange) {\r\n        bindingData.docRange = document.createRange();\r\n    }\r\n    try {\r\n        if (bindingData.previousNonTemplateElement) {\r\n            // update docRange start and end match the wrapped comment node\r\n            bindingData.docRange.setStartBefore(bindingData.previousNonTemplateElement.nextSibling);\r\n            setDocRangeEndAfter(bindingData.previousNonTemplateElement.nextSibling, bindingData);\r\n        } else {\r\n            // insert before next non template element\r\n            bindingData.docRange.setStartBefore(bindingData.parentElement.firstChild);\r\n            setDocRangeEndAfter(bindingData.parentElement.firstChild, bindingData);\r\n        }\r\n    } catch (err) {\r\n        console.log('error removeElemnetsByCommentWrap: ', err.message);\r\n    }\r\n\r\n    return bindingData.docRange.deleteContents();\r\n};\r\n\r\n/**\r\n * removeDomTemplateElement\r\n * @param {object} bindingData\r\n * @return {object} null\r\n */\r\nconst removeDomTemplateElement = (bindingData) => {\r\n    // first render - forElement is live DOM element so has parentNode\r\n    if (bindingData.el.parentNode) {\r\n        return bindingData.el.parentNode.removeChild(bindingData.el);\r\n    }\r\n    removeElemnetsByCommentWrap(bindingData);\r\n};\r\n\r\nconst insertRenderedElements = (bindingData, fragment) => {\r\n    // insert rendered fragment after the previousNonTemplateElement\r\n    if (bindingData.previousNonTemplateElement) {\r\n        util.insertAfter(bindingData.parentElement, fragment, bindingData.previousNonTemplateElement);\r\n    } else {\r\n        // insert before next non template element\r\n        if (bindingData.nextNonTemplateElement) {\r\n            bindingData.parentElement.insertBefore(fragment, bindingData.nextNonTemplateElement);\r\n        } else if (bindingData.parentElement) {\r\n            // insert from parent\r\n            bindingData.parentElement.appendChild(fragment);\r\n        }\r\n    }\r\n};\r\n\r\nexport {\r\n    createClonedElementCache,\r\n    setCommentPrefix,\r\n    wrapCommentAround,\r\n    removeElemnetsByCommentWrap,\r\n    removeDomTemplateElement,\r\n    setDocRangeEndAfter,\r\n    insertRenderedElements,\r\n};\r\n","const bindingAttrs = {\r\n    comp: 'data-jq-comp',\r\n    tmp: 'data-jq-tmp',\r\n    text: 'data-jq-text',\r\n    click: 'data-jq-click',\r\n    dblclick: 'data-jq-dblclick',\r\n    blur: 'data-jq-blur',\r\n    focus: 'data-jq-focus',\r\n    hover: 'data-jq-hover',\r\n    change: 'data-jq-change',\r\n    submit: 'data-jq-submit',\r\n    model: 'data-jq-model',\r\n    show: 'data-jq-show',\r\n    css: 'data-jq-css',\r\n    attr: 'data-jq-attr',\r\n    forOf: 'data-jq-for',\r\n    if: 'data-jq-if',\r\n    switch: 'data-jq-switch',\r\n    case: 'data-jq-case',\r\n    default: 'data-jq-default',\r\n};\r\nconst serverRenderedAttr = 'data-server-rendered';\r\nconst dataIndexAttr = 'data-index';\r\nconst commentPrefix = {\r\n    forOf: 'data-forOf_',\r\n    if: 'data-if_',\r\n    case: 'data-case_',\r\n    default: 'data-default_',\r\n};\r\nconst commentSuffix = '_end';\r\n\r\n// global setting of underscore template inteprolate default token\r\nconst templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /\\{\\{=(.+?)\\}\\}/g,\r\n    escape: /\\{\\{(.+?)\\}\\}/g,\r\n};\r\n\r\nconst bindingDataReference = {\r\n    rootDataKey: '$root',\r\n    currentData: '$data',\r\n    currentIndex: '$index',\r\n    mouseEnterHandlerName: 'in',\r\n    mouseLeaveHandlerName: 'out',\r\n};\r\n\r\nconst bindingUpdateConditions = {\r\n    serverRendered: 'SERVER-RENDERED',\r\n    init: 'INIT',\r\n};\r\n\r\n// maximum string length before running regex\r\nconst maxDatakeyLength = 50;\r\n\r\nexport {\r\n    bindingAttrs,\r\n    dataIndexAttr,\r\n    templateSettings,\r\n    serverRenderedAttr,\r\n    commentPrefix,\r\n    commentSuffix,\r\n    bindingUpdateConditions,\r\n    bindingDataReference,\r\n    maxDatakeyLength,\r\n};\r\n","import {getViewModelPropValue, isPlainObject, arrayRemoveMatch, each} from './util';\r\n\r\n/**\r\n * cssBinding\r\n * @description\r\n * DOM decleartive css binding. update classlist.\r\n * viewModel data can function but must return JSOL.\r\n * added css class if value is true\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst cssBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let dataKey = cache.dataKey;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!dataKey || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    cache.elementData = cache.elementData || {};\r\n    cache.elementData.viewModelPropValue = cache.elementData.viewModelPropValue || '';\r\n\r\n    // let $element = $(cache.el);\r\n    let oldCssList = cache.elementData.viewModelPropValue;\r\n    let newCssList = '';\r\n    let vmCssListObj = getViewModelPropValue(viewModel, cache);\r\n    let vmCssListArray = [];\r\n    let isViewDataObject = false;\r\n    let isViewDataString = false;\r\n    let cssList = [];\r\n\r\n    if (typeof vmCssListObj === 'string') {\r\n        isViewDataString = true;\r\n    } else if (isPlainObject(vmCssListObj)) {\r\n        isViewDataObject = true;\r\n    } else {\r\n        // reject if vmCssListObj is not an object or string\r\n        return;\r\n    }\r\n\r\n    if (isViewDataObject) {\r\n        newCssList = JSON.stringify(vmCssListObj);\r\n    } else {\r\n        newCssList = vmCssListObj.replace(/\\s\\s+/g, ' ').trim();\r\n        vmCssListArray = newCssList.split(' ');\r\n    }\r\n    // reject if nothing changed\r\n    if (oldCssList === newCssList) {\r\n        return;\r\n    }\r\n\r\n    // get current css classes from element\r\n    let domCssList = cache.el.classList;\r\n    // clone domCssList as new array\r\n    let domCssListLength = domCssList.length;\r\n    for (let i = 0; i < domCssListLength; i += 1) {\r\n        cssList.push(domCssList[i]);\r\n    }\r\n\r\n    if (isViewDataObject) {\r\n        each(vmCssListObj, function(k, v) {\r\n            let i = cssList.indexOf(k);\r\n            if (v === true) {\r\n                cssList.push(k);\r\n            } else if (i !== -1) {\r\n                cssList.splice(i, 1);\r\n            }\r\n        });\r\n    } else if (isViewDataString) {\r\n        // remove oldCssList items from cssList\r\n        cssList = arrayRemoveMatch(cssList, oldCssList);\r\n        cssList = cssList.concat(vmCssListArray);\r\n    }\r\n\r\n    // unique cssList array\r\n    cssList = cssList.filter((v, i, a) => {\r\n        return a.indexOf(v) === i;\r\n    });\r\n\r\n    cssList = cssList.join(' ');\r\n    // update element data\r\n    cache.elementData.viewModelPropValue = newCssList;\r\n    // replace all css classes\r\n    cache.el.setAttribute('class', cssList);\r\n};\r\n\r\nexport default cssBinding;\r\n","/* eslint-disable no-invalid-this */\r\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\n\r\n/**\r\n * dblclickBinding\r\n * DOM decleartive double click event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst dblclickBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let handlerName = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    let handlerFn;\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n        $(cache.el)\r\n            .off('dblclick.databind')\r\n            .on('dblclick.databind', function(e) {\r\n                let args = [e, $(this)].concat(paramList);\r\n                handlerFn.apply(viewModelContext, args);\r\n            });\r\n    }\r\n};\r\n\r\nexport default dblclickBinding;\r\n","import {invertObj, getFunctionParameterList, REGEX} from './util';\r\n\r\nlet bindingAttrsMap;\r\n\r\n/**\r\n * walkDOM\r\n * @description by Douglas Crockford - walk each DOM node and calls provided callback function\r\n * start walk from firstChild\r\n * @param {object} node\r\n * @param {function} func\r\n */\r\nconst walkDOM = (node, func) => {\r\n    let parseChildNode = true;\r\n    node = node.firstElementChild;\r\n    while (node) {\r\n        parseChildNode = func(node);\r\n        if (parseChildNode) {\r\n            walkDOM(node, func);\r\n        }\r\n        node = node.nextElementSibling;\r\n    }\r\n};\r\n\r\nconst getAttributesObject = (node) => {\r\n    let ret = {};\r\n    Array.prototype.slice.call(node.attributes).forEach((item) => {\r\n        ret[item.name] = item.value;\r\n    });\r\n    return ret;\r\n};\r\n\r\nconst checkSkipChildParseBindings = (attrObj = {}, bindingAttrs) => {\r\n    return [bindingAttrs.forOf, bindingAttrs.if, bindingAttrs.case, bindingAttrs.default].filter((type) => {\r\n        return typeof attrObj[type] !== 'undefined';\r\n    });\r\n};\r\n\r\nconst rootSkipCheck = (node) => {\r\n    return node.tagName === 'SVG';\r\n};\r\n\r\nconst defaultSkipCheck = (node, bindingAttrs) => {\r\n    return node.tagName === 'SVG' || node.hasAttribute(bindingAttrs.comp);\r\n};\r\n\r\nconst populateBindingCache = ({node, attrObj, bindingCache, type}) => {\r\n    let attrValue;\r\n    let cacheData;\r\n\r\n    if (bindingAttrsMap && bindingAttrsMap[type] && typeof attrObj[type] !== 'undefined') {\r\n        bindingCache[type] = bindingCache[type] || [];\r\n        attrValue = attrObj[type].trim();\r\n        cacheData = {\r\n            el: node,\r\n            dataKey: attrValue,\r\n        };\r\n\r\n        // for store function call parameters eg. '$index', '$root'\r\n        // useful with DOM for-loop template as reference to binding data\r\n        let paramList = getFunctionParameterList(attrValue);\r\n        if (paramList) {\r\n            cacheData.parameters = paramList;\r\n            cacheData.dataKey = cacheData.dataKey.replace(REGEX.FUNCTIONPARAM, '').trim();\r\n        }\r\n\r\n        bindingCache[type].push(cacheData);\r\n    }\r\n    return bindingCache;\r\n};\r\n\r\nconst createBindingCache = ({rootNode = null, bindingAttrs = {}, skipCheck, isRenderedTemplate = false}) => {\r\n    let bindingCache = {};\r\n\r\n    if (!rootNode instanceof window.Node) {\r\n        throw new TypeError('walkDOM: Expected a DOM node');\r\n    }\r\n\r\n    bindingAttrsMap = bindingAttrsMap || invertObj(bindingAttrs);\r\n\r\n    const parseNode = (node, skipNodeCheckFn = defaultSkipCheck) => {\r\n        let attrObj;\r\n        let isSkipForOfChild = false;\r\n\r\n        if (node.nodeType !== 1 || !node.hasAttributes()) {\r\n            return true;\r\n        }\r\n        if (skipNodeCheckFn(node, bindingAttrs) || (typeof skipCheck === 'function' && skipCheck(node))) {\r\n            return false;\r\n        }\r\n\r\n        // when creating sub bindingCache if is for tmp binding\r\n        // skip same element that has forOf binding the  forOf is alredy parsed\r\n        attrObj = getAttributesObject(node);\r\n        const hasSkipChildParseBindings = checkSkipChildParseBindings(attrObj, bindingAttrs);\r\n        let iterateList = [];\r\n\r\n        if (hasSkipChildParseBindings.length) {\r\n            isSkipForOfChild = true;\r\n            iterateList = hasSkipChildParseBindings;\r\n        } else if (isRenderedTemplate && attrObj[bindingAttrs.tmp]) {\r\n            // skip current node parse if was called by node has template binding and already rendered\r\n            return true;\r\n        } else {\r\n            iterateList = Object.keys(attrObj);\r\n        }\r\n\r\n        iterateList.forEach((key) => {\r\n            // skip for switch case and default bining\r\n            if (key !== bindingAttrs.case && key !== bindingAttrs.default) {\r\n                bindingCache = populateBindingCache({\r\n                    node: node,\r\n                    attrObj: attrObj,\r\n                    bindingCache: bindingCache,\r\n                    type: key,\r\n                });\r\n            }\r\n        });\r\n\r\n        // after cache forOf skip parse child nodes\r\n        if (isSkipForOfChild) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    if (parseNode(rootNode, rootSkipCheck)) {\r\n        walkDOM(rootNode, parseNode);\r\n    }\r\n    return bindingCache;\r\n};\r\n\r\nexport default createBindingCache;\r\n","/* eslint-disable no-invalid-this */\r\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\n\r\n/**\r\n * focusBinding\r\n * DOM decleartive on focus event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst focusBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let handlerName = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    let handlerFn;\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = getViewModelValue(viewModel, handlerName);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n        $(cache.el)\r\n            .off('focus.databind')\r\n            .on('focus.databind', function(e) {\r\n                let args = [e, $(this)].concat(paramList);\r\n                handlerFn.apply(viewModelContext, args);\r\n            });\r\n    }\r\n};\r\n\r\nexport default focusBinding;\r\n","import {maxDatakeyLength} from './config';\r\nimport {REGEX} from './util';\r\nimport renderForOfBinding from './renderForOfBinding';\r\n\r\n/**\r\n * forOfBinding\r\n * @description\r\n * DOM decleartive for binding.\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst forOfBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey || dataKey.length > maxDatakeyLength) {\r\n        return;\r\n    }\r\n\r\n    if (!cache.iterator) {\r\n        if (dataKey.length > maxDatakeyLength) {\r\n            return;\r\n        }\r\n        // replace mess spaces with single space\r\n        cache.dataKey = cache.dataKey.replace(REGEX.WHITESPACES, ' ');\r\n        let forExpMatch = dataKey.match(REGEX.FOROF);\r\n\r\n        if (!forExpMatch) {\r\n            return;\r\n        }\r\n\r\n        cache.iterator = {};\r\n        cache.iterator.alias = forExpMatch[1].trim();\r\n\r\n        if (forExpMatch[2]) {\r\n            cache.iterator.dataKey = forExpMatch[2].trim();\r\n            cache.parentElement = cache.el.parentElement;\r\n            cache.previousNonTemplateElement = cache.el.previousSibling;\r\n            cache.nextNonTemplateElement = cache.el.nextSibling;\r\n        }\r\n    }\r\n\r\n    renderForOfBinding({\r\n        bindingData: cache,\r\n        viewModel: viewModel,\r\n        bindingAttrs: bindingAttrs,\r\n    });\r\n};\r\n\r\nexport default forOfBinding;\r\n","/* eslint-disable no-invalid-this */\r\nimport {bindingDataReference} from './config';\r\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\n\r\n/**\r\n * blurBinding\r\n * DOM decleartive on blur event binding\r\n * event handler bind to viewModel method according to the DOM attribute\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst hoverBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let handlerName = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    const inHandlerName = bindingDataReference.mouseEnterHandlerName;\r\n    const outHandlerName = bindingDataReference.mouseLeaveHandlerName;\r\n    let handlers;\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    cache.elementData = cache.elementData || {};\r\n\r\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    handlers = getViewModelValue(viewModel, handlerName);\r\n\r\n    if (handlers && typeof handlers[inHandlerName] === 'function' && typeof handlers[outHandlerName] === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n\r\n        $(cache.el)\r\n            .off('mouseenter.databind mouseleave.databind')\r\n            .hover(\r\n                function enter(e) {\r\n                    let args = [e, $(this)].concat(paramList);\r\n                    handlers[inHandlerName].apply(viewModelContext, args);\r\n                },\r\n                function leave(e) {\r\n                    let args = [e, $(this)].concat(paramList);\r\n                    handlers[outHandlerName].apply(viewModelContext, args);\r\n                }\r\n            );\r\n    }\r\n};\r\n\r\nexport default hoverBinding;\r\n","import {bindingAttrs as configBindingAttrs} from './config';\r\nimport {getViewModelPropValue} from './util';\r\nimport {createClonedElementCache, wrapCommentAround} from './commentWrapper';\r\nimport {renderIfBinding, removeIfBinding} from './renderIfBinding';\r\n\r\n/**\r\n * if-Binding\r\n * @description\r\n * DOM decleartive for binding.\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst ifBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    cache.elementData = cache.elementData || {};\r\n    cache.type = cache.type || configBindingAttrs.if;\r\n\r\n    let oldViewModelProValue = cache.elementData.viewModelPropValue;\r\n\r\n    // getViewModelPropValue could be return undefined or null\r\n    let viewModelPropValue = getViewModelPropValue(viewModel, cache) || false;\r\n    let shouldRender = Boolean(viewModelPropValue);\r\n\r\n    if (\r\n        oldViewModelProValue === viewModelPropValue &&\r\n        !cache.hasIterationBindingCache\r\n    ) {\r\n        return;\r\n    }\r\n\r\n    // store new show status\r\n    cache.elementData.viewModelPropValue = viewModelPropValue;\r\n\r\n    // only create fragment once\r\n    // wrap comment tag around\r\n    // remove if attribute from original element to allow later dataBind parsing\r\n    if (!cache.fragment) {\r\n        wrapCommentAround(cache, cache.el);\r\n        cache.el.removeAttribute(bindingAttrs.if);\r\n        createClonedElementCache(cache);\r\n    }\r\n\r\n    if (!shouldRender) {\r\n        // remove element\r\n        removeIfBinding(cache);\r\n    } else {\r\n        // render element\r\n        renderIfBinding({\r\n            bindingData: cache,\r\n            viewModel: viewModel,\r\n            bindingAttrs: bindingAttrs,\r\n        });\r\n    }\r\n};\r\n\r\nexport default ifBinding;\r\n","import * as config from './config';\r\nimport {Binder} from './binder';\r\n\r\nlet bindingAttrs = config.bindingAttrs;\r\nlet templateSettings = config.templateSettings;\r\n\r\nconst use = (settings = {}) => {\r\n    if (settings.bindingAttrs) {\r\n        bindingAttrs = $.extend({}, settings.bindingAttrs);\r\n    }\r\n    if (settings.templateSettings) {\r\n        templateSettings = $.extend({}, settings.templateSettings);\r\n    }\r\n};\r\n\r\nconst init = ($rootElement, viewModel = null) => {\r\n    _.templateSettings = templateSettings;\r\n    return new Binder($rootElement, viewModel, bindingAttrs);\r\n};\r\n\r\n// expose to global\r\nwindow.dataBind = {\r\n    use: use,\r\n    init: init,\r\n    version: '1.7.1',\r\n};\r\n","import {getViewModelValue} from './util';\r\n\r\n/**\r\n * modelBinding\r\n * @description input element data binding. viewModel -> DOM update\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst modelBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let dataKey = cache.dataKey;\r\n    let newValue = '';\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!dataKey || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    newValue = getViewModelValue(viewModel, dataKey);\r\n\r\n    if (typeof newValue !== 'undefined' && newValue !== null) {\r\n        let $element = $(cache.el);\r\n        let isCheckbox = $element.is(':checkbox');\r\n        let isRadio = $element.is(':radio');\r\n        let inputName = $element[0].name;\r\n        let $radioGroup = isRadio ? $('input[name=\"' + inputName + '\"]') : null;\r\n        let oldValue = isCheckbox ? $element.prop('checked') : $element.val();\r\n\r\n        // update element value\r\n        if (newValue !== oldValue) {\r\n            if (isCheckbox) {\r\n                $element.prop('checked', Boolean(newValue));\r\n            } else if (isRadio) {\r\n                $radioGroup.val([newValue]);\r\n            } else {\r\n                $element.val(newValue);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default modelBinding;\r\n","import * as util from './util';\r\n\r\n/**\r\n *  pubSub\r\n * @description use jQuery object as pubSub\r\n * @example EVENTS object strucure:\r\n *  EVENTS = {\r\n        'EVENT-NAME': [{ 'comp-id': fn }],\r\n        'EVENT-NAME2': [{ 'comp-id': fn }]\r\n    };\r\n */\r\n\r\nlet EVENTS = {};\r\n\r\nconst subscribeEvent = (instance = null, eventName = '', fn, isOnce = false) => {\r\n    if (!instance || !instance.compId || !eventName || typeof fn !== 'function') {\r\n        return;\r\n    }\r\n\r\n    let subscriber;\r\n    let isSubscribed = false;\r\n\r\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\r\n    EVENTS[eventName] = EVENTS[eventName] || [];\r\n    // check if already subscribed and update callback fn\r\n    isSubscribed = EVENTS[eventName].some((subscriber) => {\r\n        if (subscriber[instance.compId]) {\r\n            subscriber[instance.compId] = fn.bind(instance.viewModel);\r\n            subscriber.isOnce = isOnce;\r\n            return true;\r\n        }\r\n    });\r\n    // push if not yet subscribe\r\n    if (!isSubscribed) {\r\n        subscriber = {};\r\n        subscriber[instance.compId] = fn.bind(instance.viewModel);\r\n        subscriber.isOnce = isOnce;\r\n        EVENTS[eventName].push(subscriber);\r\n    }\r\n};\r\n\r\nconst subscribeEventOnce = (instance = null, eventName = '', fn) => {\r\n    subscribeEvent(instance, eventName, fn, true);\r\n};\r\n\r\nconst unsubscribeEvent = (compId = '', eventName = '') => {\r\n    if (!compId || !eventName) {\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    let subscribersLength = 0;\r\n    let subscriber;\r\n\r\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\r\n\r\n    if (EVENTS[eventName]) {\r\n        subscribersLength = EVENTS[eventName].length;\r\n        for (i = 0; i < subscribersLength; i += 1) {\r\n            subscriber = EVENTS[eventName][i];\r\n            if (subscriber[compId]) {\r\n                EVENTS[eventName].splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // delete the event if no more subscriber\r\n    if (!EVENTS[eventName].length) {\r\n        delete EVENTS[eventName];\r\n    }\r\n};\r\n\r\n/**\r\n * unsubscribeAllEvent\r\n * @description unsubscribe all event by compId. eg when a component removed\r\n * @param {string} compId\r\n */\r\nconst unsubscribeAllEvent = (compId = '') => {\r\n    if (!compId) {\r\n        return;\r\n    }\r\n    Object.keys(EVENTS).forEach((eventName) => {\r\n        unsubscribeEvent(compId, eventName);\r\n    });\r\n};\r\n\r\nconst publishEvent = (eventName = '', ...args) => {\r\n    if (!eventName || !EVENTS[eventName]) {\r\n        return;\r\n    }\r\n\r\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\r\n\r\n    EVENTS[eventName].forEach((subscriber) => {\r\n        Object.keys(subscriber).forEach((compId) => {\r\n            if (typeof subscriber[compId] === 'function') {\r\n                let ret = subscriber[compId](...args);\r\n                if (subscriber.isOnce) {\r\n                    unsubscribeEvent(compId, eventName);\r\n                }\r\n                return ret;\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nexport {subscribeEvent, subscribeEventOnce, unsubscribeEvent, unsubscribeAllEvent, publishEvent};\r\n","/* eslint-disable no-invalid-this */\r\nimport {bindingAttrs as configBindingAttrs, bindingDataReference} from './config';\r\nimport {getViewModelValue, isArray, isPlainObject, throwErrorMessage, cloneDomNode, isEmptyObject} from './util';\r\nimport createBindingCache from './domWalker';\r\nimport {renderIteration} from './binder';\r\nimport {wrapCommentAround, removeElemnetsByCommentWrap, insertRenderedElements} from './commentWrapper';\r\n\r\nconst renderForOfBinding = ({bindingData, viewModel, bindingAttrs}) => {\r\n    if (!bindingData || !viewModel || !bindingAttrs) {\r\n        return;\r\n    }\r\n    let keys;\r\n    let iterationDataLength;\r\n    let iterationData = getViewModelValue(viewModel, bindingData.iterator.dataKey);\r\n    let isRegenerate = false;\r\n\r\n    // check iterationData and set iterationDataLength\r\n    if (isArray(iterationData)) {\r\n        iterationDataLength = iterationData.length;\r\n    } else if (isPlainObject(iterationData)) {\r\n        keys = Object.keys(iterationData);\r\n        iterationDataLength = keys.length;\r\n    } else {\r\n        // throw error but let script contince to run\r\n        return throwErrorMessage(null, 'iterationData is not an plain object or array');\r\n    }\r\n\r\n    // flag as pared for-of logic with bindingData.type\r\n    if (!bindingData.type) {\r\n        bindingData.type = configBindingAttrs.forOf;\r\n        wrapCommentAround(bindingData, bindingData.el);\r\n    }\r\n\r\n    // assign forOf internal id to bindingData once\r\n    if (typeof bindingData.iterationSize === 'undefined') {\r\n        // store iterationDataLength\r\n        bindingData.iterationSize = iterationDataLength;\r\n        // remove orignal node for-of attributes\r\n        bindingData.el.removeAttribute(bindingAttrs.forOf);\r\n        isRegenerate = true;\r\n    } else {\r\n        // only regenerate cache if iterationDataLength changed\r\n        isRegenerate = bindingData.iterationSize !== iterationDataLength;\r\n        // update iterationSize\r\n        bindingData.iterationSize = iterationDataLength;\r\n    }\r\n\r\n    if (!isRegenerate) {\r\n        bindingData.iterationBindingCache.forEach(function(elementCache, i) {\r\n            if (!isEmptyObject(elementCache)) {\r\n                let iterationVm = createIterationViewModel({\r\n                    bindingData: bindingData,\r\n                    viewModel: viewModel,\r\n                    iterationData: iterationData,\r\n                    keys: keys,\r\n                    index: i,\r\n                });\r\n                renderIteration({\r\n                    elementCache: elementCache,\r\n                    iterationVm: iterationVm,\r\n                    bindingAttrs: bindingAttrs,\r\n                    isRegenerate: false,\r\n                });\r\n            }\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    // generate forOfBinding elements into fragment\r\n    let fragment = generateForOfElements(bindingData, viewModel, bindingAttrs, iterationData, keys);\r\n\r\n    removeElemnetsByCommentWrap(bindingData);\r\n\r\n    // insert fragment content into DOM\r\n    return insertRenderedElements(bindingData, fragment);\r\n};\r\n\r\nconst createIterationViewModel = ({bindingData, viewModel, iterationData, keys, index}) => {\r\n    let iterationVm = {};\r\n    iterationVm[bindingData.iterator.alias] = keys ? iterationData[keys[index]] : iterationData[index];\r\n    // populate common binding data reference\r\n    iterationVm[bindingDataReference.rootDataKey] = viewModel.$root || viewModel;\r\n    iterationVm[bindingDataReference.currentData] = iterationVm[bindingData.iterator.alias];\r\n    iterationVm[bindingDataReference.currentIndex] = index;\r\n    return iterationVm;\r\n};\r\n\r\nconst generateForOfElements = (bindingData, viewModel, bindingAttrs, iterationData, keys) => {\r\n    let fragment = document.createDocumentFragment();\r\n    let iterationDataLength = bindingData.iterationSize;\r\n    let clonedItem;\r\n    let iterationVm;\r\n    let iterationBindingCache;\r\n    let i = 0;\r\n\r\n    // create or clear exisitng iterationBindingCache\r\n    if (isArray(bindingData.iterationBindingCache)) {\r\n        bindingData.iterationBindingCache.length = 0;\r\n    } else {\r\n        bindingData.iterationBindingCache = [];\r\n    }\r\n\r\n    // generate forOf and append to DOM\r\n    for (i = 0; i < iterationDataLength; i += 1) {\r\n        clonedItem = cloneDomNode(bindingData.el);\r\n\r\n        // create bindingCache per iteration\r\n        iterationBindingCache = createBindingCache({\r\n            rootNode: clonedItem,\r\n            bindingAttrs: bindingAttrs,\r\n        });\r\n\r\n        bindingData.iterationBindingCache.push(iterationBindingCache);\r\n\r\n        if (!isEmptyObject(iterationBindingCache)) {\r\n            // create an iterationVm match iterator alias\r\n            iterationVm = createIterationViewModel({\r\n                bindingData: bindingData,\r\n                viewModel: viewModel,\r\n                iterationData: iterationData,\r\n                keys: keys,\r\n                index: i,\r\n            });\r\n\r\n            renderIteration({\r\n                elementCache: bindingData.iterationBindingCache[i],\r\n                iterationVm: iterationVm,\r\n                bindingAttrs: bindingAttrs,\r\n                isRegenerate: true,\r\n            });\r\n        }\r\n\r\n        fragment.appendChild(clonedItem);\r\n    }\r\n\r\n    return fragment;\r\n};\r\n\r\nexport default renderForOfBinding;\r\n","import {isEmptyObject} from './util';\r\nimport {renderIteration} from './binder';\r\nimport createBindingCache from './domWalker';\r\nimport {commentSuffix} from './config';\r\nimport {removeElemnetsByCommentWrap, insertRenderedElements} from './commentWrapper';\r\n\r\n/**\r\n * isTargetDomRemoved\r\n * @description check if DOM between 'start' and 'end' comment tag has been removed\r\n * @param {object} bindingData\r\n * @return {boolean}\r\n */\r\nconst isTargetDomRemoved = (bindingData) => {\r\n    let ret = false;\r\n    if (bindingData && bindingData.previousNonTemplateElement) {\r\n        let commentStartTextContent = bindingData.previousNonTemplateElement.textContent;\r\n        let endCommentTag = bindingData.previousNonTemplateElement.nextSibling;\r\n\r\n        if (endCommentTag.nodeType === 8) {\r\n            if (endCommentTag.textContent === commentStartTextContent + commentSuffix) {\r\n                ret = true;\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nconst renderIfBinding = ({bindingData, viewModel, bindingAttrs}) => {\r\n    if (!bindingData.fragment) {\r\n        return;\r\n    }\r\n\r\n    const isDomRemoved = isTargetDomRemoved(bindingData);\r\n    // use fragment for create iterationBindingCache\r\n    const rootElement = bindingData.fragment.firstChild.cloneNode(true);\r\n\r\n    // remove current old DOM.\r\n    if (!isDomRemoved) {\r\n        removeIfBinding(bindingData);\r\n    }\r\n\r\n    // walk clonedElement to create iterationBindingCache\r\n    if (!bindingData.iterationBindingCache || !bindingData.hasIterationBindingCache) {\r\n        bindingData.iterationBindingCache = createBindingCache({\r\n            rootNode: rootElement,\r\n            bindingAttrs: bindingAttrs,\r\n        });\r\n    }\r\n\r\n    // only render if has iterationBindingCache\r\n    // means has other dataBindings to be render\r\n    if (!isEmptyObject(bindingData.iterationBindingCache)) {\r\n        bindingData.hasIterationBindingCache = true;\r\n        renderIteration({\r\n            elementCache: bindingData.iterationBindingCache,\r\n            iterationVm: viewModel,\r\n            bindingAttrs: bindingAttrs,\r\n            isRegenerate: true,\r\n        });\r\n    }\r\n\r\n    // insert to new rendered DOM\r\n    insertRenderedElements(bindingData, rootElement);\r\n};\r\n\r\nconst removeIfBinding = (bindingData) => {\r\n    removeElemnetsByCommentWrap(bindingData);\r\n    // remove cache.IterationBindingCache to prevent memory leak\r\n    if (bindingData.hasIterationBindingCache) {\r\n        bindingData.iterationBindingCache = {};\r\n        bindingData.hasIterationBindingCache = false;\r\n    }\r\n};\r\n\r\nexport {renderIfBinding, removeIfBinding};\r\n","import {dataIndexAttr} from './config';\r\nimport {parseStringToJson, getViewModelValue} from './util';\r\n\r\nlet $domFragment = null;\r\nlet $templateRoot = null;\r\nlet nestTemplatesCount = 0;\r\nlet templateCache = {};\r\n\r\n/**\r\n * compileTemplate\r\n * @description compile underscore template and store in templateCache\r\n * @param {string} id\r\n * @param {object} templateData\r\n * @return {string} rendered html string\r\n */\r\nconst compileTemplate = (id, templateData = null) => {\r\n    let templateString;\r\n    let templateElement;\r\n\r\n    if (!templateCache[id]) {\r\n        templateElement = document.getElementById(id);\r\n        templateString = templateElement ? templateElement.innerHTML : '';\r\n        templateCache[id] = _.template(templateString, {\r\n            variable: 'data',\r\n        });\r\n    }\r\n\r\n    return templateCache[id](templateData);\r\n};\r\n\r\n/**\r\n * renderTemplate\r\n * @description\r\n * get template setting from DOM attribute then call compileTemplate\r\n * to render and append to target DOM\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {object} elementCache\r\n */\r\nconst renderTemplate = (cache, viewModel, bindingAttrs, elementCache) => {\r\n    let settings = parseStringToJson(cache.dataKey);\r\n    let viewData = settings.data;\r\n    let isAppend = settings.append;\r\n    let isPrepend = settings.prepend;\r\n    let html;\r\n    let $element;\r\n    let $index;\r\n    let $currentElement;\r\n    let $nestedTemplates;\r\n\r\n    if (typeof viewData === 'undefined' || viewData === '$root') {\r\n        viewData = viewModel;\r\n    } else {\r\n        viewData = getViewModelValue(viewModel, settings.data);\r\n    }\r\n\r\n    if (!viewData) {\r\n        return;\r\n    }\r\n\r\n    $element = $(cache.el);\r\n    $index = typeof viewModel.$index !== 'undefined' ? viewModel.$index : $element.attr(dataIndexAttr);\r\n    if (typeof $index !== 'undefined') {\r\n        viewData.$index = $index;\r\n    }\r\n    $domFragment = $domFragment ? $domFragment : $('<div/>');\r\n    $templateRoot = $templateRoot ? $templateRoot : $element;\r\n    html = compileTemplate(settings.id, viewData);\r\n\r\n    // domFragment should be empty in first run\r\n    // append rendered html\r\n    if (!$domFragment.children().length) {\r\n        $currentElement = $domFragment;\r\n        $domFragment.append(html);\r\n    } else {\r\n        $currentElement = $element;\r\n        $currentElement.append(html);\r\n    }\r\n\r\n    // check if there are nested template then recurisive render them\r\n    $nestedTemplates = $currentElement.find('[' + bindingAttrs.tmp + ']');\r\n\r\n    if ($nestedTemplates.length) {\r\n        nestTemplatesCount += $nestedTemplates.length;\r\n        $nestedTemplates.each(function(index, element) {\r\n            let thisTemplateCache = {\r\n                el: element,\r\n                dataKey: element.getAttribute(bindingAttrs.tmp),\r\n            };\r\n            elementCache[bindingAttrs.tmp].push(thisTemplateCache);\r\n            // recursive template render\r\n            renderTemplate(thisTemplateCache, viewModel, bindingAttrs, elementCache);\r\n            nestTemplatesCount -= 1;\r\n        });\r\n    }\r\n\r\n    // no more nested tempalted to render, start to append $domFragment into $templateRoot\r\n    if (nestTemplatesCount === 0) {\r\n        // append to DOM once\r\n        if (!isAppend && !isPrepend) {\r\n            $templateRoot.empty();\r\n        }\r\n        if (isPrepend) {\r\n            $templateRoot.prepend($domFragment.html());\r\n        } else {\r\n            $templateRoot.append($domFragment.html());\r\n        }\r\n        // clear cached fragment\r\n        $domFragment = $templateRoot = null;\r\n        // trigger callback if provided\r\n        if (typeof viewModel.afterTemplateRender === 'function') {\r\n            viewModel.afterTemplateRender(viewData);\r\n        }\r\n    }\r\n};\r\n\r\nexport default renderTemplate;\r\n","import {getViewModelPropValue} from './util';\r\n\r\n/**\r\n * showBinding\r\n * @description\r\n * DOM decleartive show binding. Make binding show/hide according to viewModel data (boolean)\r\n * viewModel data can function but must return boolean\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst showBinding = (cache, viewModel, bindingAttrs) => {\r\n    const dataKey = cache.dataKey;\r\n    let currentInlineSytle = {};\r\n    let currentInlineDisplaySytle = '';\r\n    let shouldShow = true;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    cache.elementData = cache.elementData || {};\r\n\r\n    let oldShowStatus = cache.elementData.viewModelPropValue;\r\n\r\n    // store current element display default style once only\r\n    if (\r\n        typeof cache.elementData.displayStyle === 'undefined' ||\r\n        typeof cache.elementData.computedStyle === 'undefined'\r\n    ) {\r\n        currentInlineSytle = cache.el.style;\r\n        currentInlineDisplaySytle = currentInlineSytle.display;\r\n        // use current inline style if defined\r\n        if (currentInlineDisplaySytle) {\r\n            // set to 'block' if is 'none'\r\n            cache.elementData.displayStyle = currentInlineDisplaySytle === 'none' ? 'block' : currentInlineDisplaySytle;\r\n            cache.elementData.computedStyle = null;\r\n        } else {\r\n            let computeStyle = window.getComputedStyle(cache.el, null).getPropertyValue('display');\r\n            cache.elementData.displayStyle = null;\r\n            cache.elementData.computedStyle = computeStyle;\r\n        }\r\n    }\r\n\r\n    shouldShow = getViewModelPropValue(viewModel, cache);\r\n\r\n    // treat undefined || null as false.\r\n    // eg if property doesn't exsits in viewModel, it will treat as false to hide element\r\n    shouldShow = Boolean(shouldShow);\r\n\r\n    // reject if nothing changed\r\n    if (oldShowStatus === shouldShow) {\r\n        return;\r\n    }\r\n\r\n    if (!shouldShow) {\r\n        if (cache.el.style.display !== 'none') {\r\n            cache.el.style.setProperty('display', 'none');\r\n        }\r\n    } else {\r\n        if (cache.elementData.computedStyle || cache.el.style.display === 'none') {\r\n            if (cache.elementData.computedStyle === 'none') {\r\n                // default display is none in css rule, so use display 'block'\r\n                cache.el.style.setProperty('display', 'block');\r\n            } else {\r\n                // has default displayable type so just remove inline display 'none'\r\n                if (currentInlineSytle.length > 1) {\r\n                    cache.el.style.removeProperty('display');\r\n                } else {\r\n                    cache.el.removeAttribute('style');\r\n                }\r\n            }\r\n        } else {\r\n            // element default display was inline style, so restore it\r\n            cache.el.style.setProperty('display', cache.elementData.displayStyle);\r\n        }\r\n    }\r\n\r\n    // store new show status\r\n    cache.elementData.viewModelPropValue = shouldShow;\r\n};\r\n\r\nexport default showBinding;\r\n","import {getViewModelValue, resolveViewModelContext, resolveParamList, getFormData} from './util';\r\n\r\n/**\r\n * submitBinding\r\n * @description on form submit binding. pass current form data as json object to handler\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst submitBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let handlerName = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    let handlerFn;\r\n    let $element;\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    if (!handlerName || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    handlerFn = getViewModelValue(viewModel, handlerName);\r\n    $element = $(cache.el);\r\n\r\n    if (typeof handlerFn === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n        // assing on change event\r\n        $element.off('submit.databind').on('submit.databind', function(e) {\r\n            let args = [e, $element, getFormData($element)].concat(paramList);\r\n            handlerFn.apply(viewModelContext, args);\r\n        });\r\n    }\r\n};\r\n\r\nexport default submitBinding;\r\n","import {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\nimport {createClonedElementCache, wrapCommentAround} from './commentWrapper';\r\nimport {renderIfBinding, removeIfBinding} from './renderIfBinding';\r\n/**\r\n * switch-Binding\r\n * @description\r\n * DOM decleartive switch binding.\r\n * switch parent element wrap direct child with case bindings\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n */\r\nconst switchBinding = (cache, viewModel, bindingAttrs) => {\r\n    let dataKey = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n\r\n    if (!dataKey) {\r\n        return;\r\n    }\r\n\r\n    cache.elementData = cache.elementData || {};\r\n\r\n    let newExpression = getViewModelValue(viewModel, dataKey);\r\n    if (typeof newExpression === 'function') {\r\n        let viewModelContext = resolveViewModelContext(viewModel, newExpression);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n        let args = paramList.slice(0);\r\n        newExpression = newExpression.apply(viewModelContext, args);\r\n    }\r\n\r\n    if (newExpression === cache.elementData.expression) {\r\n        return;\r\n    }\r\n\r\n    cache.elementData.expression = newExpression;\r\n\r\n    // build switch cases if not yet defined\r\n    if (!cache.cases) {\r\n        let childrenElements = cache.el.children;\r\n        if (!childrenElements.length) {\r\n            return;\r\n        }\r\n        cache.cases = [];\r\n        for (let i = 0, elementLength = childrenElements.length; i < elementLength; i += 1) {\r\n            let caseData = null;\r\n            if (childrenElements[i].hasAttribute(bindingAttrs.case)) {\r\n                caseData = createCaseData(childrenElements[i], bindingAttrs.case);\r\n            } else if (childrenElements[i].hasAttribute(bindingAttrs.default)) {\r\n                caseData = createCaseData(childrenElements[i], bindingAttrs.default);\r\n                caseData.isDefault = true;\r\n            }\r\n            // create fragment by clone node\r\n            // wrap with comment tag\r\n            if (caseData) {\r\n                wrapCommentAround(caseData, caseData.el);\r\n                // remove binding attribute for later dataBind parse\r\n                if (caseData.isDefault) {\r\n                    caseData.el.removeAttribute(bindingAttrs.default);\r\n                } else {\r\n                    caseData.el.removeAttribute(bindingAttrs.case);\r\n                }\r\n                createClonedElementCache(caseData);\r\n                cache.cases.push(caseData);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (cache.cases.length) {\r\n        let hasMatch = false;\r\n        // do switch operation - reuse if binding logic\r\n        for (let j = 0, casesLength = cache.cases.length; j < casesLength; j += 1) {\r\n            let newCaseValue;\r\n            if (cache.cases[j].dataKey) {\r\n                newCaseValue = getViewModelValue(viewModel, cache.cases[j].dataKey);\r\n                if (typeof newCaseValue === 'function') {\r\n                    let viewModelContext = resolveViewModelContext(viewModel, newCaseValue);\r\n                    let paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n                    let args = paramList.slice(0);\r\n                    newCaseValue = newCaseValue.apply(viewModelContext, args);\r\n                }\r\n                // set back to dataKey if nothing found in viewModel\r\n                newCaseValue = newCaseValue || cache.cases[j].dataKey;\r\n            }\r\n\r\n            if (newCaseValue === cache.elementData.expression || cache.cases[j].isDefault) {\r\n                hasMatch = true;\r\n                // render element\r\n                renderIfBinding({\r\n                    bindingData: cache.cases[j],\r\n                    viewModel: viewModel,\r\n                    bindingAttrs: bindingAttrs,\r\n                });\r\n\r\n                // remove other elements\r\n                removeUnmatchCases(cache.cases, j);\r\n                break;\r\n            }\r\n        }\r\n        // no match remove all cases\r\n        if (!hasMatch) {\r\n            removeUnmatchCases(cache.cases);\r\n        }\r\n    }\r\n};\r\n\r\nfunction removeUnmatchCases(cases, matchedIndex) {\r\n    cases.forEach((caseData, index) => {\r\n        if (index !== matchedIndex || typeof matchedIndex === 'undefined') {\r\n            removeIfBinding(caseData);\r\n            // remove cache.IterationBindingCache to prevent memory leak\r\n            if (caseData.hasIterationBindingCache) {\r\n                caseData.iterationBindingCache = null;\r\n                caseData.hasIterationBindingCache = false;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction createCaseData(node, attrName) {\r\n    let caseData = {\r\n        el: node,\r\n        dataKey: node.getAttribute(attrName),\r\n        type: attrName,\r\n    };\r\n    return caseData;\r\n}\r\n\r\nexport default switchBinding;\r\n","import {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\r\n\r\n/**\r\n * textBinding\r\n * * @description\r\n * DOM decleartive text binding update dom textnode with viewModel data\r\n * @param {object} cache\r\n * @param {object} viewModel\r\n * @param {object} bindingAttrs\r\n * @param {boolean} forceRender\r\n */\r\nconst textBinding = (cache, viewModel, bindingAttrs, forceRender) => {\r\n    let dataKey = cache.dataKey;\r\n    let paramList = cache.parameters;\r\n    let viewModelContext;\r\n    let APP = viewModel.APP || viewModel.$root.APP;\r\n\r\n    // NOTE: this doesn't work for for-of, if and switch bindings because element was not in DOM\r\n    if (!dataKey || (!forceRender && !APP.$rootElement.contains(cache.el))) {\r\n        return;\r\n    }\r\n\r\n    let newValue = getViewModelValue(viewModel, dataKey);\r\n    if (typeof newValue === 'function') {\r\n        viewModelContext = resolveViewModelContext(viewModel, newValue);\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n        let args = paramList.slice(0);\r\n        newValue = newValue.apply(viewModelContext, args);\r\n    }\r\n    let oldValue = cache.el.textContent;\r\n\r\n    if (typeof newValue !== 'undefined' && typeof newValue !== 'object' && newValue !== null) {\r\n        if (newValue !== oldValue) {\r\n            cache.el.textContent = newValue;\r\n        }\r\n    }\r\n};\r\n\r\nexport default textBinding;\r\n","import * as config from './config';\r\n\r\n// require to use lodash\r\n_ = window._ || {};\r\n\r\nconst hasIsArray = Array.isArray;\r\n\r\nconst REGEX = {\r\n    FUNCTIONPARAM: /\\((.*?)\\)/,\r\n    WHITESPACES: /\\s+/g,\r\n    FOROF: /(.*?)\\s+(?:in|of)\\s+(.*)/,\r\n};\r\n\r\nconst generateElementCache = (bindingAttrs) => {\r\n    let elementCache = {};\r\n    $.each(bindingAttrs, function(k, v) {\r\n        elementCache[v] = [];\r\n    });\r\n    return elementCache;\r\n};\r\n\r\nconst isArray = (obj) => {\r\n    return hasIsArray ? Array.isArray(obj) : Object.prototype.toString.call(obj) === '[object Array]';\r\n};\r\n\r\nconst isJsObject = (obj) => {\r\n    return obj !== null && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]';\r\n};\r\n\r\nconst isPlainObject = (obj) => {\r\n    let ctor;\r\n    let prot;\r\n\r\n    if (!isJsObject(obj)) {\r\n        return false;\r\n    }\r\n\r\n    // If has modified constructor\r\n    ctor = obj.constructor;\r\n    if (typeof ctor !== 'function') return false;\r\n\r\n    // If has modified prototype\r\n    prot = ctor.prototype;\r\n    if (isJsObject(prot) === false) return false;\r\n\r\n    // If constructor does not have an Object-specific method\r\n    if (prot.hasOwnProperty('isPrototypeOf') === false) {\r\n        return false;\r\n    }\r\n\r\n    // Most likely a plain Object\r\n    return true;\r\n};\r\n\r\nconst isEmptyObject = (obj) => {\r\n    if (isJsObject(obj)) {\r\n        return Object.getOwnPropertyNames(obj).length === 0;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * getViewModelValue\r\n * @description walk a object by provided string path. eg 'a.b.c'\r\n * @param {object} obj\r\n * @param {string} prop\r\n * @return {object}\r\n */\r\nconst getViewModelValue = (obj, prop) => {\r\n    return _.get(obj, prop);\r\n};\r\n\r\n/**\r\n * setViewModelValue\r\n * @description populate viewModel object by path string\r\n * @param {object} obj\r\n * @param {string} prop\r\n * @param {string} value\r\n * @return {call} underscore set\r\n */\r\nconst setViewModelValue = (obj, prop, value) => {\r\n    return _.set(obj, prop, value);\r\n};\r\n\r\nconst getViewModelPropValue = (viewModel, bindingCache) => {\r\n    let dataKey = bindingCache.dataKey;\r\n    let paramList = bindingCache.parameters;\r\n    let isInvertBoolean = dataKey.charAt(0) === '!';\r\n\r\n    if (isInvertBoolean) {\r\n        dataKey = isInvertBoolean ? dataKey.substring(1) : dataKey;\r\n    }\r\n\r\n    let ret = getViewModelValue(viewModel, dataKey);\r\n\r\n    if (typeof ret === 'function') {\r\n        let viewModelContext = resolveViewModelContext(viewModel, dataKey);\r\n        let oldViewModelProValue = bindingCache.elementData ? bindingCache.elementData.viewModelProValue : null;\r\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\r\n        // let args = [oldViewModelProValue, bindingCache.el].concat(paramList);\r\n        let args = paramList.concat([oldViewModelProValue, bindingCache.el]);\r\n        ret = ret.apply(viewModelContext, args);\r\n    }\r\n\r\n    if (typeof ret === 'undefined' || ret === null) {\r\n        return ret;\r\n    }\r\n\r\n    if ((isInvertBoolean && typeof ret === 'string' && ret === 'true') || ret === 'false') {\r\n        ret = JSON.parse(ret);\r\n    }\r\n\r\n    return isInvertBoolean && typeof ret === 'boolean' ? !ret : ret;\r\n};\r\n\r\nconst parseStringToJson = (str) => {\r\n    // fix unquote or single quote keys and replace single quote to double quote\r\n    let ret = str.replace(/(\\s*?{\\s*?|\\s*?,\\s*?)(['\"])?([a-zA-Z0-9]+)(['\"])?:/g, '$1\"$3\":').replace(/'/g, '\"');\r\n    return JSON.parse(ret);\r\n};\r\n\r\n/**\r\n * arrayRemoveMatch\r\n * @description remove match items in fromArray out of toArray\r\n * @param {array} toArray\r\n * @param {array} frommArray\r\n * @return {boolean}\r\n */\r\nconst arrayRemoveMatch = (toArray, frommArray) => {\r\n    return toArray.filter((value, index) => {\r\n        return frommArray.indexOf(value) < 0;\r\n    });\r\n};\r\n\r\nconst getFormData = ($form) => {\r\n    let sArray = $form.serializeArray();\r\n    let data = {};\r\n\r\n    sArray.map((n) => {\r\n        data[n['name']] = n['value'];\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\n/**\r\n * getFunctionParameterList\r\n * @description convert parameter string to arrary\r\n * eg. '(\"a\",\"b\",\"c\")' > [\"a\",\"b\",\"c\"]\r\n * @param {string} str\r\n * @return {array} paramlist\r\n */\r\nconst getFunctionParameterList = (str) => {\r\n    if (!str || str.length > config.maxDatakeyLength) {\r\n        return;\r\n    }\r\n    let paramlist = str.match(REGEX.FUNCTIONPARAM);\r\n\r\n    if (paramlist && paramlist[1]) {\r\n        paramlist = paramlist[1].split(',');\r\n        paramlist.forEach(function(v, i) {\r\n            paramlist[i] = v.trim();\r\n        });\r\n    }\r\n    return paramlist;\r\n};\r\n\r\nconst invertObj = (sourceObj) => {\r\n    return Object.keys(sourceObj).reduce(function(obj, key) {\r\n        obj[sourceObj[key]] = key;\r\n        return obj;\r\n    }, {});\r\n};\r\n\r\n/**\r\n * debounce\r\n * @description decorate a function to be debounce using requestAnimationFrame\r\n * @param {function} fn\r\n * @param {context} ctx\r\n * @return {function}\r\n */\r\nconst debounceRaf = (fn, ctx = null) => {\r\n    return (function(fn, ctx) {\r\n        let dfObj = $.Deferred(); // eslint-disable-line new-cap\r\n        let rafId = 0;\r\n\r\n        // return decorated fn\r\n        return function() {\r\n            let args;\r\n            /* eslint-disable prefer-rest-params */\r\n            args = Array.from ? Array.from(arguments) : Array.prototype.slice.call(arguments);\r\n\r\n            window.cancelAnimationFrame(rafId);\r\n            rafId = window.requestAnimationFrame(() => {\r\n                $.when(fn.apply(ctx, args)).then(\r\n                    dfObj.resolve.apply(ctx, arguments),\r\n                    dfObj.reject.apply(ctx, arguments),\r\n                    dfObj.notify.apply(ctx, arguments)\r\n                );\r\n                dfObj = $.Deferred(); // eslint-disable-line new-cap\r\n            });\r\n            /* eslint-enable prefer-rest-params */\r\n            return dfObj.promise();\r\n        };\r\n    })(fn, ctx);\r\n};\r\n\r\n/**\r\n * getNodeAttrObj\r\n * @description convert Node attributes object to a json object\r\n * @param {object} node\r\n * @param {array} skipList\r\n * @return {object}\r\n */\r\nconst getNodeAttrObj = (node, skipList) => {\r\n    let attrObj;\r\n    let attributesLength = 0;\r\n    let skipArray;\r\n\r\n    if (!node || node.nodeType !== 1 || !node.hasAttributes()) {\r\n        return attrObj;\r\n    }\r\n    if (skipList) {\r\n        skipArray = [];\r\n        skipArray = typeof skipList === 'string' ? skipArray.push(skipList) : skipList;\r\n    }\r\n    attrObj = {};\r\n    attributesLength = node.attributes.length;\r\n\r\n    if (attributesLength) {\r\n        for (let i = 0; i < attributesLength; i += 1) {\r\n            let attribute = node.attributes.item(i);\r\n            attrObj[attribute.nodeName] = attribute.nodeValue;\r\n        }\r\n    }\r\n\r\n    if (isArray(skipArray)) {\r\n        skipArray.forEach((item) => {\r\n            if (attrObj[item]) {\r\n                delete attrObj[item];\r\n            }\r\n        });\r\n    }\r\n    return attrObj;\r\n};\r\n\r\n/**\r\n * extend\r\n * @param {boolean} isDeepMerge\r\n * @param {object} target\r\n * @param {object} sources\r\n * @return {object} merged object\r\n */\r\nconst extend = (isDeepMerge = false, target, ...sources) => {\r\n    if (!sources.length) {\r\n        return target;\r\n    }\r\n    const source = sources.shift();\r\n    if (source === undefined) {\r\n        return target;\r\n    }\r\n\r\n    if (!isDeepMerge) {\r\n        return Object.assign(target, ...sources);\r\n    }\r\n\r\n    if (isMergebleObject(target) && isMergebleObject(source)) {\r\n        Object.keys(source).forEach((key) => {\r\n            if (isMergebleObject(source[key])) {\r\n                if (!target[key]) {\r\n                    target[key] = {};\r\n                }\r\n                extend(target[key], source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        });\r\n    }\r\n\r\n    return extend(true, target, ...sources);\r\n};\r\n\r\nconst each = (obj, fn) => {\r\n    if (typeof obj !== 'object' || typeof fn !== 'function') {\r\n        return;\r\n    }\r\n    let keys = [];\r\n    let keysLength = 0;\r\n    let isArrayObj = isArray(obj);\r\n    let key;\r\n    let value;\r\n    let i = 0;\r\n\r\n    if (isArrayObj) {\r\n        keysLength = obj.length;\r\n    } else if (isJsObject(obj)) {\r\n        keys = Object.keys(obj);\r\n        keysLength = keys.length;\r\n    } else {\r\n        throw new TypeError('Object is not an array or object');\r\n    }\r\n\r\n    for (i = 0; i < keysLength; i += 1) {\r\n        if (isArrayObj) {\r\n            key = i;\r\n            value = obj[i];\r\n        } else {\r\n            key = keys[i];\r\n            value = obj[key];\r\n        }\r\n        fn(key, value);\r\n    }\r\n};\r\n\r\nconst isMergebleObject = (item) => {\r\n    return isJsObject(item) && !isArray(item);\r\n};\r\n\r\n/**\r\n * cloneDomNode\r\n * @param {object} element\r\n * @return {object} cloned element\r\n * @description helper function to clone node\r\n */\r\nconst cloneDomNode = (element) => {\r\n    return element.cloneNode(true);\r\n};\r\n\r\n/**\r\n * insertAfter\r\n * @param {object} parentNode\r\n * @param {object} newNode\r\n * @param {object} referenceNode\r\n * @return {object} node\r\n * @description helper function to insert new node before the reference node\r\n */\r\nconst insertAfter = (parentNode, newNode, referenceNode) => {\r\n    let refNextElement = referenceNode && referenceNode.nextSibling ? referenceNode.nextSibling : null;\r\n    return parentNode.insertBefore(newNode, refNextElement);\r\n};\r\n\r\nconst resolveViewModelContext = (viewModel, datakey) => {\r\n    let ret = viewModel;\r\n    let bindingDataContext;\r\n    if (typeof datakey !== 'string') {\r\n        return ret;\r\n    }\r\n    bindingDataContext = datakey.split('.');\r\n    if (bindingDataContext.length > 1) {\r\n        if (bindingDataContext[0] === config.bindingDataReference.rootDataKey) {\r\n            ret = viewModel[config.bindingDataReference.rootDataKey] || viewModel;\r\n        } else if (bindingDataContext[0] === config.bindingDataReference.currentData) {\r\n            ret = viewModel[config.bindingDataReference.currentData] || viewModel;\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nconst resolveParamList = (viewModel, paramList) => {\r\n    if (!viewModel || !isArray(paramList)) {\r\n        return;\r\n    }\r\n    return paramList.map((param) => {\r\n        param = param.trim();\r\n\r\n        if (param === config.bindingDataReference.currentIndex) {\r\n            // convert '$index' to value\r\n            param = viewModel[config.bindingDataReference.currentIndex];\r\n        } else if (param === config.bindingDataReference.currentData) {\r\n            // convert '$data' to value or current viewModel\r\n            param = viewModel[config.bindingDataReference.currentData] || viewModel;\r\n        } else if (param === config.bindingDataReference.rootDataKey) {\r\n            // convert '$root' to root viewModel\r\n            param = viewModel[config.bindingDataReference.rootDataKey] || viewModel;\r\n        }\r\n        return param;\r\n    });\r\n};\r\n\r\nconst throwErrorMessage = (err = null, errorMessage = '') => {\r\n    let message = err && err.message ? err.message : errorMessage;\r\n    if (typeof console.error === 'function') {\r\n        return console.error(message);\r\n    }\r\n    return console.log(message);\r\n};\r\n\r\nexport {\r\n    REGEX,\r\n    arrayRemoveMatch,\r\n    cloneDomNode,\r\n    debounceRaf,\r\n    each,\r\n    extend,\r\n    generateElementCache,\r\n    getFormData,\r\n    getFunctionParameterList,\r\n    getNodeAttrObj,\r\n    getViewModelPropValue,\r\n    getViewModelValue,\r\n    insertAfter,\r\n    invertObj,\r\n    isArray,\r\n    isEmptyObject,\r\n    isJsObject,\r\n    isPlainObject,\r\n    parseStringToJson,\r\n    resolveParamList,\r\n    resolveViewModelContext,\r\n    setViewModelValue,\r\n    throwErrorMessage,\r\n};\r\n"]}