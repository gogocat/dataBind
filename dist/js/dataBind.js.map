{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/attrBinding.js","src/binder.js","src/blurBinding.js","src/changeBinding.js","src/clickBinding.js","src/commentWrapper.js","src/config.js","src/cssBinding.js","src/dbclickBinding.js","src/domWalker.js","src/focusBinding.js","src/forOfBinding.js","src/ifBinding.js","src/index.js","src/modelBinding.js","src/pubSub.js","src/renderForOfBinding.js","src/renderIfBinding.js","src/renderTemplate.js","src/showBinding.js","src/submitBinding.js","src/switchBinding.js","src/textBinding.js","src/util.js"],"names":[],"mappings":"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","file":"dataBind.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {getViewModelPropValue, isPlainObject, isEmptyObject} from './util';\n\n/**\n * attrBinding\n * @description\n * DOM decleartive attr binding. update elenment attributes\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst attrBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n    cache.elementData.viewModelProValue = cache.elementData.viewModelProValue || {};\n\n    const oldAttrObj = cache.elementData.viewModelProValue;\n    const vmAttrObj = getViewModelPropValue(viewModel, cache);\n\n    if (!isPlainObject(vmAttrObj) || isEmptyObject(vmAttrObj)) {\n        // reject if vmAttrListObj is not an object or empty\n        return;\n    }\n\n    // reject if nothing changed\n    if (JSON.stringify(oldAttrObj) === JSON.stringify(vmAttrObj)) {\n        return;\n    }\n\n    // get current DOM element attributes object\n    // let domAttrObj = util.getNodeAttrObj(cache.el, [bindingAttrs.attr]);\n\n    if (isEmptyObject(oldAttrObj)) {\n        for (let key in vmAttrObj) {\n            if (vmAttrObj.hasOwnProperty(key)) {\n                cache.el.setAttribute(key, vmAttrObj[key]);\n            }\n        }\n    } else {\n        for (let key in oldAttrObj) {\n            if (oldAttrObj.hasOwnProperty(key)) {\n                if (vmAttrObj[key] === undefined) {\n                    // remove attribute if not present in current vm\n                    cache.el.removeAttribute(key);\n                }\n            }\n        }\n        for (let key in vmAttrObj) {\n            if (vmAttrObj.hasOwnProperty(key)) {\n                if (oldAttrObj[key] !== vmAttrObj[key]) {\n                    // update attribute if value changed\n                    cache.el.setAttribute(key, vmAttrObj[key]);\n                }\n            }\n        }\n    }\n    // update element data\n    cache.elementData.viewModelProValue = vmAttrObj;\n};\n\nexport default attrBinding;\n","import * as config from './config';\nimport {debounceRaf, extend} from './util';\nimport renderTemplate from './renderTemplate';\nimport clickBinding from './clickBinding';\nimport dblclickBinding from './dbclickBinding';\nimport blurBinding from './blurBinding';\nimport focusBinding from './focusBinding';\nimport changeBinding from './changeBinding';\nimport modelBinding from './modelBinding';\nimport submitBinding from './submitBinding';\nimport textBinding from './textBinding';\nimport showBinding from './showBinding';\nimport cssBinding from './cssBinding';\nimport attrBinding from './attrBinding';\nimport forOfBinding from './forOfBinding';\nimport ifBinding from './ifBinding';\nimport switchBinding from './switchBinding';\nimport createBindingCache from './domWalker';\nimport * as pubSub from './pubSub';\n\nlet compIdIndex = 0;\nconst rootDataKey = config.bindingDataReference.rootDataKey;\n\nclass Binder {\n    constructor($rootElement, viewModel, bindingAttrs) {\n        if (\n            !$rootElement instanceof jQuery ||\n            !$rootElement.length ||\n            viewModel === null ||\n            typeof viewModel !== 'object'\n        ) {\n            throw new TypeError('$rootElement or viewModel is invalid');\n        }\n\n        this.initRendered = false;\n\n        this.compId = compIdIndex += 1;\n\n        this.$rootElement = $rootElement.eq(0);\n\n        this.viewModel = viewModel;\n\n        this.bindingAttrs = bindingAttrs;\n\n        this.render = debounceRaf(this.render, this);\n\n        this.isServerRendered = typeof this.$rootElement.attr(config.serverRenderedAttr) !== 'undefined';\n\n        // inject instance into viewModel\n        this.viewModel.APP = this;\n\n        this.viewModel.$root = this.viewModel;\n\n        this.parseView();\n\n        return this;\n    }\n\n    /**\n     * parseView\n     * @description\n     * @return {this}\n     * traver from $rootElement to find each data-bind-* element\n     * then apply data binding\n     */\n    parseView() {\n        // store viewModel data as $root for easy access\n        this.$rootElement.data(rootDataKey, this.viewModel);\n\n        this.elementCache = createBindingCache({\n            rootNode: this.$rootElement[0],\n            bindingAttrs: this.bindingAttrs,\n        });\n\n        // updateElementCache if server rendered on init\n        if (this.isServerRendered && !this.initRendered) {\n            this.updateElementCache({\n                templateCache: true,\n            });\n        }\n        return this;\n    }\n\n    /**\n     * updateElementCache\n     * @param {object} opt\n     * @description call createBindingCache to parse view and generate bindingCache\n     */\n    updateElementCache(opt = {}) {\n        let elementCache = opt.elementCache || this.elementCache;\n\n        if (opt.allCache) {\n            // walk dom from root element to regenerate elementCache\n            this.elementCache = createBindingCache({\n                rootNode: this.$rootElement[0],\n                bindingAttrs: this.bindingAttrs,\n            });\n        }\n        // walk from first rendered template node to create/update child bindingCache\n        if (opt.allCache || opt.templateCache) {\n            if (elementCache[this.bindingAttrs.tmp] && elementCache[this.bindingAttrs.tmp].length) {\n                elementCache[this.bindingAttrs.tmp].forEach((cache) => {\n                    // set skipCheck as skipForOfParseFn whenever an node has\n                    // both template and forOf bindings\n                    // then the template bindingCache should be an empty object\n                    let skipForOfParseFn = null;\n                    if (cache.el.hasAttribute(this.bindingAttrs.forOf)) {\n                        skipForOfParseFn = () => {\n                            return true;\n                        };\n                    }\n                    cache.bindingCache = createBindingCache({\n                        rootNode: cache.el,\n                        bindingAttrs: this.bindingAttrs,\n                        skipCheck: skipForOfParseFn,\n                    });\n                });\n            }\n        }\n    }\n\n    render(opt = {}) {\n        let updateOption = {};\n        if (!this.initRendered) {\n            // only update eventsBinding if server rendered\n            if (this.isServerRendered) {\n                this.$rootElement.removeAttr(config.serverRenderedAttr);\n                updateOption = createBindingOption(config.bindingUpdateConditions.serverRendered, opt);\n            } else {\n                updateOption = createBindingOption(config.bindingUpdateConditions.init, opt);\n            }\n        } else {\n            // when called again only update visualBinding options\n            updateOption = createBindingOption('', opt);\n        }\n\n        // render and apply binding to template(s)\n        // this is an share function therefore passing 'this' context\n        renderTemplatesBinding({\n            ctx: this,\n            elementCache: this.elementCache,\n            updateOption: updateOption,\n            bindingAttrs: this.bindingAttrs,\n            viewModel: this.viewModel,\n        });\n\n        // apply bindings to rest of the DOM\n        Binder.applyBinding({\n            elementCache: this.elementCache,\n            updateOption: updateOption,\n            bindingAttrs: this.bindingAttrs,\n            viewModel: this.viewModel,\n        });\n\n        this.initRendered = true;\n    }\n\n    static applyBinding({elementCache, updateOption, bindingAttrs, viewModel}) {\n        if (!elementCache || !updateOption) {\n            return;\n        }\n\n        // the follow binding should be in order for better efficiency\n\n        // apply forOf Binding\n        if (updateOption.forOfBinding && elementCache[bindingAttrs.forOf] && elementCache[bindingAttrs.forOf].length) {\n            elementCache[bindingAttrs.forOf].forEach((cache) => {\n                forOfBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply attr Binding\n        if (updateOption.attrBinding && elementCache[bindingAttrs.attr] && elementCache[bindingAttrs.attr].length) {\n            elementCache[bindingAttrs.attr].forEach((cache) => {\n                attrBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply if Binding\n        if (updateOption.ifBinding && elementCache[bindingAttrs.if] && elementCache[bindingAttrs.if].length) {\n            elementCache[bindingAttrs.if].forEach((cache) => {\n                ifBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply show Binding\n        if (updateOption.showBinding && elementCache[bindingAttrs.show] && elementCache[bindingAttrs.show].length) {\n            elementCache[bindingAttrs.show].forEach((cache) => {\n                showBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply switch Binding\n        if (\n            updateOption.switchBinding &&\n            elementCache[bindingAttrs.switch] &&\n            elementCache[bindingAttrs.switch].length\n        ) {\n            elementCache[bindingAttrs.switch].forEach((cache) => {\n                switchBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply text binding\n        if (updateOption.textBinding && elementCache[bindingAttrs.text] && elementCache[bindingAttrs.text].length) {\n            elementCache[bindingAttrs.text].forEach((cache) => {\n                textBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply cssBinding\n        if (updateOption.cssBinding && elementCache[bindingAttrs.css] && elementCache[bindingAttrs.css].length) {\n            elementCache[bindingAttrs.css].forEach((cache) => {\n                cssBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply model binding\n        if (updateOption.modelBinding && elementCache[bindingAttrs.model] && elementCache[bindingAttrs.model].length) {\n            elementCache[bindingAttrs.model].forEach((cache) => {\n                modelBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply change binding\n        if (\n            updateOption.changeBinding &&\n            elementCache[bindingAttrs.change] &&\n            elementCache[bindingAttrs.change].length\n        ) {\n            elementCache[bindingAttrs.change].forEach((cache) => {\n                changeBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply submit binding\n        if (\n            updateOption.submitBinding &&\n            elementCache[bindingAttrs.submit] &&\n            elementCache[bindingAttrs.submit].length\n        ) {\n            elementCache[bindingAttrs.submit].forEach((cache) => {\n                submitBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply click binding\n        if (updateOption.clickBinding && elementCache[bindingAttrs.click] && elementCache[bindingAttrs.click].length) {\n            elementCache[bindingAttrs.click].forEach((cache) => {\n                clickBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply double click binding\n        if (\n            updateOption.dblclickBinding &&\n            elementCache[bindingAttrs.dblclick] &&\n            elementCache[bindingAttrs.dblclick].length\n        ) {\n            elementCache[bindingAttrs.dblclick].forEach((cache) => {\n                dblclickBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply blur binding\n        if (updateOption.blurBinding && elementCache[bindingAttrs.blur] && elementCache[bindingAttrs.blur].length) {\n            elementCache[bindingAttrs.blur].forEach((cache) => {\n                blurBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n\n        // apply focus binding\n        if (updateOption.focus && elementCache[bindingAttrs.focus] && elementCache[bindingAttrs.focus].length) {\n            elementCache[bindingAttrs.focus].forEach((cache) => {\n                focusBinding(cache, viewModel, bindingAttrs);\n            });\n        }\n    }\n\n    subscribe(eventName = '', fn) {\n        pubSub.subscribeEvent(this, eventName, fn);\n        return this;\n    }\n\n    subscribeOnce(eventName = '', fn) {\n        pubSub.subscribeEventOnce(this, eventName, fn);\n        return this;\n    }\n\n    unsubscribe(eventName = '') {\n        pubSub.unsubscribeEvent(this.compId, eventName);\n        return this;\n    }\n\n    unsubscribeAll() {\n        pubSub.unsubscribeAllEvent(this.compId);\n        return this;\n    }\n\n    publish(eventName = '', ...args) {\n        pubSub.publishEvent(eventName, ...args);\n        return this;\n    }\n}\n\nconst renderTemplatesBinding = ({ctx, elementCache, updateOption, bindingAttrs, viewModel}) => {\n    if (!elementCache || !bindingAttrs) {\n        return false;\n    }\n    // render and apply binding to template(s) and forOf DOM\n    if (elementCache[bindingAttrs.tmp] && elementCache[bindingAttrs.tmp].length) {\n        // when re-render call with {templateBinding: true}\n        // template and nested templates\n        if (updateOption.templateBinding) {\n            // overwrite updateOption with 'init' bindingUpdateConditions\n            updateOption = createBindingOption(config.bindingUpdateConditions.init);\n\n            elementCache[bindingAttrs.tmp].forEach(($element) => {\n                renderTemplate($element, viewModel, bindingAttrs, elementCache);\n            });\n            // update cache after all template(s) rendered\n            ctx.updateElementCache({\n                templateCache: true,\n                elementCache: elementCache,\n            });\n        }\n        // apply bindings to rendered templates element\n        elementCache[bindingAttrs.tmp].forEach((cache) => {\n            Binder.applyBinding({\n                elementCache: cache.bindingCache,\n                updateOption: updateOption,\n                bindingAttrs: bindingAttrs,\n                viewModel: viewModel,\n            });\n        });\n    }\n    return true;\n};\n\n/**\n * createBindingOption\n * @param {string} condition\n * @param {object} opt\n * @description\n * generate binding update option object by condition\n * @return {object} updateOption\n */\nconst createBindingOption = (condition = '', opt = {}) => {\n    let visualBindingOptions = {\n        templateBinding: false,\n        textBinding: true,\n        cssBinding: true,\n        ifBinding: true,\n        showBinding: true,\n        modelBinding: true,\n        attrBinding: true,\n        forOfBinding: true,\n        switchBinding: true,\n    };\n    let eventsBindingOptions = {\n        changeBinding: true,\n        clickBinding: true,\n        dblclickBinding: true,\n        blurBinding: true,\n        focusBinding: true,\n        submitBinding: true,\n    };\n    // this is visualBindingOptions but everything false\n    // concrete declear for performance purpose\n    let serverRenderedOptions = {\n        templateBinding: false,\n        textBinding: false,\n        cssBinding: false,\n        ifBinding: false,\n        showBinding: false,\n        modelBinding: false,\n        attrBinding: false,\n        forOfBinding: false,\n        switchBinding: false,\n    };\n    let updateOption = {};\n\n    switch (condition) {\n    case config.bindingUpdateConditions.serverRendered:\n        updateOption = extend({}, eventsBindingOptions, serverRenderedOptions, opt);\n        break;\n    case config.bindingUpdateConditions.init:\n        // flag templateBinding to true to render tempalte(s)\n        opt.templateBinding = true;\n        updateOption = extend({}, visualBindingOptions, eventsBindingOptions, opt);\n        break;\n    default:\n        // when called again only update visualBinding options\n        updateOption = extend({}, visualBindingOptions, opt);\n    }\n\n    return updateOption;\n};\n\n/**\n * renderIteration\n * @param {object} opt\n * @description\n * render element's binding by supplied elementCache\n * This function is desidned for FoOf, If, switch bindings\n */\nconst renderIteration = ({elementCache, iterationVm, bindingAttrs, isRegenerate}) => {\n    let bindingUpdateOption = isRegenerate\n        ? createBindingOption(config.bindingUpdateConditions.init)\n        : createBindingOption();\n\n    // render and apply binding to template(s)\n    // this is an share function therefore passing current APP 'this' context\n    // viewModel is a dynamic generated iterationVm\n    renderTemplatesBinding({\n        ctx: iterationVm.$root ? iterationVm.$root.APP : iterationVm.APP,\n        elementCache: elementCache,\n        updateOption: bindingUpdateOption,\n        bindingAttrs: bindingAttrs,\n        viewModel: iterationVm,\n    });\n\n    Binder.applyBinding({\n        elementCache: elementCache,\n        updateOption: bindingUpdateOption,\n        bindingAttrs: bindingAttrs,\n        viewModel: iterationVm,\n    });\n};\n\nexport {Binder, createBindingOption, renderTemplatesBinding, renderIteration};\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * blurBinding\n * DOM decleartive on blur event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst blurBinding = (cache, viewModel, bindingAttrs) => {\n    let handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let handlerFn;\n    let viewModelContext;\n\n    if (!handlerName) {\n        return;\n    }\n\n    handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n\n        $(cache.el)\n            .off('blur.databind')\n            .on('blur.databind', function(e) {\n                let args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default blurBinding;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, setViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * changeBinding\n * @description input element on change event binding. DOM -> viewModel update\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst changeBinding = (cache, viewModel, bindingAttrs) => {\n    let handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let modelDataKey = cache.el.getAttribute(bindingAttrs.model);\n    let handlerFn;\n    let newValue;\n    let oldValue;\n    let viewModelContext;\n\n    if (!handlerName) {\n        return;\n    }\n\n    handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n\n        // assing on change event\n        $(cache.el)\n            .off('change.databind')\n            .on('change.databind', function(e) {\n                let $this = $(this);\n                let isCheckbox = $this.is(':checkbox');\n                newValue = isCheckbox ? $this.prop('checked') : _.escape($this.val());\n                // set data to viewModel\n                if (modelDataKey) {\n                    oldValue = getViewModelValue(viewModel, modelDataKey);\n                    setViewModelValue(viewModel, modelDataKey, newValue);\n                }\n                let args = [e, $this, newValue, oldValue].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n                oldValue = newValue;\n            });\n    }\n};\n\nexport default changeBinding;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * clickBinding\n * @description\n * DOM decleartive click event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst clickBinding = (cache, viewModel, bindingAttrs) => {\n    let handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let handlerFn;\n    let viewModelContext;\n\n    if (!handlerName) {\n        return;\n    }\n\n    handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el)\n            .off('click.databind')\n            .on('click.databind', function(e) {\n                let args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default clickBinding;\n","/* eslint-disable no-invalid-this */\nimport * as config from './config';\nimport * as util from './util';\n\nconst createClonedElementCache = (bindingData) => {\n    const clonedElement = bindingData.el.cloneNode(true);\n    bindingData.fragment = document.createDocumentFragment();\n    bindingData.fragment.appendChild(clonedElement);\n    return bindingData;\n};\n\nconst setCommentPrefix = (bindingData) => {\n    if (!bindingData || !bindingData.type) {\n        return;\n    }\n    let commentPrefix = '';\n    const dataKeyMarker = bindingData.dataKey ? bindingData.dataKey.replace(util.REGEX.WHITESPACES, '_') : '';\n\n    switch (bindingData.type) {\n    case config.bindingAttrs.forOf:\n        commentPrefix = config.commentPrefix.forOf;\n        break;\n    case config.bindingAttrs.if:\n        commentPrefix = config.commentPrefix.if;\n        break;\n    case config.bindingAttrs.case:\n        commentPrefix = config.commentPrefix.case;\n        break;\n    case config.bindingAttrs.default:\n        commentPrefix = config.commentPrefix.default;\n        break;\n    }\n    bindingData.commentPrefix = commentPrefix + dataKeyMarker;\n    return bindingData;\n};\n\n/**\n * setDocRangeEndAfter\n * @param {object} node\n * @param {object} bindingData\n * @description\n * recursive execution to find last wrapping comment node\n * and set as bindingData.docRange.setEndAfter\n * if not found deleteContents will has no operation\n * @return {undefined}\n */\nconst setDocRangeEndAfter = (node, bindingData) => {\n    if (!bindingData.commentPrefix) {\n        setCommentPrefix(bindingData);\n    }\n    let startTextContent = bindingData.commentPrefix;\n    let endTextContent = startTextContent + config.commentSuffix;\n    node = node.nextSibling;\n\n    // check last wrap comment node\n    if (node) {\n        if (node.nodeType === 8 && node.textContent === endTextContent) {\n            return bindingData.docRange.setEndBefore(node);\n        }\n        setDocRangeEndAfter(node, bindingData);\n    }\n};\n\n/**\n * wrapCommentAround\n * @param {object} bindingData\n * @param {Node} node\n * @return {object} DOM fragment\n * @description\n * wrap frament with comment node\n */\nconst wrapCommentAround = (bindingData, node) => {\n    let commentBegin;\n    let commentEnd;\n    let prefix = '';\n    if (!bindingData.commentPrefix) {\n        setCommentPrefix(bindingData);\n    }\n    prefix = bindingData.commentPrefix;\n    commentBegin = document.createComment(prefix);\n    commentEnd = document.createComment(prefix + config.commentSuffix);\n    // document fragment - logic for ForOf binding\n    if (node.nodeType === 11) {\n        node.insertBefore(commentBegin, node.firstChild);\n        node.appendChild(commentEnd);\n    } else {\n        node.parentNode.insertBefore(commentBegin, node);\n        util.insertAfter(node.parentNode, commentEnd, node);\n        // update bindingData details\n        bindingData.previousNonTemplateElement = node.previousSibling;\n        bindingData.nextNonTemplateElement = node.nextSibling;\n        bindingData.parentElement = node.previousSibling.parentElement;\n    }\n\n    return node;\n};\n\n/**\n * removeElemnetsByCommentWrap\n * @param {object} bindingData\n * @return {undefined}\n * @description remove elments by range\n */\nconst removeElemnetsByCommentWrap = (bindingData) => {\n    if (!bindingData.docRange) {\n        bindingData.docRange = document.createRange();\n    }\n    try {\n        if (bindingData.previousNonTemplateElement) {\n            // update docRange start and end match the wrapped comment node\n            bindingData.docRange.setStartBefore(bindingData.previousNonTemplateElement.nextSibling);\n            setDocRangeEndAfter(bindingData.previousNonTemplateElement.nextSibling, bindingData);\n        } else {\n            // insert before next non template element\n            bindingData.docRange.setStartBefore(bindingData.parentElement.firstChild);\n            setDocRangeEndAfter(bindingData.parentElement.firstChild, bindingData);\n        }\n    } catch (err) {\n        console.log('error removeElemnetsByCommentWrap: ', err.message);\n    }\n\n    return bindingData.docRange.deleteContents();\n};\n\n/**\n * removeDomTemplateElement\n * @param {object} bindingData\n * @return {object} null\n */\nconst removeDomTemplateElement = (bindingData) => {\n    // first render - forElement is live DOM element so has parentNode\n    if (bindingData.el.parentNode) {\n        return bindingData.el.parentNode.removeChild(bindingData.el);\n    }\n    removeElemnetsByCommentWrap(bindingData);\n};\n\nconst insertRenderedElements = (bindingData, fragment) => {\n    // insert rendered fragment after the previousNonTemplateElement\n    if (bindingData.previousNonTemplateElement) {\n        util.insertAfter(bindingData.parentElement, fragment, bindingData.previousNonTemplateElement);\n    } else {\n        // insert before next non template element\n        if (bindingData.nextNonTemplateElement) {\n            bindingData.parentElement.insertBefore(fragment, bindingData.nextNonTemplateElement);\n        } else if (bindingData.parentElement) {\n            // insert from parent\n            bindingData.parentElement.appendChild(fragment);\n        }\n    }\n};\n\nexport {\n    createClonedElementCache,\n    setCommentPrefix,\n    wrapCommentAround,\n    removeElemnetsByCommentWrap,\n    removeDomTemplateElement,\n    setDocRangeEndAfter,\n    insertRenderedElements,\n};\n","const bindingAttrs = {\n    comp: 'data-jq-comp',\n    tmp: 'data-jq-tmp',\n    text: 'data-jq-text',\n    click: 'data-jq-click',\n    dblclick: 'data-jq-dblclick',\n    blur: 'data-jq-blur',\n    focus: 'data-jq-focus',\n    change: 'data-jq-change',\n    submit: 'data-jq-submit',\n    model: 'data-jq-model',\n    show: 'data-jq-show',\n    css: 'data-jq-css',\n    attr: 'data-jq-attr',\n    forOf: 'data-jq-for',\n    if: 'data-jq-if',\n    switch: 'data-jq-switch',\n    case: 'data-jq-case',\n    default: 'data-jq-default',\n};\nconst serverRenderedAttr = 'data-server-rendered';\nconst dataIndexAttr = 'data-index';\nconst commentPrefix = {\n    forOf: 'data-forOf_',\n    if: 'data-if_',\n    case: 'data-case_',\n    default: 'data-default_',\n};\nconst commentSuffix = '_end';\n\n// global setting of underscore template inteprolate default token\nconst templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /\\{\\{=(.+?)\\}\\}/g,\n    escape: /\\{\\{(.+?)\\}\\}/g,\n};\n\nconst bindingDataReference = {\n    rootDataKey: '$root',\n    currentData: '$data',\n    currentIndex: '$index',\n};\n\nconst bindingUpdateConditions = {\n    serverRendered: 'SERVER-RENDERED',\n    init: 'INIT',\n};\n\n// maximum string length before running regex\nconst maxDatakeyLength = 50;\n\nexport {\n    bindingAttrs,\n    dataIndexAttr,\n    templateSettings,\n    serverRenderedAttr,\n    commentPrefix,\n    commentSuffix,\n    bindingUpdateConditions,\n    bindingDataReference,\n    maxDatakeyLength,\n};\n","import {getViewModelPropValue, isPlainObject, arrayRemoveMatch, each} from './util';\n\n/**\n * cssBinding\n * @description\n * DOM decleartive css binding. update classlist.\n * viewModel data can function but must return JSOL.\n * added css class if value is true\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst cssBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n    cache.elementData.viewModelPropValue = cache.elementData.viewModelPropValue || '';\n\n    // let $element = $(cache.el);\n    let oldCssList = cache.elementData.viewModelPropValue;\n    let newCssList = '';\n    let vmCssListObj = getViewModelPropValue(viewModel, cache);\n    let vmCssListArray;\n    let isViewDataObject = false;\n    let isViewDataString = false;\n    let domCssList;\n    let cssList = [];\n\n    if (typeof vmCssListObj === 'string') {\n        isViewDataString = true;\n    } else if (isPlainObject(vmCssListObj)) {\n        isViewDataObject = true;\n    } else {\n        // reject if vmCssListObj is not an object or string\n        return;\n    }\n\n    if (isViewDataObject) {\n        newCssList = JSON.stringify(vmCssListObj);\n    } else {\n        newCssList = vmCssListObj.replace(/\\s\\s+/g, ' ').trim();\n        vmCssListArray = newCssList.split(' ');\n    }\n    // reject if nothing changed\n    if (oldCssList === newCssList) {\n        return;\n    }\n\n    // get current css classes from element\n    domCssList = cache.el.classList;\n    // clone domCssList as new array\n    let domCssListLength = domCssList.length;\n    for (let i = 0; i < domCssListLength; i += 1) {\n        cssList.push(domCssList[i]);\n    }\n\n    if (isViewDataObject) {\n        each(vmCssListObj, function(k, v) {\n            let i = cssList.indexOf(k);\n            if (v === true) {\n                cssList.push(k);\n            } else if (i !== -1) {\n                cssList.splice(i, 1);\n            }\n        });\n    } else if (isViewDataString) {\n        // remove oldCssList items from cssList\n        cssList = arrayRemoveMatch(cssList, oldCssList);\n        cssList = cssList.concat(vmCssListArray);\n    }\n\n    // unique cssList array\n    cssList = _.uniq(cssList).join(' ');\n    // replace all css classes\n    // TODO: this is the slowness part. Try only update changed css in the classList\n    // rather than replace the whole class attribute\n    cache.el.setAttribute('class', cssList);\n    // update element data\n    cache.elementData.viewModelPropValue = newCssList;\n};\n\nexport default cssBinding;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * dblclickBinding\n * DOM decleartive double click event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst dblclickBinding = (cache, viewModel, bindingAttrs) => {\n    let handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let handlerFn;\n    let viewModelContext;\n\n    if (!handlerName) {\n        return;\n    }\n\n    handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el)\n            .off('dblclick.databind')\n            .on('dblclick.databind', function(e) {\n                let args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default dblclickBinding;\n","import {invertObj, getFunctionParameterList, REGEX} from './util';\n\nlet bindingAttrsMap;\n\n/**\n * walkDOM\n * @description by Douglas Crockford - walk each DOM node and calls provided callback function\n * start walk from firstChild\n * @param {object} node\n * @param {function} func\n */\nconst walkDOM = (node, func) => {\n    let parseChildNode = true;\n    node = node.firstElementChild;\n    while (node) {\n        parseChildNode = func(node);\n        if (parseChildNode) {\n            walkDOM(node, func);\n        }\n        node = node.nextElementSibling;\n    }\n};\n\nconst getAttributesObject = (node) => {\n    let ret = {};\n    Array.prototype.slice.call(node.attributes).forEach((item) => {\n        ret[item.name] = item.value;\n    });\n    return ret;\n};\n\nconst checkSkipChildParseBindings = (attrObj = {}, bindingAttrs) => {\n    return [bindingAttrs.forOf, bindingAttrs.if, bindingAttrs.case, bindingAttrs.default].filter((type) => {\n        return typeof attrObj[type] !== 'undefined';\n    });\n};\n\nconst rootSkipCheck = (node) => {\n    return node.tagName === 'SVG';\n};\n\nconst defaultSkipCheck = (node, bindingAttrs) => {\n    return node.tagName === 'SVG' || node.hasAttribute(bindingAttrs.comp);\n};\n\nconst populateBindingCache = ({node, attrObj, bindingCache, type}) => {\n    let attrValue;\n    let cacheData;\n\n    if (bindingAttrsMap && bindingAttrsMap[type] && typeof attrObj[type] !== 'undefined') {\n        bindingCache[type] = bindingCache[type] || [];\n        attrValue = attrObj[type].trim();\n        cacheData = {\n            el: node,\n            dataKey: attrValue,\n        };\n\n        // for store function call parameters eg. '$index', '$root'\n        // useful with DOM for-loop template as reference to binding data\n        let paramList = getFunctionParameterList(attrValue);\n        if (paramList) {\n            cacheData.parameters = paramList;\n            cacheData.dataKey = cacheData.dataKey.replace(REGEX.FUNCTIONPARAM, '').trim();\n        }\n\n        bindingCache[type].push(cacheData);\n    }\n    return bindingCache;\n};\n\nconst createBindingCache = ({rootNode = null, bindingAttrs = {}, skipCheck}) => {\n    let bindingCache = {};\n\n    if (!rootNode instanceof window.Node) {\n        throw new TypeError('walkDOM: Expected a DOM node');\n    }\n\n    bindingAttrsMap = bindingAttrsMap || invertObj(bindingAttrs);\n\n    const parseNode = (node, skipNodeCheckFn = defaultSkipCheck) => {\n        let attrObj;\n        let isSkipForOfChild = false;\n\n        if (node.nodeType !== 1 || !node.hasAttributes()) {\n            return true;\n        }\n        if (skipNodeCheckFn(node, bindingAttrs) || (typeof skipCheck === 'function' && skipCheck(node))) {\n            return false;\n        }\n\n        // when creating sub bindingCache if is for tmp binding\n        // skip same element that has forOf binding the  forOf is alredy parsed\n        attrObj = getAttributesObject(node);\n        const hasSkipChildParseBindings = checkSkipChildParseBindings(attrObj, bindingAttrs);\n        let iterateList = Object.keys(attrObj);\n\n        if (hasSkipChildParseBindings.length) {\n            isSkipForOfChild = true;\n            iterateList = hasSkipChildParseBindings;\n        }\n\n        iterateList.forEach((key) => {\n            // skip for switch case and default bining\n            if (key !== bindingAttrs.case && key !== bindingAttrs.default) {\n                bindingCache = populateBindingCache({\n                    node: node,\n                    attrObj: attrObj,\n                    bindingCache: bindingCache,\n                    type: key,\n                });\n            }\n        });\n\n        // after cache forOf skip parse child nodes\n        if (isSkipForOfChild) {\n            return false;\n        }\n\n        return true;\n    };\n\n    if (parseNode(rootNode, rootSkipCheck)) {\n        walkDOM(rootNode, parseNode);\n    }\n    return bindingCache;\n};\n\nexport default createBindingCache;\n","/* eslint-disable no-invalid-this */\nimport {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * focusBinding\n * DOM decleartive on focus event binding\n * event handler bind to viewModel method according to the DOM attribute\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst focusBinding = (cache, viewModel, bindingAttrs) => {\n    let handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let handlerFn;\n    let viewModelContext;\n\n    if (!handlerName) {\n        return;\n    }\n\n    handlerFn = getViewModelValue(viewModel, handlerName);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el)\n            .off('focus.databind')\n            .on('focus.databind', function(e) {\n                let args = [e, $(this)].concat(paramList);\n                handlerFn.apply(viewModelContext, args);\n            });\n    }\n};\n\nexport default focusBinding;\n","import {maxDatakeyLength} from './config';\nimport {REGEX} from './util';\nimport renderForOfBinding from './renderForOfBinding';\n\n/**\n * forOfBinding\n * @description\n * DOM decleartive for binding.\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst forOfBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n\n    if (!dataKey || dataKey.length > maxDatakeyLength) {\n        return;\n    }\n    // replace mess spaces with single space\n    cache.dataKey = cache.dataKey.replace(REGEX.WHITESPACES, ' ');\n\n    if (!cache.iterator) {\n        let forExpMatch = dataKey.match(REGEX.FOROF);\n\n        if (!forExpMatch) {\n            return;\n        }\n\n        cache.iterator = {};\n        cache.iterator.alias = forExpMatch[1].trim();\n\n        if (forExpMatch[2]) {\n            cache.iterator.dataKey = forExpMatch[2].trim();\n            cache.parentElement = cache.el.parentElement;\n            cache.previousNonTemplateElement = cache.el.previousSibling;\n            cache.nextNonTemplateElement = cache.el.nextSibling;\n        }\n    }\n\n    renderForOfBinding({\n        bindingData: cache,\n        viewModel: viewModel,\n        bindingAttrs: bindingAttrs,\n    });\n};\n\nexport default forOfBinding;\n","import {bindingAttrs as configBindingAttrs} from './config';\nimport {getViewModelPropValue} from './util';\nimport {createClonedElementCache, wrapCommentAround} from './commentWrapper';\nimport {renderIfBinding, removeIfBinding} from './renderIfBinding';\n\n/**\n * if-Binding\n * @description\n * DOM decleartive for binding.\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst ifBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n    cache.type = cache.type || configBindingAttrs.if;\n\n    let oldViewModelProValue = cache.elementData.viewModelPropValue;\n    let viewModelPropValue = getViewModelPropValue(viewModel, cache);\n    let shouldRender = Boolean(viewModelPropValue);\n\n    if (\n        typeof viewModelPropValue !== 'undefined' &&\n        oldViewModelProValue === viewModelPropValue &&\n        !cache.hasIterationBindingCache\n    ) {\n        return;\n    }\n\n    // store new show status\n    cache.elementData.viewModelPropValue = viewModelPropValue;\n\n    // only create fragment once\n    // wrap comment tag around\n    // remove if attribute from original element to allow later dataBind parsing\n    if (!cache.fragment) {\n        wrapCommentAround(cache, cache.el);\n        cache.el.removeAttribute(bindingAttrs.if);\n        createClonedElementCache(cache);\n    }\n\n    if (!shouldRender) {\n        // remove element\n        removeIfBinding(cache);\n    } else {\n        // render element\n        renderIfBinding({\n            bindingData: cache,\n            viewModel: viewModel,\n            bindingAttrs: bindingAttrs,\n        });\n    }\n};\n\nexport default ifBinding;\n","import * as config from './config';\nimport {Binder} from './binder';\n\nlet bindingAttrs = config.bindingAttrs;\nlet templateSettings = config.templateSettings;\n\nconst use = (settings = {}) => {\n    if (settings.bindingAttrs) {\n        bindingAttrs = $.extend({}, settings.bindingAttrs);\n    }\n    if (settings.templateSettings) {\n        templateSettings = $.extend({}, settings.templateSettings);\n    }\n};\n\nconst init = ($rootElement, viewModel = null) => {\n    _.templateSettings = templateSettings;\n    return new Binder($rootElement, viewModel, bindingAttrs);\n};\n\n// expose to global\nwindow.dataBind = {\n    use: use,\n    init: init,\n    version: '1.7.0',\n};\n","import {getViewModelValue} from './util';\n\n/**\n * modelBinding\n * @description input element data binding. viewModel -> DOM update\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst modelBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n    let newValue;\n\n    if (!dataKey) {\n        return;\n    }\n\n    newValue = getViewModelValue(viewModel, dataKey);\n\n    if (typeof newValue !== 'undefined' && newValue !== null) {\n        let $element = $(cache.el);\n        let isCheckbox = $element.is(':checkbox');\n        let isRadio = $element.is(':radio');\n        let inputName = $element[0].name;\n        let $radioGroup = isRadio ? $('input[name=\"' + inputName + '\"]') : null;\n        let oldValue = isCheckbox ? $element.prop('checked') : $element.val();\n\n        // update element value\n        if (newValue !== oldValue) {\n            if (isCheckbox) {\n                $element.prop('checked', Boolean(newValue));\n            } else if (isRadio) {\n                $radioGroup.val([newValue]);\n            } else {\n                $element.val(newValue);\n            }\n        }\n    }\n};\n\nexport default modelBinding;\n","import * as util from './util';\n\n/**\n *  pubSub\n * @description use jQuery object as pubSub\n * @example EVENTS object strucure:\n *  EVENTS = {\n        'EVENT-NAME': [{ 'comp-id': fn }],\n        'EVENT-NAME2': [{ 'comp-id': fn }]\n    };\n */\n\nlet EVENTS = {};\n\nconst subscribeEvent = (instance = null, eventName = '', fn, isOnce = false) => {\n    if (!instance || !instance.compId || !eventName || typeof fn !== 'function') {\n        return;\n    }\n\n    let subscriber;\n    let isSubscribed = false;\n\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\n    EVENTS[eventName] = EVENTS[eventName] || [];\n    // check if already subscribed and update callback fn\n    isSubscribed = EVENTS[eventName].some((subscriber) => {\n        if (subscriber[instance.compId]) {\n            subscriber[instance.compId] = fn.bind(instance.viewModel);\n            subscriber.isOnce = isOnce;\n            return true;\n        }\n    });\n    // push if not yet subscribe\n    if (!isSubscribed) {\n        subscriber = {};\n        subscriber[instance.compId] = fn.bind(instance.viewModel);\n        subscriber.isOnce = isOnce;\n        EVENTS[eventName].push(subscriber);\n    }\n};\n\nconst subscribeEventOnce = (instance = null, eventName = '', fn) => {\n    subscribeEvent(instance, eventName, fn, true);\n};\n\nconst unsubscribeEvent = (compId = '', eventName = '') => {\n    if (!compId || !eventName) {\n        return;\n    }\n\n    let i = 0;\n    let subscribersLength = 0;\n    let subscriber;\n\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\n\n    if (EVENTS[eventName]) {\n        subscribersLength = EVENTS[eventName].length;\n        for (i = 0; i < subscribersLength; i += 1) {\n            subscriber = EVENTS[eventName][i];\n            if (subscriber[compId]) {\n                EVENTS[eventName].splice(i, 1);\n                break;\n            }\n        }\n    }\n    // delete the event if no more subscriber\n    if (!EVENTS[eventName].length) {\n        delete EVENTS[eventName];\n    }\n};\n\n/**\n * unsubscribeAllEvent\n * @description unsubscribe all event by compId. eg when a component removed\n * @param {string} compId\n */\nconst unsubscribeAllEvent = (compId = '') => {\n    if (!compId) {\n        return;\n    }\n    Object.keys(EVENTS).forEach((eventName) => {\n        unsubscribeEvent(compId, eventName);\n    });\n};\n\nconst publishEvent = (eventName = '', ...args) => {\n    if (!eventName || !EVENTS[eventName]) {\n        return;\n    }\n\n    eventName = eventName.replace(util.REGEX.WHITESPACES, '');\n\n    EVENTS[eventName].forEach((subscriber) => {\n        Object.keys(subscriber).forEach((compId) => {\n            if (typeof subscriber[compId] === 'function') {\n                let ret = subscriber[compId](...args);\n                if (subscriber.isOnce) {\n                    unsubscribeEvent(compId, eventName);\n                }\n                return ret;\n            }\n        });\n    });\n};\n\nexport {subscribeEvent, subscribeEventOnce, unsubscribeEvent, unsubscribeAllEvent, publishEvent};\n","/* eslint-disable no-invalid-this */\nimport {bindingAttrs as configBindingAttrs, bindingDataReference} from './config';\nimport {getViewModelValue, isArray, isPlainObject, throwErrorMessage, cloneDomNode, isEmptyObject} from './util';\nimport createBindingCache from './domWalker';\nimport {renderIteration} from './binder';\nimport {wrapCommentAround, removeElemnetsByCommentWrap, insertRenderedElements} from './commentWrapper';\n\nconst renderForOfBinding = ({bindingData, viewModel, bindingAttrs}) => {\n    if (!bindingData || !viewModel || !bindingAttrs) {\n        return;\n    }\n    let keys;\n    let iterationDataLength;\n    let iterationData = getViewModelValue(viewModel, bindingData.iterator.dataKey);\n    let isRegenerate = false;\n\n    // check iterationData and set iterationDataLength\n    if (isArray(iterationData)) {\n        iterationDataLength = iterationData.length;\n    } else if (isPlainObject(iterationData)) {\n        keys = Object.keys(iterationData);\n        iterationDataLength = keys.length;\n    } else {\n        // throw error but let script contince to run\n        return throwErrorMessage(null, 'iterationData is not an plain object or array');\n    }\n\n    if (!bindingData.type) {\n        bindingData.type = configBindingAttrs.forOf;\n        wrapCommentAround(bindingData, bindingData.el);\n    }\n\n    // assign forOf internal id to bindingData once\n    if (typeof bindingData.iterationSize === 'undefined') {\n        // store iterationDataLength\n        bindingData.iterationSize = iterationDataLength;\n        // remove orignal node for-of attributes\n        bindingData.el.removeAttribute(bindingAttrs.forOf);\n        isRegenerate = true;\n    } else {\n        // only regenerate cache if iterationDataLength changed\n        isRegenerate = bindingData.iterationSize !== iterationDataLength;\n        // update iterationSize\n        bindingData.iterationSize = iterationDataLength;\n    }\n\n    if (!isRegenerate) {\n        bindingData.iterationBindingCache.forEach(function(elementCache, i) {\n            if (!isEmptyObject(elementCache)) {\n                let iterationVm = createIterationViewModel({\n                    bindingData: bindingData,\n                    viewModel: viewModel,\n                    iterationData: iterationData,\n                    keys: keys,\n                    index: i,\n                });\n                renderIteration({\n                    elementCache: elementCache,\n                    iterationVm: iterationVm,\n                    bindingAttrs: bindingAttrs,\n                    isRegenerate: false,\n                });\n            }\n        });\n\n        return;\n    }\n\n    // generate forOfBinding elements into fragment\n    let fragment = generateForOfElements(bindingData, viewModel, bindingAttrs, iterationData, keys);\n\n    removeElemnetsByCommentWrap(bindingData);\n\n    // insert fragment content into DOM\n    return insertRenderedElements(bindingData, fragment);\n};\n\nconst createIterationViewModel = ({bindingData, viewModel, iterationData, keys, index}) => {\n    let iterationVm = {};\n    iterationVm[bindingData.iterator.alias] = keys ? iterationData[keys[index]] : iterationData[index];\n    // populate common binding data reference\n    iterationVm[bindingDataReference.rootDataKey] = viewModel.$root || viewModel;\n    iterationVm[bindingDataReference.currentData] = iterationVm[bindingData.iterator.alias];\n    iterationVm[bindingDataReference.currentIndex] = index;\n    return iterationVm;\n};\n\nconst generateForOfElements = (bindingData, viewModel, bindingAttrs, iterationData, keys) => {\n    let fragment = document.createDocumentFragment();\n    let iterationDataLength = bindingData.iterationSize;\n    let clonedItem;\n    let iterationVm;\n    let iterationBindingCache;\n    let i = 0;\n\n    // create or clear exisitng iterationBindingCache\n    if (isArray(bindingData.iterationBindingCache)) {\n        bindingData.iterationBindingCache.length = 0;\n    } else {\n        bindingData.iterationBindingCache = [];\n    }\n\n    // generate forOf and append to DOM\n    for (i = 0; i < iterationDataLength; i += 1) {\n        clonedItem = cloneDomNode(bindingData.el);\n\n        // create bindingCache per iteration\n        iterationBindingCache = createBindingCache({\n            rootNode: clonedItem,\n            bindingAttrs: bindingAttrs,\n        });\n\n        bindingData.iterationBindingCache.push(iterationBindingCache);\n\n        if (!isEmptyObject(iterationBindingCache)) {\n            // create an iterationVm match iterator alias\n            iterationVm = createIterationViewModel({\n                bindingData: bindingData,\n                viewModel: viewModel,\n                iterationData: iterationData,\n                keys: keys,\n                index: i,\n            });\n\n            renderIteration({\n                elementCache: bindingData.iterationBindingCache[i],\n                iterationVm: iterationVm,\n                bindingAttrs: bindingAttrs,\n                isRegenerate: true,\n            });\n        }\n\n        fragment.appendChild(clonedItem);\n    }\n\n    return fragment;\n};\n\nexport default renderForOfBinding;\n","import {isEmptyObject} from './util';\nimport {renderIteration} from './binder';\nimport createBindingCache from './domWalker';\nimport {commentSuffix} from './config';\nimport {removeElemnetsByCommentWrap, insertRenderedElements} from './commentWrapper';\n\n/**\n * isTargetDomRemoved\n * @description check if DOM between 'start' and 'end' comment tag has been removed\n * @param {object} bindingData\n * @return {boolean}\n */\nconst isTargetDomRemoved = (bindingData) => {\n    let ret = false;\n    if (bindingData && bindingData.previousNonTemplateElement) {\n        let commentStartTextContent = bindingData.previousNonTemplateElement.textContent;\n        let endCommentTag = bindingData.previousNonTemplateElement.nextSibling;\n\n        if (endCommentTag.nodeType === 8) {\n            if (endCommentTag.textContent === commentStartTextContent + commentSuffix) {\n                ret = true;\n            }\n        }\n    }\n    return ret;\n};\n\nconst renderIfBinding = ({bindingData, viewModel, bindingAttrs}) => {\n    if (!bindingData.fragment) {\n        return;\n    }\n\n    const isDomRemoved = isTargetDomRemoved(bindingData);\n    // use fragment for create iterationBindingCache\n    const rootElement = bindingData.fragment.firstChild.cloneNode(true);\n\n    // remove current old DOM.\n    if (!isDomRemoved) {\n        removeIfBinding(bindingData);\n    }\n\n    // walk clonedElement to create iterationBindingCache\n    if (!bindingData.iterationBindingCache || !bindingData.hasIterationBindingCache) {\n        bindingData.iterationBindingCache = createBindingCache({\n            rootNode: rootElement,\n            bindingAttrs: bindingAttrs,\n        });\n    }\n\n    // only render if has iterationBindingCache\n    // means has other dataBindings to be render\n    if (!isEmptyObject(bindingData.iterationBindingCache)) {\n        bindingData.hasIterationBindingCache = true;\n        renderIteration({\n            elementCache: bindingData.iterationBindingCache,\n            iterationVm: viewModel,\n            bindingAttrs: bindingAttrs,\n            isRegenerate: true,\n        });\n    }\n\n    // insert to new rendered DOM\n    insertRenderedElements(bindingData, rootElement);\n};\n\nconst removeIfBinding = (bindingData) => {\n    removeElemnetsByCommentWrap(bindingData);\n    // remove cache.IterationBindingCache to prevent memory leak\n    if (bindingData.hasIterationBindingCache) {\n        bindingData.iterationBindingCache = {};\n        bindingData.hasIterationBindingCache = false;\n    }\n};\n\nexport {renderIfBinding, removeIfBinding};\n","import {dataIndexAttr} from './config';\nimport {parseStringToJson, getViewModelValue} from './util';\n\nlet $domFragment = null;\nlet $templateRoot = null;\nlet nestTemplatesCount = 0;\nlet templateCache = {};\n\n/**\n * compileTemplate\n * @description compile underscore template and store in templateCache\n * @param {string} id\n * @param {object} templateData\n * @return {string} rendered html string\n */\nconst compileTemplate = (id, templateData = null) => {\n    let templateString;\n    let templateElement;\n\n    if (!templateCache[id]) {\n        templateElement = document.getElementById(id);\n        templateString = templateElement ? templateElement.innerHTML : '';\n        templateCache[id] = _.template(templateString, {\n            variable: 'data',\n        });\n    }\n\n    return templateCache[id](templateData);\n};\n\n/**\n * renderTemplate\n * @description\n * get template setting from DOM attribute then call compileTemplate\n * to render and append to target DOM\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n * @param {object} elementCache\n */\nconst renderTemplate = (cache, viewModel, bindingAttrs, elementCache) => {\n    let settings = parseStringToJson(cache.dataKey);\n    let viewData = settings.data === '$root' ? viewModel : getViewModelValue(viewModel, settings.data);\n    let isAppend = settings.append;\n    let isPrepend = settings.prepend;\n    let html;\n    let $element;\n    let $index;\n    let $currentElement;\n    let $nestedTemplates;\n\n    if (!viewData) {\n        return;\n    }\n\n    $element = $(cache.el);\n    $index = typeof viewModel.$index !== 'undefined' ? viewModel.$index : $element.attr(dataIndexAttr);\n    if (typeof $index !== 'undefined') {\n        viewData.$index = $index;\n    }\n    $domFragment = $domFragment ? $domFragment : $('<div/>');\n    $templateRoot = $templateRoot ? $templateRoot : $element;\n    html = compileTemplate(settings.id, viewData);\n\n    // domFragment should be empty in first run\n    // append rendered html\n    if (!$domFragment.children().length) {\n        $currentElement = $domFragment;\n        $domFragment.append(html);\n    } else {\n        $currentElement = $element;\n        $currentElement.append(html);\n    }\n\n    // check if there are nested template then recurisive render them\n    $nestedTemplates = $currentElement.find('[' + bindingAttrs.tmp + ']');\n\n    if ($nestedTemplates.length) {\n        nestTemplatesCount += $nestedTemplates.length;\n        $nestedTemplates.each(function(index, element) {\n            let thisTemplateCache = {\n                el: element,\n                dataKey: element.getAttribute(bindingAttrs.tmp),\n            };\n            elementCache[bindingAttrs.tmp].push(thisTemplateCache);\n            // recursive template render\n            renderTemplate(thisTemplateCache, viewModel, bindingAttrs, elementCache);\n            nestTemplatesCount -= 1;\n        });\n    }\n\n    // no more nested tempalted to render, start to append $domFragment into $templateRoot\n    if (nestTemplatesCount === 0) {\n        // append to DOM once\n        if (!isAppend && !isPrepend) {\n            $templateRoot.empty();\n        }\n        if (isPrepend) {\n            $templateRoot.prepend($domFragment.html());\n        } else {\n            $templateRoot.append($domFragment.html());\n        }\n        // clear cached fragment\n        $domFragment = $templateRoot = null;\n        // trigger callback if provided\n        if (typeof viewModel.afterTemplateRender === 'function') {\n            viewModel.afterTemplateRender(viewData);\n        }\n    }\n};\n\nexport default renderTemplate;\n","import {getViewModelPropValue} from './util';\n\n/**\n * showBinding\n * @description\n * DOM decleartive show binding. Make binding show/hide according to viewModel data (boolean)\n * viewModel data can function but must return boolean\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst showBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n\n    let oldShowStatus = cache.elementData.viewModelPropValue;\n    let isInvertBoolean = dataKey.charAt(0) === '!';\n    let shouldShow;\n\n    shouldShow = getViewModelPropValue(viewModel, cache);\n\n    // do nothing if data in viewModel is undefined\n    if (typeof shouldShow !== 'undefined' && shouldShow !== null) {\n        shouldShow = Boolean(shouldShow);\n\n        // reject if nothing changed\n        if (oldShowStatus === shouldShow) {\n            return;\n        }\n\n        // store new show status\n        cache.elementData.viewModelPropValue = shouldShow;\n\n        // reverse if has '!' expression from DOM deceleration\n        if (isInvertBoolean) {\n            shouldShow = !shouldShow;\n        }\n        if (!shouldShow) {\n            cache.el.style.setProperty('display', 'none');\n        } else {\n            cache.el.style.removeProperty('display');\n            if (cache.el.style.cssText === '') {\n                cache.el.removeAttribute('style');\n            }\n        }\n    }\n};\n\nexport default showBinding;\n","import {getViewModelValue, resolveViewModelContext, resolveParamList, getFormData} from './util';\n\n/**\n * submitBinding\n * @description on form submit binding. pass current form data as json object to handler\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst submitBinding = (cache, viewModel, bindingAttrs) => {\n    let handlerName = cache.dataKey;\n    let paramList = cache.parameters;\n    let handlerFn;\n    let $element;\n    let viewModelContext;\n\n    if (!handlerName) {\n        return;\n    }\n\n    handlerFn = getViewModelValue(viewModel, handlerName);\n    $element = $(cache.el);\n\n    if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        // assing on change event\n        $element.off('submit.databind').on('submit.databind', function(e) {\n            let args = [e, $element, getFormData($element)].concat(paramList);\n            handlerFn.apply(viewModelContext, args);\n        });\n    }\n};\n\nexport default submitBinding;\n","import {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\nimport {createClonedElementCache, wrapCommentAround} from './commentWrapper';\nimport {renderIfBinding, removeIfBinding} from './renderIfBinding';\n/**\n * switch-Binding\n * @description\n * DOM decleartive switch binding.\n * switch parent element wrap direct child with case bindings\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst switchBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n    let paramList = cache.parameters;\n\n    if (!dataKey) {\n        return;\n    }\n\n    cache.elementData = cache.elementData || {};\n\n    let newExpression = getViewModelValue(viewModel, dataKey);\n    if (typeof newExpression === 'function') {\n        let viewModelContext = resolveViewModelContext(viewModel, newExpression);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        let args = paramList.slice(0);\n        newExpression = newExpression.apply(viewModelContext, args);\n    }\n\n    if (newExpression === cache.elementData.expression) {\n        return;\n    }\n\n    cache.elementData.expression = newExpression;\n\n    // build switch cases if not yet defined\n    if (!cache.cases) {\n        let childrenElements = cache.el.children;\n        if (!childrenElements.length) {\n            return;\n        }\n        cache.cases = [];\n        for (let i = 0, elementLength = childrenElements.length; i < elementLength; i += 1) {\n            let caseData = null;\n            if (childrenElements[i].hasAttribute(bindingAttrs.case)) {\n                caseData = createCaseData(childrenElements[i], bindingAttrs.case);\n            } else if (childrenElements[i].hasAttribute(bindingAttrs.default)) {\n                caseData = createCaseData(childrenElements[i], bindingAttrs.default);\n                caseData.isDefault = true;\n            }\n            // create fragment by clone node\n            // wrap with comment tag\n            if (caseData) {\n                wrapCommentAround(caseData, caseData.el);\n                // remove binding attribute for later dataBind parse\n                if (caseData.isDefault) {\n                    caseData.el.removeAttribute(bindingAttrs.default);\n                } else {\n                    caseData.el.removeAttribute(bindingAttrs.case);\n                }\n                createClonedElementCache(caseData);\n                cache.cases.push(caseData);\n            }\n        }\n    }\n\n    if (cache.cases.length) {\n        let hasMatch = false;\n        // do switch operation - reuse if binding logic\n        for (let j = 0, casesLength = cache.cases.length; j < casesLength; j += 1) {\n            let newCaseValue;\n            if (cache.cases[j].dataKey) {\n                newCaseValue = getViewModelValue(viewModel, cache.cases[j].dataKey);\n                if (typeof newCaseValue === 'function') {\n                    let viewModelContext = resolveViewModelContext(viewModel, newCaseValue);\n                    let paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n                    let args = paramList.slice(0);\n                    newCaseValue = newCaseValue.apply(viewModelContext, args);\n                }\n                // set back to dataKey if nothing found in viewModel\n                newCaseValue = newCaseValue || cache.cases[j].dataKey;\n            }\n\n            if (newCaseValue === cache.elementData.expression || cache.cases[j].isDefault) {\n                hasMatch = true;\n                // render element\n                renderIfBinding({\n                    bindingData: cache.cases[j],\n                    viewModel: viewModel,\n                    bindingAttrs: bindingAttrs,\n                });\n\n                // remove other elements\n                removeUnmatchCases(cache.cases, j);\n                break;\n            }\n        }\n        // no match remove all cases\n        if (!hasMatch) {\n            removeUnmatchCases(cache.cases);\n        }\n    }\n};\n\nfunction removeUnmatchCases(cases, matchedIndex) {\n    cases.forEach((caseData, index) => {\n        if (index !== matchedIndex || typeof matchedIndex === 'undefined') {\n            removeIfBinding(caseData);\n            // remove cache.IterationBindingCache to prevent memory leak\n            if (caseData.hasIterationBindingCache) {\n                caseData.iterationBindingCache = null;\n                caseData.hasIterationBindingCache = false;\n            }\n        }\n    });\n}\n\nfunction createCaseData(node, attrName) {\n    let caseData = {\n        el: node,\n        dataKey: node.getAttribute(attrName),\n        type: attrName,\n    };\n    return caseData;\n}\n\nexport default switchBinding;\n","import {getViewModelValue, resolveViewModelContext, resolveParamList} from './util';\n\n/**\n * textBinding\n * * @description\n * DOM decleartive text binding update dom textnode with viewModel data\n * @param {object} cache\n * @param {object} viewModel\n * @param {object} bindingAttrs\n */\nconst textBinding = (cache, viewModel, bindingAttrs) => {\n    let dataKey = cache.dataKey;\n    let paramList = cache.parameters;\n    let viewModelContext;\n\n    if (!dataKey) {\n        return;\n    }\n\n    let newValue = getViewModelValue(viewModel, dataKey);\n    if (typeof newValue === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, newValue);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        let args = paramList.slice(0);\n        newValue = newValue.apply(viewModelContext, args);\n    }\n    let oldValue = cache.el.textContent;\n\n    if (typeof newValue !== 'undefined' && typeof newValue !== 'object' && newValue !== null) {\n        if (newValue !== oldValue) {\n            cache.el.textContent = newValue;\n        }\n    }\n};\n\nexport default textBinding;\n","import * as config from './config';\n\n// require to use lodash\n_ = window._ || {};\n\nconst hasIsArray = Array.isArray;\n\nconst REGEX = {\n    FUNCTIONPARAM: /\\((.*?)\\)/,\n    WHITESPACES: /\\s+/g,\n    FOROF: /(.*?)\\s+(?:in|of)\\s+(.*)/,\n};\n\nconst generateElementCache = (bindingAttrs) => {\n    let elementCache = {};\n    $.each(bindingAttrs, function(k, v) {\n        elementCache[v] = [];\n    });\n    return elementCache;\n};\n\nconst isArray = (obj) => {\n    return hasIsArray ? Array.isArray(obj) : Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nconst isJsObject = (obj) => {\n    return obj !== null && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]';\n};\n\nconst isPlainObject = (obj) => {\n    let ctor;\n    let prot;\n\n    if (!isJsObject(obj)) {\n        return false;\n    }\n\n    // If has modified constructor\n    ctor = obj.constructor;\n    if (typeof ctor !== 'function') return false;\n\n    // If has modified prototype\n    prot = ctor.prototype;\n    if (isJsObject(prot) === false) return false;\n\n    // If constructor does not have an Object-specific method\n    if (prot.hasOwnProperty('isPrototypeOf') === false) {\n        return false;\n    }\n\n    // Most likely a plain Object\n    return true;\n};\n\nconst isEmptyObject = (obj) => {\n    if (isJsObject(obj)) {\n        return Object.getOwnPropertyNames(obj).length === 0;\n    }\n    return false;\n};\n\n/**\n * getViewModelValue\n * @description walk a object by provided string path. eg 'a.b.c'\n * @param {object} obj\n * @param {string} prop\n * @return {object}\n */\nconst getViewModelValue = (obj, prop) => {\n    return _.get(obj, prop);\n};\n\n/**\n * setViewModelValue\n * @description populate viewModel object by path string\n * @param {object} obj\n * @param {string} prop\n * @param {string} value\n * @return {call} underscore set\n */\nconst setViewModelValue = (obj, prop, value) => {\n    return _.set(obj, prop, value);\n};\n\nconst getViewModelPropValue = (viewModel, bindingCache) => {\n    let dataKey = bindingCache.dataKey;\n    let paramList = bindingCache.parameters;\n    let isInvertBoolean = dataKey.charAt(0) === '!';\n\n    if (isInvertBoolean) {\n        dataKey = isInvertBoolean ? dataKey.substring(1) : dataKey;\n    }\n\n    let ret = getViewModelValue(viewModel, dataKey);\n    if (typeof ret === 'function') {\n        let viewModelContext = resolveViewModelContext(viewModel, dataKey);\n        let oldViewModelProValue = bindingCache.elementData ? bindingCache.elementData.viewModelProValue : null;\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        // let args = [oldViewModelProValue, bindingCache.el].concat(paramList);\n        let args = paramList.concat([oldViewModelProValue, bindingCache.el]);\n        ret = ret.apply(viewModelContext, args);\n    }\n    return isInvertBoolean ? !JSON.parse(ret) : ret;\n};\n\nconst parseStringToJson = (str) => {\n    // fix unquote or single quote keys and replace single quote to double quote\n    let ret = str.replace(/(\\s*?{\\s*?|\\s*?,\\s*?)(['\"])?([a-zA-Z0-9]+)(['\"])?:/g, '$1\"$3\":').replace(/'/g, '\"');\n    return JSON.parse(ret);\n};\n\n/**\n * arrayRemoveMatch\n * @description remove match items in fromArray out of toArray\n * @param {array} toArray\n * @param {array} frommArray\n * @return {boolean}\n */\nconst arrayRemoveMatch = (toArray, frommArray) => {\n    return toArray.filter((value, index) => {\n        return frommArray.indexOf(value) < 0;\n    });\n};\n\nconst getFormData = ($form) => {\n    let sArray = $form.serializeArray();\n    let data = {};\n\n    sArray.map((n) => {\n        data[n['name']] = n['value'];\n    });\n\n    return data;\n};\n\n/**\n * getFunctionParameterList\n * @description convert parameter string to arrary\n * eg. '(\"a\",\"b\",\"c\")' > [\"a\",\"b\",\"c\"]\n * @param {string} str\n * @return {array} paramlist\n */\nconst getFunctionParameterList = (str) => {\n    if (!str || str.length > config.maxDatakeyLength) {\n        return;\n    }\n    let paramlist = str.match(REGEX.FUNCTIONPARAM);\n\n    if (paramlist && paramlist[1]) {\n        paramlist = paramlist[1].split(',');\n        paramlist.forEach(function(v, i) {\n            paramlist[i] = v.trim();\n        });\n    }\n    return paramlist;\n};\n\nconst invertObj = (sourceObj) => {\n    return Object.keys(sourceObj).reduce(function(obj, key) {\n        obj[sourceObj[key]] = key;\n        return obj;\n    }, {});\n};\n\n/**\n * debounce\n * @description decorate a function to be debounce using requestAnimationFrame\n * @param {function} fn\n * @param {context} ctx\n * @return {function}\n */\nconst debounceRaf = (fn, ctx = null) => {\n    return (function(fn, ctx) {\n        let dfObj = $.Deferred(); // eslint-disable-line new-cap\n        let rafId = 0;\n\n        // return decorated fn\n        return function() {\n            let args;\n            /* eslint-disable prefer-rest-params */\n            args = Array.from ? Array.from(arguments) : Array.prototype.slice.call(arguments);\n\n            window.cancelAnimationFrame(rafId);\n            rafId = window.requestAnimationFrame(() => {\n                $.when(fn.apply(ctx, args)).then(\n                    dfObj.resolve.apply(ctx, arguments),\n                    dfObj.reject.apply(ctx, arguments),\n                    dfObj.notify.apply(ctx, arguments)\n                );\n                dfObj = $.Deferred(); // eslint-disable-line new-cap\n            });\n            /* eslint-enable prefer-rest-params */\n            return dfObj.promise();\n        };\n    })(fn, ctx);\n};\n\n/**\n * getNodeAttrObj\n * @description convert Node attributes object to a json object\n * @param {object} node\n * @param {array} skipList\n * @return {object}\n */\nconst getNodeAttrObj = (node, skipList) => {\n    let attrObj;\n    let attributesLength = 0;\n    let skipArray;\n\n    if (!node || node.nodeType !== 1 || !node.hasAttributes()) {\n        return attrObj;\n    }\n    if (skipList) {\n        skipArray = [];\n        skipArray = typeof skipList === 'string' ? skipArray.push(skipList) : skipList;\n    }\n    attrObj = {};\n    attributesLength = node.attributes.length;\n\n    if (attributesLength) {\n        for (let i = 0; i < attributesLength; i += 1) {\n            let attribute = node.attributes.item(i);\n            attrObj[attribute.nodeName] = attribute.nodeValue;\n        }\n    }\n\n    if (isArray(skipArray)) {\n        skipArray.forEach((item) => {\n            if (attrObj[item]) {\n                delete attrObj[item];\n            }\n        });\n    }\n    return attrObj;\n};\n\n/**\n * extend\n * @param {boolean} isDeepMerge\n * @param {object} target\n * @param {object} sources\n * @return {object} merged object\n */\nconst extend = (isDeepMerge = false, target, ...sources) => {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (source === undefined) {\n        return target;\n    }\n\n    if (!isDeepMerge) {\n        return Object.assign(target, ...sources);\n    }\n\n    if (isMergebleObject(target) && isMergebleObject(source)) {\n        Object.keys(source).forEach((key) => {\n            if (isMergebleObject(source[key])) {\n                if (!target[key]) {\n                    target[key] = {};\n                }\n                extend(target[key], source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        });\n    }\n\n    return extend(true, target, ...sources);\n};\n\nconst each = (obj, fn) => {\n    if (typeof obj !== 'object' || typeof fn !== 'function') {\n        return;\n    }\n    let keys = [];\n    let keysLength = 0;\n    let isArrayObj = isArray(obj);\n    let key;\n    let value;\n    let i;\n\n    if (isArrayObj) {\n        keysLength = obj.length;\n    } else if (isJsObject(obj)) {\n        keys = Object.keys(obj);\n        keysLength = keys.length;\n    } else {\n        throw new TypeError('Object is not an array or object');\n    }\n\n    for (i = 0; i < keysLength; i += 1) {\n        if (isArrayObj) {\n            key = i;\n            value = obj[i];\n        } else {\n            key = keys[i];\n            value = obj[key];\n        }\n        fn(key, value);\n    }\n};\n\nconst isMergebleObject = (item) => {\n    return isJsObject(item) && !isArray(item);\n};\n\n/**\n * cloneDomNode\n * @param {object} element\n * @return {object} cloned element\n * @description helper function to clone node\n */\nconst cloneDomNode = (element) => {\n    return element.cloneNode(true);\n};\n\n/**\n * insertAfter\n * @param {object} parentNode\n * @param {object} newNode\n * @param {object} referenceNode\n * @return {object} node\n * @description helper function to insert new node before the reference node\n */\nconst insertAfter = (parentNode, newNode, referenceNode) => {\n    let refNextElement = referenceNode && referenceNode.nextSibling ? referenceNode.nextSibling : null;\n    return parentNode.insertBefore(newNode, refNextElement);\n};\n\nconst resolveViewModelContext = (viewModel, datakey) => {\n    let ret = viewModel;\n    let bindingDataContext;\n    if (typeof datakey !== 'string') {\n        return ret;\n    }\n    bindingDataContext = datakey.split('.');\n    if (bindingDataContext.length > 1) {\n        if (bindingDataContext[0] === config.bindingDataReference.rootDataKey) {\n            ret = viewModel[config.bindingDataReference.rootDataKey] || viewModel;\n        } else if (bindingDataContext[0] === config.bindingDataReference.currentData) {\n            ret = viewModel[config.bindingDataReference.currentData] || viewModel;\n        }\n    }\n    return ret;\n};\n\nconst resolveParamList = (viewModel, paramList) => {\n    if (!viewModel || !isArray(paramList)) {\n        return;\n    }\n    return paramList.map((param) => {\n        param = param.trim();\n\n        if (param === config.bindingDataReference.currentIndex) {\n            // convert '$index' to value\n            param = viewModel[config.bindingDataReference.currentIndex];\n        } else if (param === config.bindingDataReference.currentData) {\n            // convert '$data' to value or current viewModel\n            param = viewModel[config.bindingDataReference.currentData] || viewModel;\n        } else if (param === config.bindingDataReference.rootDataKey) {\n            // convert '$root' to root viewModel\n            param = viewModel[config.bindingDataReference.rootDataKey] || viewModel;\n        }\n        return param;\n    });\n};\n\nconst throwErrorMessage = (err = null, errorMessage = '') => {\n    let message = err && err.message ? err.message : errorMessage;\n    if (typeof console.error === 'function') {\n        return console.error(message);\n    }\n    return console.log(message);\n};\n\nexport {\n    REGEX,\n    isArray,\n    isPlainObject,\n    isJsObject,\n    isEmptyObject,\n    each,\n    extend,\n    generateElementCache,\n    getViewModelValue,\n    setViewModelValue,\n    getViewModelPropValue,\n    parseStringToJson,\n    debounceRaf,\n    arrayRemoveMatch,\n    getFormData,\n    getFunctionParameterList,\n    invertObj,\n    getNodeAttrObj,\n    cloneDomNode,\n    insertAfter,\n    resolveViewModelContext,\n    resolveParamList,\n    throwErrorMessage,\n};\n"]}