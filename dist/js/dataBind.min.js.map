{"version":3,"sources":["dataBind.min.js"],"names":["bindingAttrs","comp","tmp","text","click","dblclick","blur","focus","hover","change","submit","model","show","css","attr","forOf","if","switch","case","default","serverRenderedAttr","commentPrefix","bindingDataReference","rootDataKey","currentData","currentIndex","mouseEnterHandlerName","mouseLeaveHandlerName","bindingUpdateConditions","constants","ONCE","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_","window","bindingAttrsMap","hasIsArray","Array","isArray","supportPromise","REGEX","toString","call","isJsObject","isPlainObject","ctor","prot","hasOwnProperty","isEmptyObject","getOwnPropertyNames","getViewModelValue","viewModel","prop","get","getViewModelPropValue","bindingCache","dataKey","paramList","parameters","isInvertBoolean","charAt","substring","ret","viewModelContext","resolveViewModelContext","oldViewModelProValue","elementData","viewModelProValue","args","resolveParamList","concat","el","apply","Boolean","filtersViewModelPropValue","value","_ref","filters","each","index","filter","filterFn","err","throwErrorMessage","createDeferredObj","dfObj","promise","Promise","resolve","reject","$","Deferred","debounceRaf","fn","ctx","rafId","from","arguments","slice","cancelAnimationFrame","requestAnimationFrame","undefined","extend","isDeepMerge","_len","sources","_key","source","shift","isMergebleObject","keys","forEach","assign","keysLength","isArrayObj","TypeError","item","insertAfter","parentNode","newNode","referenceNode","refNextElement","nextSibling","insertBefore","datakey","bindingDataContext","split","map","param","trim","errorMessage","message","console","error","log","$domFragment","$templateRoot","nestTemplatesCount","templateCache","renderTemplate","cache","bindingAttrs$$1","elementCache","str","$currentElement","settings","replace","JSON","parse","viewData","data","isAppend","append","isPrepend","prepend","$element","$index","html","id","templateString","templateElement","templateData","document","getElementById","innerHTML","template","variable","compileTemplate","children","empty","$nestedTemplates","find","element","thisTemplateCache","getAttribute","push","afterTemplateRender","changeBinding","forceRender","handlerName","modelDataKey","newValue","oldValue","APP","$root","$rootElement","contains","handlerFn","off","on","e","$this","this","isCheckbox","is","escape","val","set","rootSkipCheck","node","tagName","defaultSkipCheck","hasAttribute","populateBindingCache","cacheData","attrObj","type","paramlist","match","v","getFunctionParameterList","isOnceIndex","filterList","isOnce","splice","extractFilterList","createBindingCache","_ref2","sourceObj","_ref2$rootNode","rootNode","_ref2$bindingAttrs","skipCheck","_ref2$isRenderedTempl","isRenderedTemplate","Node","reduce","parseNode","skipNodeCheckFn","isSkipForOfChild","nodeType","hasAttributes","attributes","name","getAttributesObject","hasSkipChildParseBindings","checkSkipChildParseBindings","iterateList","walkDOM","func","firstElementChild","nextElementSibling","createClonedElementCache","bindingData","clonedElement","cloneNode","fragment","createDocumentFragment","appendChild","setCommentPrefix","commentPrefix$$1","dataKeyMarker","setDocRangeEndAfter","endTextContent","textContent","docRange","setEndBefore","wrapCommentAround","prefix","commentBegin","createComment","commentEnd","firstChild","previousNonTemplateElement","previousSibling","nextNonTemplateElement","parentElement","removeElemnetsByCommentWrap","createRange","setStartBefore","deleteContents","insertRenderedElements","createIterationViewModel","iterationData","iterationVm","alias","generateForOfElements","clonedItem","iterationBindingCache","iterationDataLength","iterationSize","renderIteration","isRegenerate","forOfBinding","forExpMatch","removeAttribute","renderForOfBinding","renderIfBinding","isDomRemoved","commentStartTextContent","endCommentTag","isTargetDomRemoved","rootElement","removeIfBinding","hasIterationBindingCache","removeBindingInQueue","postProcessQueue","indexOf","removeUnmatchCases","cases","matchedIndex","caseData","createCaseData","attrName","EVENTS","subscribeEvent","instance","eventName","compId","subscriber","some","bind","subscribeEventOnce","unsubscribeEvent","subscribersLength","unsubscribeAllEvent","publishEvent","pubSub","freeze","compIdIndex","Binder","Constructor","_classCallCheck","jQuery","eq","initRendered","render","isServerRendered","parseView","protoProps","staticProps","updateOption","attrBinding","oldAttrObj","vmAttrObj","stringify","setAttribute","ifBinding","viewModelPropValue","shouldRender","removeChild","showBinding","currentInlineSytle","currentInlineDisplaySytle","shouldShow","oldShowStatus","displayStyle","computedStyle","style","display","computeStyle","getComputedStyle","getPropertyValue","setProperty","removeProperty","switchBinding","newExpression","childrenElements","elementLength","isDefault","hasMatch","j","casesLength","newCaseValue","textBinding","cssBinding","oldCssList","newCssList","vmCssListObj","vmCssListArray","isViewDataObject","isViewDataString","cssList","frommArray","domCssList","classList","domCssListLength","k","a","join","modelBinding","isRadio","inputName","$radioGroup","submitBinding","$form","sArray","serializeArray","n","clickBinding","dblclickBinding","blurBinding","focusBinding","hoverBinding","inHandlerName","outHandlerName","handlers","tasks","task","String","updateElementCache","_this","opt","allCache","skipForOfParseFn","isRenderedTemplates","createBindingOption","renderTemplatesBinding","applyBinding","postProcess","templateBinding","condition","visualBindingOptions","eventsBindingOptions","_ref3","bindingUpdateOption","bindingAttrs$1","templateSettings$1","evaluate","interpolate","dataBind","use","templateSettings","init","version"],"mappings":"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","file":"dataBind.min.js","sourcesContent":["/** \n * dataBind\n * version 1.9.0\n * By Adam Chow\n * link https://gogocat.github.io/dataBind/\n * license MIT\n * \n */\n(function () {\n    'use strict';\n\n    var bindingAttrs = {\n      comp: 'data-jq-comp',\n      tmp: 'data-jq-tmp',\n      text: 'data-jq-text',\n      click: 'data-jq-click',\n      dblclick: 'data-jq-dblclick',\n      blur: 'data-jq-blur',\n      focus: 'data-jq-focus',\n      hover: 'data-jq-hover',\n      change: 'data-jq-change',\n      submit: 'data-jq-submit',\n      model: 'data-jq-model',\n      show: 'data-jq-show',\n      css: 'data-jq-css',\n      attr: 'data-jq-attr',\n      forOf: 'data-jq-for',\n      \"if\": 'data-jq-if',\n      \"switch\": 'data-jq-switch',\n      \"case\": 'data-jq-case',\n      \"default\": 'data-jq-default'\n    };\n    var serverRenderedAttr = 'data-server-rendered';\n    var dataIndexAttr = 'data-index';\n    var commentPrefix = {\n      forOf: 'data-forOf_',\n      \"if\": 'data-if_',\n      \"case\": 'data-case_',\n      \"default\": 'data-default_'\n    };\n    var commentSuffix = '_end'; // global setting of underscore template inteprolate default token\n\n    var templateSettings = {\n      evaluate: /<%([\\s\\S]+?)%>/g,\n      interpolate: /\\{\\{=(.+?)\\}\\}/g,\n      escape: /\\{\\{(.+?)\\}\\}/g\n    };\n    var bindingDataReference = {\n      rootDataKey: '$root',\n      currentData: '$data',\n      currentIndex: '$index',\n      mouseEnterHandlerName: 'in',\n      mouseLeaveHandlerName: 'out'\n    };\n    var bindingUpdateConditions = {\n      serverRendered: 'SERVER-RENDERED',\n      init: 'INIT'\n    }; // maximum string length before running regex\n\n    var maxDatakeyLength = 50;\n    var constants = {\n      filters: {\n        ONCE: 'once'\n      },\n      PARENT_REF: '_parent'\n    };\n\n    function _typeof(obj) {\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function (obj) {\n          return typeof obj;\n        };\n      } else {\n        _typeof = function (obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return _typeof(obj);\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    _ = window._ || {};\n    var hasIsArray = Array.isArray;\n    var supportPromise = typeof window['Promise'] === 'function';\n    var REGEX = {\n      FUNCTIONPARAM: /\\((.*?)\\)/,\n      WHITESPACES: /\\s+/g,\n      FOROF: /(.*?)\\s+(?:in|of)\\s+(.*)/,\n      PIPE: /\\|/\n    };\n\n    var isArray = function isArray(obj) {\n      return hasIsArray ? Array.isArray(obj) : Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    var isJsObject = function isJsObject(obj) {\n      return obj !== null && _typeof(obj) === 'object' && Object.prototype.toString.call(obj) === '[object Object]';\n    };\n\n    var isPlainObject = function isPlainObject(obj) {\n      if (!isJsObject(obj)) {\n        return false;\n      } // If has modified constructor\n\n\n      var ctor = obj.constructor;\n      if (typeof ctor !== 'function') return false; // If has modified prototype\n\n      var prot = ctor.prototype;\n      if (isJsObject(prot) === false) return false; // If constructor does not have an Object-specific method\n\n      if (prot.hasOwnProperty('isPrototypeOf') === false) {\n        return false;\n      } // Most likely a plain Object\n\n\n      return true;\n    };\n\n    var isEmptyObject = function isEmptyObject(obj) {\n      if (isJsObject(obj)) {\n        return Object.getOwnPropertyNames(obj).length === 0;\n      }\n\n      return false;\n    };\n    /**\r\n     * getViewModelValue\r\n     * @description walk a object by provided string path. eg 'a.b.c'\r\n     * @param {object} viewModel\r\n     * @param {string} prop\r\n     * @return {object}\r\n     */\n\n\n    var getViewModelValue = function getViewModelValue(viewModel, prop) {\n      return _.get(viewModel, prop);\n    };\n    /**\r\n     * setViewModelValue\r\n     * @description populate viewModel object by path string\r\n     * @param {object} obj\r\n     * @param {string} prop\r\n     * @param {string} value\r\n     * @return {call} underscore set\r\n     */\n\n\n    var setViewModelValue = function setViewModelValue(obj, prop, value) {\n      return _.set(obj, prop, value);\n    };\n\n    var getViewModelPropValue = function getViewModelPropValue(viewModel, bindingCache) {\n      var dataKey = bindingCache.dataKey;\n      var paramList = bindingCache.parameters;\n      var isInvertBoolean = dataKey.charAt(0) === '!';\n\n      if (isInvertBoolean) {\n        dataKey = isInvertBoolean ? dataKey.substring(1) : dataKey;\n      }\n\n      var ret = getViewModelValue(viewModel, dataKey);\n\n      if (typeof ret === 'function') {\n        var viewModelContext = resolveViewModelContext(viewModel, dataKey);\n        var oldViewModelProValue = bindingCache.elementData ? bindingCache.elementData.viewModelProValue : null;\n        paramList = paramList ? resolveParamList(viewModel, paramList) : []; // let args = [oldViewModelProValue, bindingCache.el].concat(paramList);\n\n        var args = paramList.concat([oldViewModelProValue, bindingCache.el]);\n        ret = ret.apply(viewModelContext, args);\n      }\n\n      ret = isInvertBoolean ? !Boolean(ret) : ret; // call through fitlers to get final value\n\n      ret = filtersViewModelPropValue({\n        value: ret,\n        viewModel: viewModel,\n        bindingCache: bindingCache\n      });\n      return ret;\n    };\n\n    var filtersViewModelPropValue = function filtersViewModelPropValue(_ref) {\n      var value = _ref.value,\n          viewModel = _ref.viewModel,\n          bindingCache = _ref.bindingCache;\n      var ret = value;\n\n      if (bindingCache.filters) {\n        each(bindingCache.filters, function (index, filter) {\n          var viewModelContext = resolveViewModelContext(viewModel, filter);\n          var filterFn = getViewModelValue.call(viewModelContext, viewModelContext, filter);\n\n          try {\n            ret = filterFn.call(viewModelContext, ret);\n          } catch (err) {\n            throwErrorMessage(err, \"Invalid filter: \".concat(filter));\n          }\n        });\n      }\n\n      return ret;\n    };\n\n    var parseStringToJson = function parseStringToJson(str) {\n      // fix unquote or single quote keys and replace single quote to double quote\n      var ret = str.replace(/(\\s*?{\\s*?|\\s*?,\\s*?)(['\"])?([a-zA-Z0-9]+)(['\"])?:/g, '$1\"$3\":').replace(/'/g, '\"');\n      return JSON.parse(ret);\n    };\n    /**\r\n     * arrayRemoveMatch\r\n     * @description remove match items in fromArray out of toArray\r\n     * @param {array} toArray\r\n     * @param {array} frommArray\r\n     * @return {boolean}\r\n     */\n\n\n    var arrayRemoveMatch = function arrayRemoveMatch(toArray, frommArray) {\n      return toArray.filter(function (value, index) {\n        return frommArray.indexOf(value) < 0;\n      });\n    };\n\n    var getFormData = function getFormData($form) {\n      var sArray = $form.serializeArray();\n      var data = {};\n      sArray.map(function (n) {\n        data[n['name']] = n['value'];\n      });\n      return data;\n    };\n    /**\r\n     * getFunctionParameterList\r\n     * @description convert parameter string to arrary\r\n     * eg. '(\"a\",\"b\",\"c\")' > [\"a\",\"b\",\"c\"]\r\n     * @param {string} str\r\n     * @return {array} paramlist\r\n     */\n\n\n    var getFunctionParameterList = function getFunctionParameterList(str) {\n      if (!str || str.length > maxDatakeyLength) {\n        return;\n      }\n\n      var paramlist = str.match(REGEX.FUNCTIONPARAM);\n\n      if (paramlist && paramlist[1]) {\n        paramlist = paramlist[1].split(',');\n        paramlist.forEach(function (v, i) {\n          paramlist[i] = v.trim();\n        });\n      }\n\n      return paramlist;\n    };\n\n    var extractFilterList = function extractFilterList(cacheData) {\n      if (!cacheData || !cacheData.dataKey || cacheData.dataKey.length > maxDatakeyLength) {\n        return cacheData;\n      }\n\n      var filterList = cacheData.dataKey.split(REGEX.PIPE);\n      var isOnceIndex;\n      cacheData.dataKey = filterList[0].trim();\n\n      if (filterList.length > 1) {\n        filterList.shift(0);\n        filterList.forEach(function (v, i) {\n          filterList[i] = v.trim();\n\n          if (filterList[i] === constants.filters.ONCE) {\n            cacheData.isOnce = true;\n            isOnceIndex = i;\n          }\n        }); // don't store filter 'once' - because it is internal logic not a property from viewModel\n\n        if (isOnceIndex >= 0) {\n          filterList.splice(isOnceIndex, 1);\n        }\n\n        cacheData.filters = filterList;\n      }\n\n      return cacheData;\n    };\n\n    var invertObj = function invertObj(sourceObj) {\n      return Object.keys(sourceObj).reduce(function (obj, key) {\n        obj[sourceObj[key]] = key;\n        return obj;\n      }, {});\n    };\n\n    var createDeferredObj = function createDeferredObj() {\n      var dfObj = {};\n\n      if (supportPromise) {\n        dfObj.promise = new Promise(function (resolve, reject) {\n          dfObj.resolve = resolve;\n          dfObj.reject = reject;\n        });\n      } else {\n        dfObj = $.Deferred(); // eslint-disable-line new-cap\n      }\n\n      return dfObj;\n    };\n    /**\r\n     * debounce\r\n     * @description decorate a function to be debounce using requestAnimationFrame\r\n     * @param {function} fn\r\n     * @param {context} ctx\r\n     * @return {function}\r\n     */\n\n\n    var debounceRaf = function debounceRaf(fn) {\n      var ctx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return function (fn, ctx) {\n        var dfObj = createDeferredObj();\n        var rafId = 0; // return decorated fn\n\n        return function () {\n          /* eslint-disable prefer-rest-params */\n          var args = Array.from ? Array.from(arguments) : Array.prototype.slice.call(arguments);\n          window.cancelAnimationFrame(rafId);\n          rafId = window.requestAnimationFrame(function () {\n            try {\n              // fn is Binder.render function\n              fn.apply(ctx, args); // dfObj.resolve is function provided in .then promise chain\n              // ctx is the current component\n\n              dfObj.resolve(ctx);\n            } catch (err) {\n              dfObj.reject(ctx, err);\n            } // reset dfObj - otherwise then callbacks will not be in execution order\n            // example:\n            // myApp.render().then(function(){console.log('ok1')});\n            // myApp.render().then(function(){console.log('ok2')});\n            // myApp.render().then(function(){console.log('ok3')});\n            // >> ok1, ok2, ok3\n\n\n            dfObj = createDeferredObj();\n            window.cancelAnimationFrame(rafId);\n          });\n          /* eslint-enable prefer-rest-params */\n\n          return supportPromise ? dfObj.promise : dfObj.promise();\n        };\n      }(fn, ctx);\n    };\n    /**\r\n     * extend\r\n     * @param {boolean} isDeepMerge\r\n     * @param {object} target\r\n     * @param {object} sources\r\n     * @return {object} merged object\r\n     */\n\n\n    var extend = function extend() {\n      var isDeepMerge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n\n      for (var _len = arguments.length, sources = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        sources[_key - 2] = arguments[_key];\n      }\n\n      if (!sources.length) {\n        return target;\n      }\n\n      var source = sources.shift();\n\n      if (source === undefined) {\n        return target;\n      }\n\n      if (!isDeepMerge) {\n        return Object.assign.apply(Object, [target].concat(sources));\n      }\n\n      if (isMergebleObject(target) && isMergebleObject(source)) {\n        Object.keys(source).forEach(function (key) {\n          if (isMergebleObject(source[key])) {\n            if (!target[key]) {\n              target[key] = {};\n            }\n\n            extend(target[key], source[key]);\n          } else {\n            target[key] = source[key];\n          }\n        });\n      }\n\n      return extend.apply(void 0, [true, target].concat(sources));\n    };\n\n    var each = function each(obj, fn) {\n      if (_typeof(obj) !== 'object' || typeof fn !== 'function') {\n        return;\n      }\n\n      var keys = [];\n      var keysLength = 0;\n      var isArrayObj = isArray(obj);\n      var key;\n      var value;\n      var i = 0;\n\n      if (isArrayObj) {\n        keysLength = obj.length;\n      } else if (isJsObject(obj)) {\n        keys = Object.keys(obj);\n        keysLength = keys.length;\n      } else {\n        throw new TypeError('Object is not an array or object');\n      }\n\n      for (i = 0; i < keysLength; i += 1) {\n        if (isArrayObj) {\n          key = i;\n          value = obj[i];\n        } else {\n          key = keys[i];\n          value = obj[key];\n        }\n\n        fn(key, value);\n      }\n    };\n\n    var isMergebleObject = function isMergebleObject(item) {\n      return isJsObject(item) && !isArray(item);\n    };\n    /**\r\n     * cloneDomNode\r\n     * @param {object} element\r\n     * @return {object} cloned element\r\n     * @description helper function to clone node\r\n     */\n\n\n    var cloneDomNode = function cloneDomNode(element) {\n      return element.cloneNode(true);\n    };\n    /**\r\n     * insertAfter\r\n     * @param {object} parentNode\r\n     * @param {object} newNode\r\n     * @param {object} referenceNode\r\n     * @return {object} node\r\n     * @description helper function to insert new node before the reference node\r\n     */\n\n\n    var insertAfter = function insertAfter(parentNode, newNode, referenceNode) {\n      var refNextElement = referenceNode && referenceNode.nextSibling ? referenceNode.nextSibling : null;\n      return parentNode.insertBefore(newNode, refNextElement);\n    };\n\n    var resolveViewModelContext = function resolveViewModelContext(viewModel, datakey) {\n      var ret = viewModel;\n\n      if (typeof datakey !== 'string') {\n        return ret;\n      }\n\n      var bindingDataContext = datakey.split('.');\n\n      if (bindingDataContext.length > 1) {\n        if (bindingDataContext[0] === bindingDataReference.rootDataKey) {\n          ret = viewModel[bindingDataReference.rootDataKey] || viewModel;\n        } else if (bindingDataContext[0] === bindingDataReference.currentData) {\n          ret = viewModel[bindingDataReference.currentData] || viewModel;\n        }\n      }\n\n      return ret;\n    };\n\n    var resolveParamList = function resolveParamList(viewModel, paramList) {\n      if (!viewModel || !isArray(paramList)) {\n        return;\n      }\n\n      return paramList.map(function (param) {\n        param = param.trim();\n\n        if (param === bindingDataReference.currentIndex) {\n          // convert '$index' to value\n          param = viewModel[bindingDataReference.currentIndex];\n        } else if (param === bindingDataReference.currentData) {\n          // convert '$data' to value or current viewModel\n          param = viewModel[bindingDataReference.currentData] || viewModel;\n        } else if (param === bindingDataReference.rootDataKey) {\n          // convert '$root' to root viewModel\n          param = viewModel[bindingDataReference.rootDataKey] || viewModel;\n        }\n\n        return param;\n      });\n    };\n\n    var removeElement = function removeElement(el) {\n      if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n    };\n\n    var throwErrorMessage = function throwErrorMessage() {\n      var err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var message = err && err.message ? err.message : errorMessage;\n\n      if (typeof console.error === 'function') {\n        return console.error(message);\n      }\n\n      return console.log(message);\n    };\n\n    var $domFragment = null;\n    var $templateRoot = null;\n    var nestTemplatesCount = 0;\n    var templateCache = {};\n    /**\r\n     * compileTemplate\r\n     * @description compile underscore template and store in templateCache\r\n     * @param {string} id\r\n     * @param {object} templateData\r\n     * @return {string} rendered html string\r\n     */\n\n    var compileTemplate = function compileTemplate(id) {\n      var templateData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var templateString;\n      var templateElement;\n\n      if (!templateCache[id]) {\n        templateElement = document.getElementById(id);\n        templateString = templateElement ? templateElement.innerHTML : '';\n        templateCache[id] = _.template(templateString, {\n          variable: 'data'\n        });\n      }\n\n      return templateCache[id](templateData);\n    };\n    /**\r\n     * renderTemplate\r\n     * @description\r\n     * get template setting from DOM attribute then call compileTemplate\r\n     * to render and append to target DOM\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {object} elementCache\r\n     */\n\n\n    var renderTemplate = function renderTemplate(cache, viewModel, bindingAttrs$$1, elementCache) {\n      var settings = typeof cache.dataKey === 'string' ? parseStringToJson(cache.dataKey) : cache.dataKey;\n      var viewData = settings.data;\n      var isAppend = settings.append;\n      var isPrepend = settings.prepend;\n      var $currentElement;\n      cache.dataKey = settings;\n      viewData = typeof viewData === 'undefined' || viewData === '$root' ? viewModel : getViewModelPropValue(viewModel, {\n        dataKey: settings.data,\n        parameters: cache.parameters\n      });\n\n      if (!viewData) {\n        return;\n      }\n\n      var $element = $(cache.el);\n      var $index = typeof viewModel.$index !== 'undefined' ? viewModel.$index : $element.attr(dataIndexAttr);\n\n      if (typeof $index !== 'undefined') {\n        viewData.$index = $index;\n      }\n\n      $domFragment = $domFragment ? $domFragment : $('<div/>');\n      $templateRoot = $templateRoot ? $templateRoot : $element;\n      var html = compileTemplate(settings.id, viewData); // domFragment should be empty in first run\n      // append rendered html\n\n      if (!$domFragment.children().length) {\n        $currentElement = $domFragment;\n        $domFragment.append(html);\n      } else {\n        $currentElement = $element;\n\n        if (!isAppend && !isPrepend) {\n          $currentElement.empty();\n        }\n\n        if (isPrepend) {\n          $currentElement.prepend(html);\n        } else {\n          $currentElement.append(html);\n        }\n      } // check if there are nested template then recurisive render them\n\n\n      var $nestedTemplates = $currentElement.find('[' + bindingAttrs$$1.tmp + ']');\n\n      if ($nestedTemplates.length) {\n        nestTemplatesCount += $nestedTemplates.length;\n        $nestedTemplates.each(function (index, element) {\n          var thisTemplateCache = {\n            el: element,\n            dataKey: element.getAttribute(bindingAttrs$$1.tmp)\n          };\n          elementCache[bindingAttrs$$1.tmp].push(thisTemplateCache); // recursive template render\n\n          renderTemplate(thisTemplateCache, viewModel, bindingAttrs$$1, elementCache);\n          nestTemplatesCount -= 1;\n        });\n      } // no more nested tempalted to render, start to append $domFragment into $templateRoot\n\n\n      if (nestTemplatesCount === 0) {\n        // append to DOM once\n        if (!isAppend && !isPrepend) {\n          $templateRoot.empty();\n        }\n\n        if (isPrepend) {\n          $templateRoot.prepend($domFragment.html());\n        } else {\n          $templateRoot.append($domFragment.html());\n        } // clear cached fragment\n\n\n        $domFragment = $templateRoot = null; // trigger callback if provided\n\n        if (typeof viewModel.afterTemplateRender === 'function') {\n          viewModel.afterTemplateRender(viewData);\n        }\n      }\n    };\n\n    /* eslint-disable no-invalid-this */\n    /**\r\n     * clickBinding\r\n     * @description\r\n     * DOM decleartive click event binding\r\n     * event handler bind to viewModel method according to the DOM attribute\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var clickBinding = function clickBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var handlerName = cache.dataKey;\n      var paramList = cache.parameters;\n      var viewModelContext;\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!handlerName || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var handlerFn = getViewModelValue(viewModel, handlerName);\n\n      if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el).off('click.databind').on('click.databind', function (e) {\n          var args = [e, $(this)].concat(paramList);\n          handlerFn.apply(viewModelContext, args);\n        });\n      }\n    };\n\n    /* eslint-disable no-invalid-this */\n    /**\r\n     * dblclickBinding\r\n     * DOM decleartive double click event binding\r\n     * event handler bind to viewModel method according to the DOM attribute\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var dblclickBinding = function dblclickBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var handlerName = cache.dataKey;\n      var paramList = cache.parameters;\n      var viewModelContext;\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!handlerName || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var handlerFn = getViewModelValue(viewModel, handlerName);\n\n      if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el).off('dblclick.databind').on('dblclick.databind', function (e) {\n          var args = [e, $(this)].concat(paramList);\n          handlerFn.apply(viewModelContext, args);\n        });\n      }\n    };\n\n    /* eslint-disable no-invalid-this */\n    /**\r\n     * blurBinding\r\n     * DOM decleartive on blur event binding\r\n     * event handler bind to viewModel method according to the DOM attribute\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var blurBinding = function blurBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var handlerName = cache.dataKey;\n      var paramList = cache.parameters;\n      var viewModelContext;\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!handlerName || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var handlerFn = getViewModelValue(viewModel, handlerName);\n\n      if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el).off('blur.databind').on('blur.databind', function (e) {\n          var args = [e, $(this)].concat(paramList);\n          handlerFn.apply(viewModelContext, args);\n        });\n      }\n    };\n\n    /* eslint-disable no-invalid-this */\n    /**\r\n     * focusBinding\r\n     * DOM decleartive on focus event binding\r\n     * event handler bind to viewModel method according to the DOM attribute\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var focusBinding = function focusBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var handlerName = cache.dataKey;\n      var paramList = cache.parameters;\n      var viewModelContext;\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!handlerName || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var handlerFn = getViewModelValue(viewModel, handlerName);\n\n      if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el).off('focus.databind').on('focus.databind', function (e) {\n          var args = [e, $(this)].concat(paramList);\n          handlerFn.apply(viewModelContext, args);\n        });\n      }\n    };\n\n    /* eslint-disable no-invalid-this */\n    /**\r\n     * blurBinding\r\n     * DOM decleartive on blur event binding\r\n     * event handler bind to viewModel method according to the DOM attribute\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var hoverBinding = function hoverBinding(cache, viewModel, bindingAttrs$$1, forceRender) {\n      var handlerName = cache.dataKey;\n      var paramList = cache.parameters;\n      var inHandlerName = bindingDataReference.mouseEnterHandlerName;\n      var outHandlerName = bindingDataReference.mouseLeaveHandlerName;\n      var viewModelContext;\n      var APP = viewModel.APP || viewModel.$root.APP;\n      cache.elementData = cache.elementData || {};\n\n      if (!handlerName || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var handlers = getViewModelValue(viewModel, handlerName);\n\n      if (handlers && typeof handlers[inHandlerName] === 'function' && typeof handlers[outHandlerName] === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : [];\n        $(cache.el).off('mouseenter.databind mouseleave.databind').hover(function enter(e) {\n          var args = [e, cache.el].concat(paramList);\n          handlers[inHandlerName].apply(viewModelContext, args);\n        }, function leave(e) {\n          var args = [e, cache.el].concat(paramList);\n          handlers[outHandlerName].apply(viewModelContext, args);\n        });\n      }\n    };\n\n    /* eslint-disable no-invalid-this */\n    /**\r\n     * changeBinding\r\n     * @description input element on change event binding. DOM -> viewModel update\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var changeBinding = function changeBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var handlerName = cache.dataKey;\n      var paramList = cache.parameters;\n      var modelDataKey = cache.el.getAttribute(bindingAttrs.model);\n      var newValue = '';\n      var oldValue = '';\n      var viewModelContext;\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!handlerName || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var handlerFn = getViewModelValue(viewModel, handlerName);\n\n      if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : []; // assing on change event\n\n        $(cache.el).off('change.databind').on('change.databind', function (e) {\n          var $this = $(this);\n          var isCheckbox = $this.is(':checkbox');\n          newValue = isCheckbox ? $this.prop('checked') : _.escape($this.val()); // set data to viewModel\n\n          if (modelDataKey) {\n            oldValue = getViewModelValue(viewModel, modelDataKey);\n            setViewModelValue(viewModel, modelDataKey, newValue);\n          }\n\n          var args = [e, $this, newValue, oldValue].concat(paramList);\n          handlerFn.apply(viewModelContext, args);\n          oldValue = newValue;\n        });\n      }\n    };\n\n    /**\r\n     * modelBinding\r\n     * @description input element data binding. viewModel -> DOM update\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var modelBinding = function modelBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var dataKey = cache.dataKey;\n      var newValue = '';\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!dataKey || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      newValue = getViewModelValue(viewModel, dataKey);\n\n      if (typeof newValue !== 'undefined' && newValue !== null) {\n        var $element = $(cache.el);\n        var isCheckbox = $element.is(':checkbox');\n        var isRadio = $element.is(':radio');\n        var inputName = $element[0].name;\n        var $radioGroup = isRadio ? $('input[name=\"' + inputName + '\"]') : null;\n        var oldValue = isCheckbox ? $element.prop('checked') : $element.val(); // update element value\n\n        if (newValue !== oldValue) {\n          if (isCheckbox) {\n            $element.prop('checked', Boolean(newValue));\n          } else if (isRadio) {\n            $radioGroup.val([newValue]);\n          } else {\n            $element.val(newValue);\n          }\n        }\n      }\n    };\n\n    /**\r\n     * submitBinding\r\n     * @description on form submit binding. pass current form data as json object to handler\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var submitBinding = function submitBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var handlerName = cache.dataKey;\n      var paramList = cache.parameters;\n      var viewModelContext;\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!handlerName || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var handlerFn = getViewModelValue(viewModel, handlerName);\n      var $element = $(cache.el);\n\n      if (typeof handlerFn === 'function') {\n        viewModelContext = resolveViewModelContext(viewModel, handlerName);\n        paramList = paramList ? resolveParamList(viewModel, paramList) : []; // assing on change event\n\n        $element.off('submit.databind').on('submit.databind', function (e) {\n          var args = [e, $element, getFormData($element)].concat(paramList);\n          handlerFn.apply(viewModelContext, args);\n        });\n      }\n    };\n\n    /**\r\n     * textBinding\r\n     * * @description\r\n     * DOM decleartive text binding update dom textnode with viewModel data\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var textBinding = function textBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var dataKey = cache.dataKey;\n      var APP = viewModel.APP || viewModel.$root.APP; // NOTE: this doesn't work for for-of, if and switch bindings because element was not in DOM\n\n      if (!dataKey || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      var newValue = getViewModelPropValue(viewModel, cache);\n      var oldValue = cache.el.textContent;\n\n      if (typeof newValue !== 'undefined' && _typeof(newValue) !== 'object' && newValue !== null) {\n        if (newValue !== oldValue) {\n          cache.el.textContent = newValue;\n        }\n      }\n    };\n\n    /**\r\n     * showBinding\r\n     * @description\r\n     * DOM decleartive show binding. Make binding show/hide according to viewModel data (boolean)\r\n     * viewModel data can function but must return boolean\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     */\n\n    var showBinding = function showBinding(cache, viewModel, bindingAttrs) {\n      var dataKey = cache.dataKey;\n      var currentInlineSytle = {};\n      var currentInlineDisplaySytle = '';\n      var shouldShow = true;\n\n      if (!dataKey) {\n        return;\n      }\n\n      cache.elementData = cache.elementData || {};\n      var oldShowStatus = cache.elementData.viewModelPropValue; // store current element display default style once only\n\n      if (typeof cache.elementData.displayStyle === 'undefined' || typeof cache.elementData.computedStyle === 'undefined') {\n        currentInlineSytle = cache.el.style;\n        currentInlineDisplaySytle = currentInlineSytle.display; // use current inline style if defined\n\n        if (currentInlineDisplaySytle) {\n          // set to 'block' if is 'none'\n          cache.elementData.displayStyle = currentInlineDisplaySytle === 'none' ? 'block' : currentInlineDisplaySytle;\n          cache.elementData.computedStyle = null;\n        } else {\n          var computeStyle = window.getComputedStyle(cache.el, null).getPropertyValue('display');\n          cache.elementData.displayStyle = null;\n          cache.elementData.computedStyle = computeStyle;\n        }\n      }\n\n      shouldShow = getViewModelPropValue(viewModel, cache); // treat undefined || null as false.\n      // eg if property doesn't exsits in viewModel, it will treat as false to hide element\n\n      shouldShow = Boolean(shouldShow); // reject if nothing changed\n\n      if (oldShowStatus === shouldShow) {\n        return;\n      }\n\n      if (!shouldShow) {\n        if (cache.el.style.display !== 'none') {\n          cache.el.style.setProperty('display', 'none');\n        }\n      } else {\n        if (cache.elementData.computedStyle || cache.el.style.display === 'none') {\n          if (cache.elementData.computedStyle === 'none') {\n            // default display is none in css rule, so use display 'block'\n            cache.el.style.setProperty('display', 'block');\n          } else {\n            // has default displayable type so just remove inline display 'none'\n            if (currentInlineSytle.length > 1) {\n              cache.el.style.removeProperty('display');\n            } else {\n              cache.el.removeAttribute('style');\n            }\n          }\n        } else {\n          // element default display was inline style, so restore it\n          cache.el.style.setProperty('display', cache.elementData.displayStyle);\n        }\n      } // store new show status\n\n\n      cache.elementData.viewModelPropValue = shouldShow;\n    };\n\n    /**\r\n     * cssBinding\r\n     * @description\r\n     * DOM decleartive css binding. update classlist.\r\n     * viewModel data can function but must return JSOL.\r\n     * added css class if value is true\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     * @param {boolean} forceRender\r\n     */\n\n    var cssBinding = function cssBinding(cache, viewModel, bindingAttrs, forceRender) {\n      var dataKey = cache.dataKey;\n      var APP = viewModel.APP || viewModel.$root.APP;\n\n      if (!dataKey || !forceRender && !APP.$rootElement.contains(cache.el)) {\n        return;\n      }\n\n      cache.elementData = cache.elementData || {};\n      cache.elementData.viewModelPropValue = cache.elementData.viewModelPropValue || ''; // let $element = $(cache.el);\n\n      var oldCssList = cache.elementData.viewModelPropValue;\n      var newCssList = '';\n      var vmCssListObj = getViewModelPropValue(viewModel, cache);\n      var vmCssListArray = [];\n      var isViewDataObject = false;\n      var isViewDataString = false;\n      var cssList = [];\n\n      if (typeof vmCssListObj === 'string') {\n        isViewDataString = true;\n      } else if (isPlainObject(vmCssListObj)) {\n        isViewDataObject = true;\n      } else {\n        // reject if vmCssListObj is not an object or string\n        return;\n      }\n\n      if (isViewDataObject) {\n        newCssList = JSON.stringify(vmCssListObj);\n      } else {\n        newCssList = vmCssListObj.replace(/\\s\\s+/g, ' ').trim();\n        vmCssListArray = newCssList.split(' ');\n      } // reject if nothing changed\n\n\n      if (oldCssList === newCssList) {\n        return;\n      } // get current css classes from element\n\n\n      var domCssList = cache.el.classList; // clone domCssList as new array\n\n      var domCssListLength = domCssList.length;\n\n      for (var i = 0; i < domCssListLength; i += 1) {\n        cssList.push(domCssList[i]);\n      }\n\n      if (isViewDataObject) {\n        each(vmCssListObj, function (k, v) {\n          var i = cssList.indexOf(k);\n\n          if (v === true) {\n            cssList.push(k);\n          } else if (i !== -1) {\n            cssList.splice(i, 1);\n          }\n        });\n      } else if (isViewDataString) {\n        // remove oldCssList items from cssList\n        cssList = arrayRemoveMatch(cssList, oldCssList);\n        cssList = cssList.concat(vmCssListArray);\n      } // unique cssList array\n\n\n      cssList = cssList.filter(function (v, i, a) {\n        return a.indexOf(v) === i;\n      });\n      cssList = cssList.join(' '); // update element data\n\n      cache.elementData.viewModelPropValue = newCssList; // replace all css classes\n\n      cache.el.setAttribute('class', cssList);\n    };\n\n    /**\r\n     * attrBinding\r\n     * @description\r\n     * DOM decleartive attr binding. update elenment attributes\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     */\n\n    var attrBinding = function attrBinding(cache, viewModel, bindingAttrs) {\n      var dataKey = cache.dataKey;\n\n      if (!dataKey) {\n        return;\n      }\n\n      cache.elementData = cache.elementData || {};\n      cache.elementData.viewModelProValue = cache.elementData.viewModelProValue || {};\n      var oldAttrObj = cache.elementData.viewModelProValue;\n      var vmAttrObj = getViewModelPropValue(viewModel, cache);\n\n      if (!isPlainObject(vmAttrObj)) {\n        return;\n      } // reject if nothing changed\n\n\n      if (JSON.stringify(oldAttrObj) === JSON.stringify(vmAttrObj)) {\n        return;\n      } // reset old data and update it\n\n\n      cache.elementData.viewModelProValue = {};\n\n      if (isEmptyObject(oldAttrObj)) {\n        each(vmAttrObj, function (key, value) {\n          cache.el.setAttribute(key, value); // populate with vmAttrObj data\n\n          cache.elementData.viewModelProValue[key] = value;\n        });\n      } else {\n        each(oldAttrObj, function (key, value) {\n          if (typeof vmAttrObj[key] === 'undefined') {\n            // remove attribute if not present in current vm\n            cache.el.removeAttribute(key);\n          }\n        });\n        each(vmAttrObj, function (key, value) {\n          if (oldAttrObj[key] !== vmAttrObj[key]) {\n            // update attribute if value changed\n            cache.el.setAttribute(key, vmAttrObj[key]);\n          } // populate with vmAttrObj data\n\n\n          cache.elementData.viewModelProValue[key] = value;\n        });\n      }\n    };\n\n    var bindingAttrsMap;\n    /**\r\n     * walkDOM\r\n     * @description by Douglas Crockford - walk each DOM node and calls provided callback function\r\n     * start walk from firstChild\r\n     * @param {object} node\r\n     * @param {function} func\r\n     */\n\n    var walkDOM = function walkDOM(node, func) {\n      var parseChildNode = true;\n      node = node.firstElementChild;\n\n      while (node) {\n        parseChildNode = func(node);\n\n        if (parseChildNode) {\n          walkDOM(node, func);\n        }\n\n        node = node.nextElementSibling;\n      }\n    };\n\n    var getAttributesObject = function getAttributesObject(node) {\n      var ret = {};\n      Array.prototype.slice.call(node.attributes).forEach(function (item) {\n        ret[item.name] = item.value;\n      });\n      return ret;\n    };\n\n    var checkSkipChildParseBindings = function checkSkipChildParseBindings() {\n      var attrObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var bindingAttrs$$1 = arguments.length > 1 ? arguments[1] : undefined;\n      return [bindingAttrs$$1.forOf, bindingAttrs$$1[\"if\"], bindingAttrs$$1[\"case\"], bindingAttrs$$1[\"default\"]].filter(function (type) {\n        return typeof attrObj[type] !== 'undefined';\n      });\n    };\n\n    var rootSkipCheck = function rootSkipCheck(node) {\n      return node.tagName === 'SVG';\n    };\n\n    var defaultSkipCheck = function defaultSkipCheck(node, bindingAttrs$$1) {\n      return node.tagName === 'SVG' || node.hasAttribute(bindingAttrs$$1.comp);\n    };\n\n    var populateBindingCache = function populateBindingCache(_ref) {\n      var node = _ref.node,\n          attrObj = _ref.attrObj,\n          bindingCache = _ref.bindingCache,\n          type = _ref.type;\n      var attrValue;\n      var cacheData;\n\n      if (bindingAttrsMap && bindingAttrsMap[type] && typeof attrObj[type] !== 'undefined') {\n        bindingCache[type] = bindingCache[type] || [];\n        attrValue = attrObj[type].trim();\n        cacheData = {\n          el: node,\n          dataKey: attrValue\n        }; // populate cacheData.filters. update filterList first item as dataKey\n\n        cacheData = extractFilterList(cacheData); // populate cacheData.parameters\n        // for store function call parameters eg. '$index', '$root'\n        // useful with DOM for-loop template as reference to binding data\n\n        var paramList = getFunctionParameterList(cacheData.dataKey);\n\n        if (paramList) {\n          cacheData.parameters = paramList;\n          cacheData.dataKey = cacheData.dataKey.replace(REGEX.FUNCTIONPARAM, '').trim();\n        } // store parent array reference to cacheData\n\n\n        cacheData[constants.PARENT_REF] = bindingCache[type];\n        bindingCache[type].push(cacheData);\n      }\n\n      return bindingCache;\n    };\n\n    var createBindingCache = function createBindingCache(_ref2) {\n      var _ref2$rootNode = _ref2.rootNode,\n          rootNode = _ref2$rootNode === void 0 ? null : _ref2$rootNode,\n          _ref2$bindingAttrs = _ref2.bindingAttrs,\n          bindingAttrs$$1 = _ref2$bindingAttrs === void 0 ? {} : _ref2$bindingAttrs,\n          skipCheck = _ref2.skipCheck,\n          _ref2$isRenderedTempl = _ref2.isRenderedTemplate,\n          isRenderedTemplate = _ref2$isRenderedTempl === void 0 ? false : _ref2$isRenderedTempl;\n      var bindingCache = {};\n\n      if (!rootNode instanceof window.Node) {\n        throw new TypeError('walkDOM: Expected a DOM node');\n      }\n\n      bindingAttrsMap = bindingAttrsMap || invertObj(bindingAttrs$$1);\n\n      var parseNode = function parseNode(node) {\n        var skipNodeCheckFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultSkipCheck;\n        var isSkipForOfChild = false;\n\n        if (node.nodeType !== 1 || !node.hasAttributes()) {\n          return true;\n        }\n\n        if (skipNodeCheckFn(node, bindingAttrs$$1) || typeof skipCheck === 'function' && skipCheck(node)) {\n          return false;\n        } // when creating sub bindingCache if is for tmp binding\n        // skip same element that has forOf binding the  forOf is alredy parsed\n\n\n        var attrObj = getAttributesObject(node);\n        var hasSkipChildParseBindings = checkSkipChildParseBindings(attrObj, bindingAttrs$$1);\n        var iterateList = [];\n\n        if (hasSkipChildParseBindings.length) {\n          isSkipForOfChild = true;\n          iterateList = hasSkipChildParseBindings;\n        } else if (isRenderedTemplate && attrObj[bindingAttrs$$1.tmp]) {\n          // skip current node parse if was called by node has template binding and already rendered\n          return true;\n        } else {\n          iterateList = Object.keys(attrObj);\n        }\n\n        iterateList.forEach(function (key) {\n          // skip for switch case and default bining\n          if (key !== bindingAttrs$$1[\"case\"] && key !== bindingAttrs$$1[\"default\"]) {\n            bindingCache = populateBindingCache({\n              node: node,\n              attrObj: attrObj,\n              bindingCache: bindingCache,\n              type: key\n            });\n          }\n        }); // after cache forOf skip parse child nodes\n\n        if (isSkipForOfChild) {\n          return false;\n        }\n\n        return true;\n      };\n\n      if (parseNode(rootNode, rootSkipCheck)) {\n        walkDOM(rootNode, parseNode);\n      }\n\n      return bindingCache;\n    };\n\n    /* eslint-disable no-invalid-this */\n\n    var createClonedElementCache = function createClonedElementCache(bindingData) {\n      var clonedElement = bindingData.el.cloneNode(true);\n      bindingData.fragment = document.createDocumentFragment();\n      bindingData.fragment.appendChild(clonedElement);\n      return bindingData;\n    };\n\n    var setCommentPrefix = function setCommentPrefix(bindingData) {\n      if (!bindingData || !bindingData.type) {\n        return;\n      }\n\n      var commentPrefix$$1 = '';\n      var dataKeyMarker = bindingData.dataKey ? bindingData.dataKey.replace(REGEX.WHITESPACES, '_') : '';\n\n      switch (bindingData.type) {\n        case bindingAttrs.forOf:\n          commentPrefix$$1 = commentPrefix.forOf;\n          break;\n\n        case bindingAttrs[\"if\"]:\n          commentPrefix$$1 = commentPrefix[\"if\"];\n          break;\n\n        case bindingAttrs[\"case\"]:\n          commentPrefix$$1 = commentPrefix[\"case\"];\n          break;\n\n        case bindingAttrs[\"default\"]:\n          commentPrefix$$1 = commentPrefix[\"default\"];\n          break;\n      }\n\n      bindingData.commentPrefix = commentPrefix$$1 + dataKeyMarker;\n      return bindingData;\n    };\n    /**\r\n     * setDocRangeEndAfter\r\n     * @param {object} node\r\n     * @param {object} bindingData\r\n     * @description\r\n     * recursive execution to find last wrapping comment node\r\n     * and set as bindingData.docRange.setEndAfter\r\n     * if not found deleteContents will has no operation\r\n     * @return {undefined}\r\n     */\n\n\n    var setDocRangeEndAfter = function setDocRangeEndAfter(node, bindingData) {\n      if (!bindingData.commentPrefix) {\n        setCommentPrefix(bindingData);\n      }\n\n      var startTextContent = bindingData.commentPrefix;\n      var endTextContent = startTextContent + commentSuffix;\n      node = node.nextSibling; // check last wrap comment node\n\n      if (node) {\n        if (node.nodeType === 8 && node.textContent === endTextContent) {\n          return bindingData.docRange.setEndBefore(node);\n        }\n\n        setDocRangeEndAfter(node, bindingData);\n      }\n    };\n    /**\r\n     * wrapCommentAround\r\n     * @param {object} bindingData\r\n     * @param {Node} node\r\n     * @return {object} DOM fragment\r\n     * @description\r\n     * wrap frament with comment node\r\n     */\n\n\n    var wrapCommentAround = function wrapCommentAround(bindingData, node) {\n      var prefix = '';\n\n      if (!bindingData.commentPrefix) {\n        setCommentPrefix(bindingData);\n      }\n\n      prefix = bindingData.commentPrefix;\n      var commentBegin = document.createComment(prefix);\n      var commentEnd = document.createComment(prefix + commentSuffix); // document fragment - logic for ForOf binding\n      // check node.parentNode because node could be from cache and no longer in DOM\n\n      if (node.nodeType === 11) {\n        node.insertBefore(commentBegin, node.firstChild);\n        node.appendChild(commentEnd);\n      } else if (node.parentNode) {\n        node.parentNode.insertBefore(commentBegin, node);\n        insertAfter(node.parentNode, commentEnd, node); // update bindingData details\n\n        bindingData.previousNonTemplateElement = node.previousSibling;\n        bindingData.nextNonTemplateElement = node.nextSibling;\n        bindingData.parentElement = node.previousSibling.parentElement;\n      }\n\n      return node;\n    };\n    /**\r\n     * removeElemnetsByCommentWrap\r\n     * @param {object} bindingData\r\n     * @return {undefined}\r\n     * @description remove elments by range\r\n     */\n\n\n    var removeElemnetsByCommentWrap = function removeElemnetsByCommentWrap(bindingData) {\n      if (!bindingData.docRange) {\n        bindingData.docRange = document.createRange();\n      }\n\n      try {\n        if (bindingData.previousNonTemplateElement) {\n          // update docRange start and end match the wrapped comment node\n          bindingData.docRange.setStartBefore(bindingData.previousNonTemplateElement.nextSibling);\n          setDocRangeEndAfter(bindingData.previousNonTemplateElement.nextSibling, bindingData);\n        } else {\n          // insert before next non template element\n          bindingData.docRange.setStartBefore(bindingData.parentElement.firstChild);\n          setDocRangeEndAfter(bindingData.parentElement.firstChild, bindingData);\n        }\n      } catch (err) {\n        console.log('error removeElemnetsByCommentWrap: ', err.message);\n      }\n\n      return bindingData.docRange.deleteContents();\n    };\n\n    var insertRenderedElements = function insertRenderedElements(bindingData, fragment) {\n      // insert rendered fragment after the previousNonTemplateElement\n      if (bindingData.previousNonTemplateElement) {\n        insertAfter(bindingData.parentElement, fragment, bindingData.previousNonTemplateElement);\n      } else {\n        // insert before next non template element\n        if (bindingData.nextNonTemplateElement) {\n          bindingData.parentElement.insertBefore(fragment, bindingData.nextNonTemplateElement);\n        } else if (bindingData.parentElement) {\n          // insert from parent\n          bindingData.parentElement.appendChild(fragment);\n        }\n      }\n    };\n\n    /* eslint-disable no-invalid-this */\n\n    var renderForOfBinding = function renderForOfBinding(_ref) {\n      var bindingData = _ref.bindingData,\n          viewModel = _ref.viewModel,\n          bindingAttrs$$1 = _ref.bindingAttrs;\n\n      if (!bindingData || !viewModel || !bindingAttrs$$1) {\n        return;\n      }\n\n      var keys;\n      var iterationDataLength;\n      var iterationData = getViewModelPropValue(viewModel, bindingData.iterator);\n      var isRegenerate = false; // check iterationData and set iterationDataLength\n\n      if (isArray(iterationData)) {\n        iterationDataLength = iterationData.length;\n      } else if (isPlainObject(iterationData)) {\n        keys = Object.keys(iterationData);\n        iterationDataLength = keys.length;\n      } else {\n        // throw error but let script contince to run\n        return throwErrorMessage(null, 'iterationData is not an plain object or array');\n      } // flag as pared for-of logic with bindingData.type\n\n\n      if (!bindingData.type) {\n        bindingData.type = bindingAttrs.forOf;\n        wrapCommentAround(bindingData, bindingData.el);\n      } // assign forOf internal id to bindingData once\n\n\n      if (typeof bindingData.iterationSize === 'undefined') {\n        // store iterationDataLength\n        bindingData.iterationSize = iterationDataLength; // remove orignal node for-of attributes\n\n        bindingData.el.removeAttribute(bindingAttrs$$1.forOf);\n        isRegenerate = true;\n      } else {\n        // only regenerate cache if iterationDataLength changed\n        isRegenerate = bindingData.iterationSize !== iterationDataLength; // update iterationSize\n\n        bindingData.iterationSize = iterationDataLength;\n      }\n\n      if (!isRegenerate) {\n        bindingData.iterationBindingCache.forEach(function (elementCache, i) {\n          if (!isEmptyObject(elementCache)) {\n            var iterationVm = createIterationViewModel({\n              bindingData: bindingData,\n              viewModel: viewModel,\n              iterationData: iterationData,\n              keys: keys,\n              index: i\n            });\n            renderIteration({\n              elementCache: elementCache,\n              iterationVm: iterationVm,\n              bindingAttrs: bindingAttrs$$1,\n              isRegenerate: false\n            });\n          }\n        });\n        return;\n      } // generate forOfBinding elements into fragment\n\n\n      var fragment = generateForOfElements(bindingData, viewModel, bindingAttrs$$1, iterationData, keys);\n      removeElemnetsByCommentWrap(bindingData); // insert fragment content into DOM\n\n      return insertRenderedElements(bindingData, fragment);\n    };\n\n    var createIterationViewModel = function createIterationViewModel(_ref2) {\n      var bindingData = _ref2.bindingData,\n          viewModel = _ref2.viewModel,\n          iterationData = _ref2.iterationData,\n          keys = _ref2.keys,\n          index = _ref2.index;\n      var iterationVm = {};\n      iterationVm[bindingData.iterator.alias] = keys ? iterationData[keys[index]] : iterationData[index]; // populate common binding data reference\n\n      iterationVm[bindingDataReference.rootDataKey] = viewModel.$root || viewModel;\n      iterationVm[bindingDataReference.currentData] = iterationVm[bindingData.iterator.alias];\n      iterationVm[bindingDataReference.currentIndex] = index;\n      return iterationVm;\n    };\n\n    var generateForOfElements = function generateForOfElements(bindingData, viewModel, bindingAttrs$$1, iterationData, keys) {\n      var fragment = document.createDocumentFragment();\n      var iterationDataLength = bindingData.iterationSize;\n      var clonedItem;\n      var iterationVm;\n      var iterationBindingCache;\n      var i = 0; // create or clear exisitng iterationBindingCache\n\n      if (isArray(bindingData.iterationBindingCache)) {\n        bindingData.iterationBindingCache.length = 0;\n      } else {\n        bindingData.iterationBindingCache = [];\n      } // generate forOf and append to DOM\n\n\n      for (i = 0; i < iterationDataLength; i += 1) {\n        clonedItem = cloneDomNode(bindingData.el); // create bindingCache per iteration\n\n        iterationBindingCache = createBindingCache({\n          rootNode: clonedItem,\n          bindingAttrs: bindingAttrs$$1\n        });\n        bindingData.iterationBindingCache.push(iterationBindingCache);\n\n        if (!isEmptyObject(iterationBindingCache)) {\n          // create an iterationVm match iterator alias\n          iterationVm = createIterationViewModel({\n            bindingData: bindingData,\n            viewModel: viewModel,\n            iterationData: iterationData,\n            keys: keys,\n            index: i\n          });\n          renderIteration({\n            elementCache: bindingData.iterationBindingCache[i],\n            iterationVm: iterationVm,\n            bindingAttrs: bindingAttrs$$1,\n            isRegenerate: true\n          });\n        }\n\n        fragment.appendChild(clonedItem);\n      }\n\n      return fragment;\n    };\n\n    /**\r\n     * forOfBinding\r\n     * @description\r\n     * DOM decleartive for binding.\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     */\n\n    var forOfBinding = function forOfBinding(cache, viewModel, bindingAttrs$$1) {\n      var dataKey = cache.dataKey;\n\n      if (!dataKey || dataKey.length > maxDatakeyLength) {\n        return;\n      }\n\n      if (!cache.iterator) {\n        if (dataKey.length > maxDatakeyLength) {\n          return;\n        } // replace mess spaces with single space\n\n\n        cache.dataKey = cache.dataKey.replace(REGEX.WHITESPACES, ' ');\n        var forExpMatch = dataKey.match(REGEX.FOROF);\n\n        if (!forExpMatch) {\n          return;\n        }\n\n        cache.iterator = {};\n        cache.iterator.alias = forExpMatch[1].trim();\n\n        if (forExpMatch[2]) {\n          cache.iterator.dataKey = forExpMatch[2].trim();\n          cache.parentElement = cache.el.parentElement;\n          cache.previousNonTemplateElement = cache.el.previousSibling;\n          cache.nextNonTemplateElement = cache.el.nextSibling;\n        }\n      }\n\n      renderForOfBinding({\n        bindingData: cache,\n        viewModel: viewModel,\n        bindingAttrs: bindingAttrs$$1\n      });\n    };\n\n    /**\r\n     * isTargetDomRemoved\r\n     * @description check if DOM between 'start' and 'end' comment tag has been removed\r\n     * @param {object} bindingData\r\n     * @return {boolean}\r\n     */\n\n    var isTargetDomRemoved = function isTargetDomRemoved(bindingData) {\n      var ret = false;\n\n      if (bindingData && bindingData.previousNonTemplateElement) {\n        var commentStartTextContent = bindingData.previousNonTemplateElement.textContent;\n        var endCommentTag = bindingData.previousNonTemplateElement.nextSibling;\n\n        if (endCommentTag.nodeType === 8) {\n          if (endCommentTag.textContent === commentStartTextContent + commentSuffix) {\n            ret = true;\n          }\n        }\n      }\n\n      return ret;\n    };\n\n    var renderIfBinding = function renderIfBinding(_ref) {\n      var bindingData = _ref.bindingData,\n          viewModel = _ref.viewModel,\n          bindingAttrs$$1 = _ref.bindingAttrs;\n\n      if (!bindingData.fragment) {\n        return;\n      }\n\n      var isDomRemoved = isTargetDomRemoved(bindingData);\n      var rootElement = bindingData.el; // remove current old DOM.\n      // TODO: try preserve DOM\n\n      if (!isDomRemoved && !bindingData.isOnce) {\n        removeIfBinding(bindingData); // use fragment for create iterationBindingCache\n\n        rootElement = bindingData.fragment.firstChild.cloneNode(true);\n      } // walk clonedElement to create iterationBindingCache once\n\n\n      if (!bindingData.iterationBindingCache || !bindingData.hasIterationBindingCache) {\n        bindingData.iterationBindingCache = createBindingCache({\n          rootNode: rootElement,\n          bindingAttrs: bindingAttrs$$1\n        });\n      } // only render if has iterationBindingCache\n      // means has other dataBindings to be render\n\n\n      if (!isEmptyObject(bindingData.iterationBindingCache)) {\n        bindingData.hasIterationBindingCache = true;\n        renderIteration({\n          elementCache: bindingData.iterationBindingCache,\n          iterationVm: viewModel,\n          bindingAttrs: bindingAttrs$$1,\n          isRegenerate: true\n        });\n      } // insert to new rendered DOM\n      // TODO: check unnecessary insertion when DOM is preserved\n\n\n      insertRenderedElements(bindingData, rootElement);\n    };\n\n    var removeIfBinding = function removeIfBinding(bindingData) {\n      removeElemnetsByCommentWrap(bindingData); // remove cache.IterationBindingCache to prevent memory leak\n\n      if (bindingData.hasIterationBindingCache) {\n        delete bindingData.iterationBindingCache;\n        delete bindingData.hasIterationBindingCache;\n      }\n    };\n\n    /**\r\n     * if-Binding\r\n     * @description\r\n     * DOM decleartive for binding.\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     */\n\n    var ifBinding = function ifBinding(cache, viewModel, bindingAttrs$$1) {\n      var dataKey = cache.dataKey; // isOnce only return if there is no child bindings\n\n      if (!dataKey || cache.isOnce && cache.hasIterationBindingCache === false) {\n        return;\n      }\n\n      cache.elementData = cache.elementData || {};\n      cache.type = cache.type || bindingAttrs[\"if\"];\n      var oldViewModelProValue = cache.elementData.viewModelPropValue; // getViewModelPropValue could be return undefined or null\n\n      var viewModelPropValue = getViewModelPropValue(viewModel, cache) || false; // do nothing if viewModel value not changed and no child bindings\n\n      if (oldViewModelProValue === viewModelPropValue && !cache.hasIterationBindingCache) {\n        return;\n      }\n\n      var shouldRender = Boolean(viewModelPropValue); // remove this cache from parent array\n\n      if (!shouldRender && cache.isOnce && cache.el.parentNode) {\n        removeElement(cache.el); // delete cache.fragment;\n\n        removeBindingInQueue({\n          viewModel: viewModel,\n          cache: cache\n        });\n        return;\n      } // store new show status\n\n\n      cache.elementData.viewModelPropValue = viewModelPropValue; // only create fragment once\n      // wrap comment tag around\n      // remove if attribute from original element to allow later dataBind parsing\n\n      if (!cache.fragment) {\n        wrapCommentAround(cache, cache.el);\n        cache.el.removeAttribute(bindingAttrs$$1[\"if\"]);\n        createClonedElementCache(cache);\n      }\n\n      if (!shouldRender) {\n        // remove element\n        removeIfBinding(cache);\n      } else {\n        // render element\n        renderIfBinding({\n          bindingData: cache,\n          viewModel: viewModel,\n          bindingAttrs: bindingAttrs$$1\n        }); // if render once\n        // remove this cache from parent array if no child caches\n\n        if (cache.isOnce && !cache.hasIterationBindingCache) {\n          // delete cache.fragment;\n          removeBindingInQueue({\n            viewModel: viewModel,\n            cache: cache\n          });\n        }\n      }\n    };\n\n    var removeBindingInQueue = function removeBindingInQueue(_ref) {\n      var viewModel = _ref.viewModel,\n          cache = _ref.cache;\n      var ret = false;\n\n      if (viewModel.APP.postProcessQueue) {\n        viewModel.APP.postProcessQueue.push(function (cache, index) {\n          return function () {\n            cache[constants.PARENT_REF].splice(index, 1);\n          };\n        }(cache, cache[constants.PARENT_REF].indexOf(cache)));\n        ret = true;\n      }\n\n      return ret;\n    };\n\n    /**\r\n     * switch-Binding\r\n     * @description\r\n     * DOM decleartive switch binding.\r\n     * switch parent element wrap direct child with case bindings\r\n     * @param {object} cache\r\n     * @param {object} viewModel\r\n     * @param {object} bindingAttrs\r\n     */\n\n    var switchBinding = function switchBinding(cache, viewModel, bindingAttrs) {\n      var dataKey = cache.dataKey;\n\n      if (!dataKey) {\n        return;\n      }\n\n      cache.elementData = cache.elementData || {};\n      var newExpression = getViewModelPropValue(viewModel, cache);\n\n      if (newExpression === cache.elementData.viewModelPropValue) {\n        return;\n      }\n\n      cache.elementData.viewModelPropValue = newExpression; // build switch cases if not yet defined\n\n      if (!cache.cases) {\n        var childrenElements = cache.el.children;\n\n        if (!childrenElements.length) {\n          return;\n        }\n\n        cache.cases = [];\n\n        for (var i = 0, elementLength = childrenElements.length; i < elementLength; i += 1) {\n          var caseData = null;\n\n          if (childrenElements[i].hasAttribute(bindingAttrs[\"case\"])) {\n            caseData = createCaseData(childrenElements[i], bindingAttrs[\"case\"]);\n          } else if (childrenElements[i].hasAttribute(bindingAttrs[\"default\"])) {\n            caseData = createCaseData(childrenElements[i], bindingAttrs[\"default\"]);\n            caseData.isDefault = true;\n          } // create fragment by clone node\n          // wrap with comment tag\n\n\n          if (caseData) {\n            wrapCommentAround(caseData, caseData.el); // remove binding attribute for later dataBind parse\n\n            if (caseData.isDefault) {\n              caseData.el.removeAttribute(bindingAttrs[\"default\"]);\n            } else {\n              caseData.el.removeAttribute(bindingAttrs[\"case\"]);\n            }\n\n            createClonedElementCache(caseData);\n            cache.cases.push(caseData);\n          }\n        }\n      }\n\n      if (cache.cases.length) {\n        var hasMatch = false; // do switch operation - reuse if binding logic\n\n        for (var j = 0, casesLength = cache.cases.length; j < casesLength; j += 1) {\n          var newCaseValue = void 0;\n\n          if (cache.cases[j].dataKey) {\n            // set back to dataKey if nothing found in viewModel\n            newCaseValue = getViewModelPropValue(viewModel, cache.cases[j]) || cache.cases[j].dataKey;\n          }\n\n          if (newCaseValue === cache.elementData.viewModelPropValue || cache.cases[j].isDefault) {\n            hasMatch = true; // render element\n\n            renderIfBinding({\n              bindingData: cache.cases[j],\n              viewModel: viewModel,\n              bindingAttrs: bindingAttrs\n            }); // remove other elements\n\n            removeUnmatchCases(cache.cases, j);\n            break;\n          }\n        } // no match remove all cases\n\n\n        if (!hasMatch) {\n          removeUnmatchCases(cache.cases);\n        }\n      }\n    };\n\n    function removeUnmatchCases(cases, matchedIndex) {\n      cases.forEach(function (caseData, index) {\n        if (index !== matchedIndex || typeof matchedIndex === 'undefined') {\n          removeIfBinding(caseData); // remove cache.IterationBindingCache to prevent memory leak\n\n          if (caseData.hasIterationBindingCache) {\n            caseData.iterationBindingCache = null;\n            caseData.hasIterationBindingCache = false;\n          }\n        }\n      });\n    }\n\n    function createCaseData(node, attrName) {\n      var caseData = {\n        el: node,\n        dataKey: node.getAttribute(attrName),\n        type: attrName\n      };\n      return caseData;\n    }\n\n    /**\r\n     *  pubSub\r\n     * @description use jQuery object as pubSub\r\n     * @example EVENTS object strucure:\r\n     *  EVENTS = {\r\n            'EVENT-NAME': [{ 'comp-id': fn }],\r\n            'EVENT-NAME2': [{ 'comp-id': fn }]\r\n        };\r\n     */\n\n    var EVENTS = {};\n\n    var subscribeEvent = function subscribeEvent() {\n      var instance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var fn = arguments.length > 2 ? arguments[2] : undefined;\n      var isOnce = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!instance || !instance.compId || !eventName || typeof fn !== 'function') {\n        return;\n      }\n\n      var subscriber;\n      var isSubscribed = false;\n      eventName = eventName.replace(REGEX.WHITESPACES, '');\n      EVENTS[eventName] = EVENTS[eventName] || []; // check if already subscribed and update callback fn\n\n      isSubscribed = EVENTS[eventName].some(function (subscriber) {\n        if (subscriber[instance.compId]) {\n          subscriber[instance.compId] = fn.bind(instance.viewModel);\n          subscriber.isOnce = isOnce;\n          return true;\n        }\n      }); // push if not yet subscribe\n\n      if (!isSubscribed) {\n        subscriber = {};\n        subscriber[instance.compId] = fn.bind(instance.viewModel);\n        subscriber.isOnce = isOnce;\n        EVENTS[eventName].push(subscriber);\n      }\n    };\n\n    var subscribeEventOnce = function subscribeEventOnce() {\n      var instance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var fn = arguments.length > 2 ? arguments[2] : undefined;\n      subscribeEvent(instance, eventName, fn, true);\n    };\n\n    var unsubscribeEvent = function unsubscribeEvent() {\n      var compId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      if (!compId || !eventName) {\n        return;\n      }\n\n      var i = 0;\n      var subscribersLength = 0;\n      var subscriber;\n      eventName = eventName.replace(REGEX.WHITESPACES, '');\n\n      if (EVENTS[eventName]) {\n        subscribersLength = EVENTS[eventName].length;\n\n        for (i = 0; i < subscribersLength; i += 1) {\n          subscriber = EVENTS[eventName][i];\n\n          if (subscriber[compId]) {\n            EVENTS[eventName].splice(i, 1);\n            break;\n          }\n        }\n      } // delete the event if no more subscriber\n\n\n      if (!EVENTS[eventName].length) {\n        delete EVENTS[eventName];\n      }\n    };\n    /**\r\n     * unsubscribeAllEvent\r\n     * @description unsubscribe all event by compId. eg when a component removed\r\n     * @param {string} compId\r\n     */\n\n\n    var unsubscribeAllEvent = function unsubscribeAllEvent() {\n      var compId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (!compId) {\n        return;\n      }\n\n      Object.keys(EVENTS).forEach(function (eventName) {\n        unsubscribeEvent(compId, eventName);\n      });\n    };\n\n    var publishEvent = function publishEvent() {\n      var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (!eventName || !EVENTS[eventName]) {\n        return;\n      }\n\n      eventName = eventName.replace(REGEX.WHITESPACES, '');\n      EVENTS[eventName].forEach(function (subscriber) {\n        Object.keys(subscriber).forEach(function (compId) {\n          if (typeof subscriber[compId] === 'function') {\n            var ret = subscriber[compId].apply(subscriber, args);\n\n            if (subscriber.isOnce) {\n              unsubscribeEvent(compId, eventName);\n            }\n\n            return ret;\n          }\n        });\n      });\n    };\n\n    var pubSub = /*#__PURE__*/Object.freeze({\n        subscribeEvent: subscribeEvent,\n        subscribeEventOnce: subscribeEventOnce,\n        unsubscribeEvent: unsubscribeEvent,\n        unsubscribeAllEvent: unsubscribeAllEvent,\n        publishEvent: publishEvent\n    });\n\n    var compIdIndex = 0;\n\n    var Binder =\n    /*#__PURE__*/\n    function () {\n      function Binder($rootElement, viewModel, bindingAttrs$$1) {\n        _classCallCheck(this, Binder);\n\n        if ($rootElement instanceof window.jQuery && $rootElement.length) {\n          $rootElement = $rootElement.eq(0)[0];\n        }\n\n        if (!$rootElement || $rootElement.nodeType !== 1 || viewModel === null || _typeof(viewModel) !== 'object') {\n          throw new TypeError('$rootElement or viewModel is invalid');\n        }\n\n        this.initRendered = false;\n        this.compId = compIdIndex += 1;\n        this.$rootElement = $rootElement;\n        this.viewModel = viewModel;\n        this.bindingAttrs = bindingAttrs$$1;\n        this.render = debounceRaf(this.render, this);\n        this.isServerRendered = this.$rootElement.getAttribute(serverRenderedAttr) !== null; // inject instance into viewModel\n\n        this.viewModel.APP = this;\n        this.viewModel.$root = this.viewModel;\n        this.parseView(); // for jquery user set viewModel referece to $rootElement for easy debug\n        // otherwise use Expando to attach viewModel to $rootElement\n\n        if (window.jQuery) {\n          window.jQuery(this.$rootElement).data(bindingDataReference.rootDataKey, this.viewModel);\n        } else {\n          this.$rootElement[bindingDataReference.rootDataKey] = this.viewModel;\n        }\n\n        return this;\n      }\n      /**\r\n       * parseView\r\n       * @description\r\n       * @return {this}\r\n       * traver from $rootElement to find each data-bind-* element\r\n       * then apply data binding\r\n       */\n\n\n      _createClass(Binder, [{\n        key: \"parseView\",\n        value: function parseView() {\n          this.elementCache = createBindingCache({\n            rootNode: this.$rootElement,\n            bindingAttrs: this.bindingAttrs\n          }); // updateElementCache if server rendered on init\n\n          if (this.isServerRendered && !this.initRendered) {\n            this.updateElementCache({\n              templateCache: true\n            });\n          }\n\n          return this;\n        }\n        /**\r\n         * updateElementCache\r\n         * @param {object} opt\r\n         * @description call createBindingCache to parse view and generate bindingCache\r\n         */\n\n      }, {\n        key: \"updateElementCache\",\n        value: function updateElementCache() {\n          var _this = this;\n\n          var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var elementCache = opt.elementCache || this.elementCache;\n\n          if (opt.allCache) {\n            // walk dom from root element to regenerate elementCache\n            this.elementCache = createBindingCache({\n              rootNode: this.$rootElement,\n              bindingAttrs: this.bindingAttrs\n            });\n          } // walk from first rendered template node to create/update child bindingCache\n\n\n          if (opt.allCache || opt.templateCache) {\n            if (elementCache[this.bindingAttrs.tmp] && elementCache[this.bindingAttrs.tmp].length) {\n              elementCache[this.bindingAttrs.tmp].forEach(function (cache) {\n                // set skipCheck as skipForOfParseFn whenever an node has\n                // both template and forOf bindings\n                // then the template bindingCache should be an empty object\n                var skipForOfParseFn = null;\n\n                if (cache.el.hasAttribute(_this.bindingAttrs.forOf)) {\n                  skipForOfParseFn = function skipForOfParseFn() {\n                    return true;\n                  };\n                }\n\n                cache.bindingCache = createBindingCache({\n                  rootNode: cache.el,\n                  bindingAttrs: _this.bindingAttrs,\n                  skipCheck: skipForOfParseFn,\n                  isRenderedTemplate: opt.isRenderedTemplates\n                });\n              });\n            }\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var updateOption = {};\n\n          if (!this.initRendered) {\n            // only update eventsBinding if server rendered\n            if (this.isServerRendered) {\n              this.$rootElement.removeAttribute(serverRenderedAttr);\n              updateOption = createBindingOption(bindingUpdateConditions.serverRendered, opt);\n            } else {\n              updateOption = createBindingOption(bindingUpdateConditions.init, opt);\n            }\n          } else {\n            // when called again only update visualBinding options\n            updateOption = createBindingOption('', opt);\n          } // create postProcessQueue before start rendering\n\n\n          this.postProcessQueue = []; // render and apply binding to template(s)\n          // this is an share function therefore passing 'this' context\n\n          renderTemplatesBinding({\n            ctx: this,\n            elementCache: this.elementCache,\n            updateOption: updateOption,\n            bindingAttrs: this.bindingAttrs,\n            viewModel: this.viewModel\n          }); // apply bindings to rest of the DOM\n\n          Binder.applyBinding({\n            ctx: this,\n            elementCache: this.elementCache,\n            updateOption: updateOption,\n            bindingAttrs: this.bindingAttrs,\n            viewModel: this.viewModel\n          }); // trigger postProcess\n\n          Binder.postProcess(this.postProcessQueue); // clear postProcessQueue\n\n          this.postProcessQueue.length = 0;\n          delete this.postProcessQueue;\n          this.initRendered = true;\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n          var fn = arguments.length > 1 ? arguments[1] : undefined;\n          subscribeEvent(this, eventName, fn);\n          return this;\n        }\n      }, {\n        key: \"subscribeOnce\",\n        value: function subscribeOnce() {\n          var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n          var fn = arguments.length > 1 ? arguments[1] : undefined;\n          subscribeEventOnce(this, eventName, fn);\n          return this;\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe() {\n          var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n          unsubscribeEvent(this.compId, eventName);\n          return this;\n        }\n      }, {\n        key: \"unsubscribeAll\",\n        value: function unsubscribeAll() {\n          unsubscribeAllEvent(this.compId);\n          return this;\n        }\n      }, {\n        key: \"publish\",\n        value: function publish() {\n          var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          publishEvent.apply(pubSub, [eventName].concat(args));\n          return this;\n        }\n      }], [{\n        key: \"applyBinding\",\n        value: function applyBinding(_ref) {\n          var ctx = _ref.ctx,\n              elementCache = _ref.elementCache,\n              updateOption = _ref.updateOption,\n              bindingAttrs$$1 = _ref.bindingAttrs,\n              viewModel = _ref.viewModel;\n\n          if (!elementCache || !updateOption) {\n            return;\n          } // the follow binding should be in order for better efficiency\n          // apply forOf Binding\n\n\n          if (updateOption.forOfBinding && elementCache[bindingAttrs$$1.forOf] && elementCache[bindingAttrs$$1.forOf].length) {\n            elementCache[bindingAttrs$$1.forOf].forEach(function (cache) {\n              forOfBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply attr Binding\n\n\n          if (updateOption.attrBinding && elementCache[bindingAttrs$$1.attr] && elementCache[bindingAttrs$$1.attr].length) {\n            elementCache[bindingAttrs$$1.attr].forEach(function (cache) {\n              attrBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply if Binding\n\n\n          if (updateOption.ifBinding && elementCache[bindingAttrs$$1[\"if\"]] && elementCache[bindingAttrs$$1[\"if\"]].length) {\n            elementCache[bindingAttrs$$1[\"if\"]].forEach(function (cache) {\n              ifBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply show Binding\n\n\n          if (updateOption.showBinding && elementCache[bindingAttrs$$1.show] && elementCache[bindingAttrs$$1.show].length) {\n            elementCache[bindingAttrs$$1.show].forEach(function (cache) {\n              showBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply switch Binding\n\n\n          if (updateOption.switchBinding && elementCache[bindingAttrs$$1[\"switch\"]] && elementCache[bindingAttrs$$1[\"switch\"]].length) {\n            elementCache[bindingAttrs$$1[\"switch\"]].forEach(function (cache) {\n              switchBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply text binding\n\n\n          if (updateOption.textBinding && elementCache[bindingAttrs$$1.text] && elementCache[bindingAttrs$$1.text].length) {\n            elementCache[bindingAttrs$$1.text].forEach(function (cache) {\n              textBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply cssBinding\n\n\n          if (updateOption.cssBinding && elementCache[bindingAttrs$$1.css] && elementCache[bindingAttrs$$1.css].length) {\n            elementCache[bindingAttrs$$1.css].forEach(function (cache) {\n              cssBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply model binding\n\n\n          if (updateOption.modelBinding && elementCache[bindingAttrs$$1.model] && elementCache[bindingAttrs$$1.model].length) {\n            elementCache[bindingAttrs$$1.model].forEach(function (cache) {\n              modelBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply change binding\n\n\n          if (updateOption.changeBinding && elementCache[bindingAttrs$$1.change] && elementCache[bindingAttrs$$1.change].length) {\n            elementCache[bindingAttrs$$1.change].forEach(function (cache) {\n              changeBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply submit binding\n\n\n          if (updateOption.submitBinding && elementCache[bindingAttrs$$1.submit] && elementCache[bindingAttrs$$1.submit].length) {\n            elementCache[bindingAttrs$$1.submit].forEach(function (cache) {\n              submitBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply click binding\n\n\n          if (updateOption.clickBinding && elementCache[bindingAttrs$$1.click] && elementCache[bindingAttrs$$1.click].length) {\n            elementCache[bindingAttrs$$1.click].forEach(function (cache) {\n              clickBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply double click binding\n\n\n          if (updateOption.dblclickBinding && elementCache[bindingAttrs$$1.dblclick] && elementCache[bindingAttrs$$1.dblclick].length) {\n            elementCache[bindingAttrs$$1.dblclick].forEach(function (cache) {\n              dblclickBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply blur binding\n\n\n          if (updateOption.blurBinding && elementCache[bindingAttrs$$1.blur] && elementCache[bindingAttrs$$1.blur].length) {\n            elementCache[bindingAttrs$$1.blur].forEach(function (cache) {\n              blurBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply focus binding\n\n\n          if (updateOption.focusBinding && elementCache[bindingAttrs$$1.focus] && elementCache[bindingAttrs$$1.focus].length) {\n            elementCache[bindingAttrs$$1.focus].forEach(function (cache) {\n              focusBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          } // apply hover binding\n\n\n          if (updateOption.hoverBinding && elementCache[bindingAttrs$$1.hover] && elementCache[bindingAttrs$$1.hover].length) {\n            elementCache[bindingAttrs$$1.hover].forEach(function (cache) {\n              hoverBinding(cache, viewModel, bindingAttrs$$1, updateOption.forceRender);\n            });\n          }\n        }\n      }, {\n        key: \"postProcess\",\n        value: function postProcess(tasks) {\n          if (!tasks || !tasks.length) {\n            return;\n          }\n\n          each(tasks, function (index, task) {\n            if (typeof task === 'function') {\n              try {\n                task();\n              } catch (err) {\n                throwErrorMessage(err, 'Error postProcess: ' + String(task));\n              }\n            }\n          });\n        }\n      }]);\n\n      return Binder;\n    }();\n\n    var renderTemplatesBinding = function renderTemplatesBinding(_ref2) {\n      var ctx = _ref2.ctx,\n          elementCache = _ref2.elementCache,\n          updateOption = _ref2.updateOption,\n          bindingAttrs$$1 = _ref2.bindingAttrs,\n          viewModel = _ref2.viewModel;\n\n      if (!elementCache || !bindingAttrs$$1) {\n        return false;\n      } // render and apply binding to template(s) and forOf DOM\n\n\n      if (elementCache[bindingAttrs$$1.tmp] && elementCache[bindingAttrs$$1.tmp].length) {\n        // when re-render call with {templateBinding: true}\n        // template and nested templates\n        if (updateOption.templateBinding) {\n          // overwrite updateOption with 'init' bindingUpdateConditions\n          updateOption = createBindingOption(bindingUpdateConditions.init);\n          elementCache[bindingAttrs$$1.tmp].forEach(function ($element) {\n            renderTemplate($element, viewModel, bindingAttrs$$1, elementCache);\n          }); // update cache after all template(s) rendered\n\n          ctx.updateElementCache({\n            templateCache: true,\n            elementCache: elementCache,\n            isRenderedTemplates: true\n          });\n        } // enforce render even element is not in DOM tree\n\n\n        updateOption.forceRender = true; // apply bindings to rendered templates element\n\n        elementCache[bindingAttrs$$1.tmp].forEach(function (cache) {\n          Binder.applyBinding({\n            elementCache: cache.bindingCache,\n            updateOption: updateOption,\n            bindingAttrs: bindingAttrs$$1,\n            viewModel: viewModel\n          });\n        });\n      }\n\n      return true;\n    };\n    /**\r\n     * createBindingOption\r\n     * @param {string} condition\r\n     * @param {object} opt\r\n     * @description\r\n     * generate binding update option object by condition\r\n     * @return {object} updateOption\r\n     */\n\n\n    var createBindingOption = function createBindingOption() {\n      var condition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var visualBindingOptions = {\n        templateBinding: false,\n        textBinding: true,\n        cssBinding: true,\n        ifBinding: true,\n        showBinding: true,\n        modelBinding: true,\n        attrBinding: true,\n        forOfBinding: true,\n        switchBinding: true\n      };\n      var eventsBindingOptions = {\n        changeBinding: true,\n        clickBinding: true,\n        dblclickBinding: true,\n        blurBinding: true,\n        focusBinding: true,\n        hoverBinding: true,\n        submitBinding: true\n      }; // this is visualBindingOptions but everything false\n      // concrete declear for performance purpose\n\n      var serverRenderedOptions = {\n        templateBinding: false,\n        textBinding: false,\n        cssBinding: false,\n        ifBinding: false,\n        showBinding: false,\n        modelBinding: false,\n        attrBinding: false,\n        forOfBinding: false,\n        switchBinding: false\n      };\n      var updateOption = {};\n\n      switch (condition) {\n        case bindingUpdateConditions.serverRendered:\n          updateOption = extend({}, eventsBindingOptions, serverRenderedOptions, opt);\n          break;\n\n        case bindingUpdateConditions.init:\n          // flag templateBinding to true to render tempalte(s)\n          opt.templateBinding = true;\n          updateOption = extend({}, visualBindingOptions, eventsBindingOptions, opt);\n          break;\n\n        default:\n          // when called again only update visualBinding options\n          updateOption = extend({}, visualBindingOptions, opt);\n      }\n\n      return updateOption;\n    };\n    /**\r\n     * renderIteration\r\n     * @param {object} opt\r\n     * @description\r\n     * render element's binding by supplied elementCache\r\n     * This function is desidned for FoOf, If, switch bindings\r\n     */\n\n\n    var renderIteration = function renderIteration(_ref3) {\n      var elementCache = _ref3.elementCache,\n          iterationVm = _ref3.iterationVm,\n          bindingAttrs$$1 = _ref3.bindingAttrs,\n          isRegenerate = _ref3.isRegenerate;\n      var bindingUpdateOption = isRegenerate ? createBindingOption(bindingUpdateConditions.init) : createBindingOption(); // enforce render even element is not in DOM tree\n\n      bindingUpdateOption.forceRender = true; // render and apply binding to template(s)\n      // this is an share function therefore passing current APP 'this' context\n      // viewModel is a dynamic generated iterationVm\n\n      renderTemplatesBinding({\n        ctx: iterationVm.$root ? iterationVm.$root.APP : iterationVm.APP,\n        elementCache: elementCache,\n        updateOption: bindingUpdateOption,\n        bindingAttrs: bindingAttrs$$1,\n        viewModel: iterationVm\n      });\n      Binder.applyBinding({\n        elementCache: elementCache,\n        updateOption: bindingUpdateOption,\n        bindingAttrs: bindingAttrs$$1,\n        viewModel: iterationVm\n      });\n    };\n\n    var bindingAttrs$1 = bindingAttrs;\n    var templateSettings$1 = templateSettings;\n\n    var use = function use() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (settings.bindingAttrs) {\n        bindingAttrs$1 = $.extend({}, settings.bindingAttrs);\n      }\n\n      if (settings.templateSettings) {\n        templateSettings$1 = $.extend({}, settings.templateSettings);\n      }\n    };\n\n    var init = function init($rootElement) {\n      var viewModel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      _.templateSettings = templateSettings$1;\n      return new Binder($rootElement, viewModel, bindingAttrs$1);\n    }; // expose to global\n\n\n    window.dataBind = {\n      use: use,\n      init: init,\n      version: '@version@'\n    };\n\n}());\n"]}